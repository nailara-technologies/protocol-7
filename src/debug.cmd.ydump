# >:]

# name  = debug.cmd.ydump
# param = [key_pattern]
# descr = dump internal program state

my $d_ref;
my $keyword = $$call{'args'} // '';
if ( length($keyword) and not eval {qr{$keyword}} ) {
    ( my $regex_err = lc($EVAL_ERROR) ) =~ s| in regex.+\n$||;
    return {
        'mode' => 'nak',
        'data' => "expected a valid pattern .:[ $regex_err in regex ]::"
    };
} elsif ( length($keyword) ) {
    $d_ref = ${ <[base.resolve_key]>->($keyword) };
} else {
    $d_ref = \%data;
}

return {
    'mode' => 'nak',
    'data' => "failed to resolve key '$keyword'"
    }
    if !length( ref($d_ref) );

$reply = {
    'mode' => 'data',
    'data' => "#:Y::['$keyword'].\n\n" . YAML::XS::Dump($d_ref) . "\n#:Y::.\n"
};

# ______________________________________________________________________________
#\\CIH4H6XL3PUMIZ4CBKD4RLA3WGPQOXJFDEYKTXMN3MQAT4SGUL2OIEB4L5JNM5F3RTSHFLHKY5AAK
# \\ W5UW7QDUMFRV6BZDNOZMHE6BRYCQWCFKXMFGPC7FT7RBL7BN5PEZ \\// C25519-BASE-32 //
#  \\// NL3NNHC576T3B6FOLKM65RICW54X5AJYAMJMBWJAWNDPJBCQQBQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
