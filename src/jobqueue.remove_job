# >:]

# name = jobqueue.remove_job

my $job_id   = shift;
my $jobs     = <jobqueue.joblist.by_id>;
my $job_list = <jobqueue.joblist>;
my $prio     = $jobs->{$job_id}->{'priority'};
die "expected numerical job id" if not defined $job_id or $job_id !~ /^\d+$/;

if ( not exists $jobs->{$job_id} or not defined $prio ) {
    <[base.log]>->( 2, "remove_job: a job with id $job_id does not exist" );
    return undef;
}
<[base.log]>->( 2, "removing job $job_id" );

my $queue_name = $jobs->{$job_id}->{'status'};
my $job_queue  = $job_list->{$queue_name};

foreach my $del_queue ( $job_queue->{'by_priority'}->{$prio},
    $job_queue->{'by_timestamp'} ) {
    my $del_index = 0;
    map {
        splice( @$del_queue, $del_index, 1 ) if $ARG == $job_id;
        $del_index++
    } @$del_queue;
}

return ( delete $jobs->{$job_id} );

# ______________________________________________________________________________
#\\KILPJIQNNMWMVBNRXP6ZB6IKKEZ6JGEBTCFSNTSIXZNTKTMP2XBLEEGC2EXQIWNCTL7UKMMHYPHUM
# \\ 3LZWVVMUTZNFR5K7P7XADJGVZTJDXJOZNRABENIWS5LEEZ5IJRH3 \\// C25519-BASE-32 //
#  \\// DCTZEYYFX66ELI3LEXIMMOIAYV53NWPUK262OPEY3GR7M2U4YBQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
