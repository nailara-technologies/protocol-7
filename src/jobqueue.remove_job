# >:]

# name = jobqueue.remove_job

my $job_id   = shift;
my $jobs     = <jobqueue.joblist.by_id>;
my $job_list = <jobqueue.joblist>;
my $prio     = $jobs->{$job_id}->{'priority'};
die "expected numerical job id" if not defined $job_id or $job_id !~ /^\d+$/;

if ( not exists $jobs->{$job_id} or not defined $prio ) {
    <[base.log]>->( 2, "remove_job: a job with id $job_id does not exist" );
    return undef;
}
<[base.log]>->( 2, "removing job $job_id" );

my $queue_name = $jobs->{$job_id}->{'status'};
my $job_queue  = $job_list->{$queue_name};

foreach my $del_queue ( $job_queue->{'by_priority'}->{$prio},
    $job_queue->{'by_timestamp'} ) {
    my $del_index = 0;
    map { splice( @$del_queue, $del_index, 1 ) if $_ == $job_id; $del_index++ }
        @$del_queue;
}

return ( delete $jobs->{$job_id} );

# ______________________________________________________________________________
#\\BOFICGWRR2PPP7O3DA2HRLJFRFIPITMN32A64MC3E332B6DS4NWNB7PQHFO6LHWNDE4DYRFMHDI6O
# \\ 6LWWTEGXG54URPYW2IF4R5J5W2U75LFHCOH3JKX4US3KGD5LG2SW \\// C25519-BASE-32 //
#  \\// SLQ2FBERVNVO6HB7QLGYGPAYEQPBGCQA73YJFBTC6KDTDYF3GDY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
