# >:]

# name  = xserver.handler.global_hotkeys

my $watcher = shift->w;

<xserver.hotkeys>            //= {};
<xserver.hotkeys.configured> //= {};
<xserver.hotkeys.triggered>  //= {};
<xserver.hotkeys.last_key>   //= {};
<xserver.loglevel.keys>      //= 2;

my $qkmap = eval { <xserver.x11>->QueryKeymap };

if ( not defined $qkmap ) {    # XXX: implement reconnect / restart procedure!!
    <[base.log]>->(
        0, "<!> X11 protocol error during 'QueryKeymap' command <!>"
    );
    return;
}

my $dq_e = [ <xserver.x11>->dequeue_event ];

if ( @{$dq_e} ) {
    $watcher->now;             # <- again, there might be more events queued..
} else {
    return;                    # <- no, there weren't
}

my $no_key_pressed = $qkmap =~ /^\0+$/ ? 1 : 0;

my %event = @$dq_e;

# print STDERR Dumper( \%event );

my $event_type = $event{'name'} =~ /^Key(Press|Release)$/ ? lc($1) : undef;

return if not defined $event_type;

my $keycode   = $event{'detail'};
my $mod_state = $event{'state'};
my $triggered = <xserver.hotkeys.triggered>;

$triggered->{$event_type}{'keycode'}{$keycode}{'mod_state'}{$mod_state} = 1;
$triggered->{$event_type}{'mod_state'}{$mod_state}{'keycode'}{$keycode} = 1;
<xserver.hotkeys.last_key> = {
    'keycode'    => $keycode,
    'mod_state'  => $mod_state,
    'event_type' => $event_type
};

<[base.log]>->(
    <xserver.loglevel.keys>,
    sprintf(
        "<KEY> %-8s [ keycode  : %3s  ]  modifier : %d",
        $event_type, $keycode, $mod_state
    )
);

# XXX: process key ...

if ($no_key_pressed) {

    # XXX: process key ...

    delete <xserver.hotkeys.last_key>;
    delete <xserver.hotkeys.triggered>;
}
