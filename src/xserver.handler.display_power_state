# >:]

# name = xserver.handler.display_power_state

return
    if defined <xserver.display_power_state>
    and <xserver.display_power_state> == <xserver.display_connected.any>;

<xserver.display_power_state> = <xserver.display_connected.any>;

if ( !<xserver.display_power_state> ) {
    <[base.log]>->( 0, "<(-)> display is now < OFF > / disconnected <(-)>" );
} else {
    <[base.log]>->( 0, "<(+)> display is now < ON > / connected <(+)>" );

    ## verifying screen sizes ##
    my $restarting = 0;
    my @max_size   = <[xserver.max_screen_size]>;
    if (   $max_size[0] != <xserver.x11>->width_in_pixels
        or $max_size[1] != <xserver.x11>->height_in_pixels ) {
        <[base.log]>->( 0, "<!> maximum screen size has changed <!>" );
        if (<[xserver.cmd.set_screen_size]>->(
                { 'args' => join( 'x', @max_size ) }
            )->{'mode'} eq 'nak'
        ) {
            <[base.log]>->(
                0, " <<< restarting xserver .., [ unable to resize ] >>>"
            );
            $restarting = 1;
            <[base.proto.nailara.command.send.local]>->(
                {   'command'   => 'core.nroot.restart',
                    'call_args' => { 'args' => <system.agent.name> }
                }
            );
        } else { # LLL: stop GPU load monitoring if switched back from 4K to 2K.

        }
    }

    if ( !$restarting ) {

        # LLL: show optional splash screen ...
    }
}

# ______________________________________________________________________________
#\\WWRFL75FRHRNM7BN2R3I7NFM4U2MH42UHT3WISHO774P27CO7FB2ZULKRI2PC2VYZRY6DRSWQ4WS4
# \\ CHWHI6OLG6XH37NRVPVYQASMBMMDDUAS5KGQXJSMIBXR5T4QUFRH \\// C25519-BASE-32 //
#  \\// UPPMYX45CWPAGM2PGBZTBH3VTH6VDMQOASK3WHQK47KFMWBW6AQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
