# >:]

# name = base.start.renice_child

<[base.log]>->( 1, "starting 'renice' child..," );

<system.path.perl_bin> //= <[base.get_path.perl_exec]>;

eval 'use IPC::Open2';
die $EVAL_ERROR if $EVAL_ERROR;

( my $agent_name = <system.agent.name> ) =~ s|[^_\.\-\w]+||g;
my $child_code = << "EOT";
use strict; use warnings; use English;
map { \$SIG{\$ARG} = 'IGNORE' } qw| INT TERM QUIT |;
\$PROGRAM_NAME = q|$agent_name-<root>-'renice'-child|;
setpriority( 0, \$1, \$2 ) if <STDIN> =~ m|^(\\d+) (\\-?\\d+)\$|
EOT

$SIG{'CHLD'} = 'IGNORE';

<process.renice_child.pid>
    = open2( <process.renice_child.r_fh>, <process.renice_child.w_fh>,
    <system.path.perl_bin>, '-e', $child_code )
    || die "unable to start perl renice child process [$OS_ERROR]";

<[base.log]>->(
    1, ": child process started [pid=" . <process.renice_child.pid> . "]"
);

return <process.renice_child.w_fh>;

# ______________________________________________________________________________
#\\6L47U7QFG5HICBWAZAZQAYUKMCJTEKMANZJWN6PSOWZFHZSKVPCBF7IRNPHC55NM22CS525NLZT3C
# \\ SFWR3F7JPI7NCF5JVMRPJOHWAPHUZ3I57O6FHF6WAKJBUHKJS6BU \\// C25519-BASE-32 //
#  \\// YWHZXZYLNXQ474X2QXX7LQUYNLNNAA75R2WI5LRLZY66I2GAQCA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
