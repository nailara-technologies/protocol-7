# >:]

# name = crypt.C25519.chk_key_dir

my $key_vars = <[crypt.C25519.key_vars]>;

my $key_dir = $key_vars->{'key_dir'};
my $uid     = $key_vars->{'uid'};
my $gid     = $key_vars->{'gid'};

if ( -w "$key_dir/.." or "$key_dir/../.." ) {
    if ( !-d $key_dir ) {
        <[base.log]>->( 1, "creating key directory '$key_dir' .." );
        eval {
            make_path( $key_dir, { mode => 0700, uid => $uid, group => $gid } );
        };
        warn $@   if $@;
        return -2 if !-d $key_dir;    # <- error state
        return 1;                     # success [dir exists now]
    }
} elsif ( !-r $key_dir or !-d $key_dir ) {
    my $perms     = -e $key_dir ? '' : ' (permissions)';
    my $log_level = <crypt.C25519.initialized> // 0;
    $log_level++ if $log_level;
    <[base.log]>->( $log_level, "no key dir$perms ['$key_dir']!" );
    return -1;                        # <- error state
}

return 1                              # <- success [true]

# ______________________________________________________________________________
#\\NZFVP6LS7ATMCPE2OFH3MHFEITBRRXPNEW2VNAETPLIFGG4G7DX4JYAWMBDUIXQ7JQDWYD3E3XCIG
# \\ Y5J5CVHRA3SI2GP4J2LZIKEZZ36KSDSXSZCHRTSIFBPB3RDJOW63 \\// C25519-BASE-32 //
#  \\// MIN3MY6NA2B52PPT3CE3EN2W74NKATWVXZTRUQMGGQLVJBCNUDA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
