# >:]

# name  = base.parser.txt_box
# descr = render an ascii frame around the supplied text and return the result

my $param     = shift;
my $title_str = shift // '';    # <- optional title string as second parameter

my $t_ref   = ref($param) eq 'SCALAR' ? $param : \$param;
my @lines   = split( /\n/, $$t_ref );
my $max_len = 0;

$max_len = length($title_str) + 2 if length($title_str);    # <- third param.?

map { $max_len = length($ARG) if length($ARG) > $max_len } @lines;
my $len_2     = $max_len + 5;
my $title_bar = '  ,' . '.' x $len_2 . ',';

if ( length($title_str) ) {
    substr(
        $title_bar,
        -7 - length($title_str),
        length($title_str) + 4,
        "[ $title_str ]"
    );
}

return join( "\n",
    '',
    $title_bar,
    '  :' . ' ' x $len_2 . ':',
    ( map { sprintf '  :   %-' . $max_len . "s  :", $ARG } sort @lines ),
    '  :' . ' ' x $len_2 . ':',
    '  :' . '.' x $len_2 . ":\n",
    '' );

# ______________________________________________________________________________
#\\J7OY5REMR4YXMIRXEQ2KXLOUTCLGIIL526C3NXEQPVAY5VUMHAKCXWKSO74TM3DL2YVYMJOJDVG7S
# \\ 2BSI4ZDATZXLJ3WKTTHHNAIIAD77EY6NZ6YBCMX2HANA7YRJX2CN \\// C25519-BASE-32 //
#  \\// PC5HHCUWO6EC6FVV5GZJT7QOMYK7YT66UGGWGRIAHHHCW23SGDY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
