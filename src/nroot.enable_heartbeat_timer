# >:]

# name = nroot.enable_heartbeat_timer

my ( $instance_id, $after, $interval ) = @_;
die "no instance id specified" if not defined $instance_id;

my $globals      = <nroot.start_setup.globals> || {};
my $instance     = <nroot.agent.instance>->{$instance_id};
my $agent_id     = $instance->{'agent_id'};
my $agent_name   = <nroot.agent.setup>->{$agent_id}->{'name'};
my $agent_config = <nroot.start_setup.agents.config>->{$agent_name};

my $status_timer_delay
    = $after // $agent_config->{'heartbeat'}->{'after'}
    // $globals->{'heartbeat'}->{'after'}
    // 2.1;    # <- [ initial ] heartbeat delay [ when not configured ]

my $status_timer_interval
    = $interval // $agent_config->{'heartbeat'}->{'interval'}
    // $globals->{'heartbeat'}->{'interval'}
    // 5.7;    # <- heartbeat interval [ when not configured ]

<[base.log]>->(
    2,
    ": instance $instance_id new status timer setup "
        . "[${status_timer_delay}s,int=$status_timer_interval]"
);

<[base.clean_hashref]>->($globals);
<[base.clean_hashref]>->($agent_config);

$instance->{'heartbeat'}                    //= {};
$instance->{'heartbeat'}->{'retry_count'}   //= 2;
$instance->{'heartbeat'}->{'retry_timeout'} //= 2.1;    ## decreased timeout ##

# set up new status timer..,
$instance->{'timer'}->{'heartbeat-status'} = <[event.add_timer]>->(
    {   'after'    => $status_timer_delay,
        'interval' => $status_timer_interval + sprintf( "%.3f", rand(1.2) ),
        'handler'  => 'nroot.handler.heartbeat_timer',
        'data'     => $instance_id
    }
);

# ______________________________________________________________________________
#\\QSPWY5LP63A75QV3DMYI4COTL4JF3SOG73S7XTUOVNSUNKQPDNZICMVYY4MZPNGKZGY5LMUTJTRPG
# \\ NWXP4XXLATMJTWS4CYHF63427MPUZ7IFGGNMIQGB3RWSHJHTBWV5 \\// C25519-BASE-32 //
#  \\// A5THIE225GM7LHEBNI2JLD4E5I4FAA2HIZJ2UU56VRVS2EVYGDQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
