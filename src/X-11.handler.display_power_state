# >:]

# name = X-11.handler.display_power_state

return
    if defined <X-11.display_power_state>
    and <X-11.display_power_state> == <X-11.display_connected.any>;

<X-11.display_power_state> = <X-11.display_connected.any>;

if ( !<X-11.display_power_state> ) {
    <[base.log]>->( 0, "<(-)> display is now < OFF > / disconnected <(-)>" );
} else {
    <[base.log]>->( 0, "<(+)> display is now < ON > / connected <(+)>" );

    ## verifying screen sizes ##
    my $restarting = 0;
    my @max_size   = <[X-11.max_screen_size]>;
    if (   $max_size[0] != <X-11.obj>->width_in_pixels
        or $max_size[1] != <X-11.obj>->height_in_pixels ) {
        <[base.log]>->( 0, "<!> maximum screen size has changed <!>" );
        if (<[X-11.cmd.set_screen_size]>->(
                { 'args' => join( 'x', @max_size ) }
            )->{'mode'} eq 'nak'
        ) {
            <[base.log]>->(
                0, " <<< restarting X-11 .., [ unable to resize ] >>>"
            );
            $restarting = 1;
            <[base.proto.nailara.command.send.local]>->(
                {   'command'   => 'core.nroot.restart',
                    'call_args' => { 'args' => <system.agent.name> }
                }
            );
        } else { # LLL: stop GPU load monitoring if switched back from 4K to 2K.

        }
    }

    if ( !$restarting ) {

        # LLL: show optional splash screen ...
    }
}

# ______________________________________________________________________________
#\\46X7GEZKIPX2WAOY5NEF5NDF2AMDXGK4S4GALD7AENOPJLPZ5OG455OPUKV5FSWMDBDOFWXW6VZS6
# \\ JE2PF56NPSL4KJIQNMUHHFQOMTKSCIO3YTF6D454ITBMIPS2M7DU \\// C25519-BASE-32 //
#  \\// 3QKWT7SC5QBCETU74NQEE3525ZVQS6E3VZTSO74P7ILIPASACBQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
