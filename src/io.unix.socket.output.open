# >:]

# name = io.unix.socket.output.open

my $socket_file = $_[0];

if ( !-S $socket_file ) {
    <[base.log]>->(
        0, "[!] unix domain socket '$socket_file' does not exist.,"
    );
    return undef;
}

my $return_socket = IO::Socket::UNIX->new(
    Type => SOCK_STREAM(),
    Peer => $socket_file,
    )
    or <[base.log]>->(
    0, "io.unix.socket.output.open: $OS_ERROR! ('$socket_file')"
    );

if (    defined $return_socket
    and -S $return_socket
    and $return_socket->connected ) {
    <[base.log]>->( 1, "connected to unix socket [$socket_file]" );

    $data{'handle'}{$return_socket}{'link'} = 'unix';
    $data{'handle'}{$return_socket}{'mode'} = 'output';

    return $return_socket;
} else {
    <[base.log]>->(
        0, "[!] can't connect to unix socket [$socket_file]: $OS_ERROR"
    );
    return 0;
}

# ______________________________________________________________________________
#\\NK67ERHTO4KK5F7OFPRS5NX74QWVVIA73BOQF6KJVNXJMUW6VXJFXBMIVYYLZMGI4KX5AMNYSLAGK
# \\ 6OW6QZKJ2LBN4JK3BMGKNVTVD7EUJMXB4PGIAYNM5HQUEN2BRTQE \\// C25519-BASE-32 //
#  \\// DAJTT6CF4JXA4MAWDKFSMHGCABZPUPUI5BPVGTE6QDU2SL5HGCQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
