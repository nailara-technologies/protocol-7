# >:]

# name = io.unix.socket.output.open

my $socket_file = $_[0];

if ( !-S $socket_file ) {
    <[base.log]>->(
        0, "[!] unix domain socket '$socket_file' does not exist.,"
    );
    return undef;
}

my $return_socket = IO::Socket::UNIX->new(
    Type => SOCK_STREAM(),
    Peer => $socket_file,
    )
    or <[base.log]>->( 0, "io.unix.socket.output.open: $!! ('$socket_file')" );

if (    defined $return_socket
    and -S $return_socket
    and $return_socket->connected ) {
    <[base.log]>->( 1, "connected to unix socket [$socket_file]" );

    $data{'handle'}{$return_socket}{'link'} = 'unix';
    $data{'handle'}{$return_socket}{'mode'} = 'output';

    return $return_socket;
} else {
    <[base.log]>->( 0, "[!] can't connect to unix socket [$socket_file]: $!" );
    return 0;
}

# ______________________________________________________________________________
#\\2A2DWTBBYS5JY4XI5GVHAVGQOHEG6IDK6ZPEHXP2VXNDSSNJRM5LDMBQSEDQHBDCM6E4GQ3NUJUXU
# \\ NHO44ZAC7CTELY4RSSUQ6JLZMSNT5OQDQFZ6PIYXRPCHGTK7YEGN \\// C25519-BASE-32 //
#  \\// T6OTUB452JSRMYZRWLBGBATRYUPKISAGB7PENHV53SWVZOKR6AI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
