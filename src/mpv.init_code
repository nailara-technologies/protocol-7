# >:]

# name = mpv.init_code

<[base.perlmod.autoload]>->('JSON::XS');
<[base.perlmod.autoload]>->( 'IPC::Open3', qw | open3 | );
<[base.perlmod.load]>->( 'File::Path', qw| make_path | );

<mpv.json.parser> = JSON::XS->new->pretty(0);

<mpv.bin_path> //= <[base.required_bin_path]>->('mpv');

die "[!] mpv binary not found, aborting startup.,"
    if not defined <mpv.bin_path>
    or !length(<mpv.bin_path>)
    or !-x <mpv.bin_path>;

<[mpv.init_settings_map]>;

<list.settings> = {
    'var'      => 'data',
    'key'      => 'mpv.map.settings',
    'mask'     => '<key>:key_name key:mpv_setting_name',
    'defaults' => { 'key' => '<key>' },
    'align'    => { 'key' => 'center' },
    'descr'    => 'adjustable mpv set-up'
};

<mpv.current.volume>     //= 100;
<mpv.start_volume>       //= 100;            # <- ./cfg/agents/mpv
<mpv.fade_in>            //= 0;              # <- video fade (in)
<mpv.fade_idle_volume>   //= 1;              # <- audio zero-vol/fade-in on idle
<mpv.reply_ids>          //= [];
<mpv.pause_next>         //= 0;
<mpv.autorescale>        //= 0;
<mpv.disable_reenc_msg>  //= 0;
<mpv.file_map.rescaled>  //= {};
<mpv.xmode.xephyr.vo>    //= 'sdl';
<mpv.xmode.xephyr.hwdec> //= 'auto';
<mpv.fade_start_geom>    //= '1x1--0--0';
<system.agent.mode>      //= 'stand-alone';
<mpv.agent_title>
    = <system.agent.mode> eq 'universal-child'
    ? 'universal.mpv'
    : <system.agent.name>;
<mpv.current.load_iteration> //= 0;
<mpv.cleanup_rescaled_after> //= 0;    # <- 0 [days] means no cleanup [disabled]
<mpv.cleanup_check_delay>    //= 42 + int( rand(237) );       # first file check
<mpv.cleanup_check_interval> //= 3600 + int( rand(7200) );    # 1-3 hrs [repeat]
<mpv.reenc_refresh_interval> //= 3.3;                         # seconds
<mpv.rescaled_extension>     //= 'mp4';
<mpv.current.volume>         //= 100;                         # will be set to 0

<mpv.playlist_type> //= 'video'; # eventually changed to audio ['audio' subname]

## overriding ## no audio fade in 'universal-child' mode ## [LLL] change later ?
<mpv.fade_idle_volume> = 0 if <system.agent.mode> eq 'universal-child';

if ( <mpv.autorescale> and defined <mpv.rescale_path> ) {
    <[mpv.check_rescale_path]>;
    if ( defined <mpv.rescale_path>
        and <mpv.cleanup_rescaled_after> ) {    # <- 0 == cleanup disabled
        <[base.log]>->(
            2, ": rescale path does exist ['" . <mpv.rescale_path> . "']"
        );
        <mpv.timer.rescaled_check> = <[event.add_timer]>->(
            {   'after'    => <mpv.cleanup_check_delay>,
                'interval' => <mpv.cleanup_check_interval>,
                'handler'  => 'mpv.handler.scan_encoded_timer'
            }
        );
    }
}

0;

# ______________________________________________________________________________
#\\KIYNNQDL2WGLRCO26LBCCX54IG734TMFEGW24GWXLZGZ2ELQ4QVREFJ7Q6NNDMXSEFHES2DAX6HBG
# \\ NERLFC55JX5HGJTAYRIHBDXJKV4T56BEIWZNLX75ZFVCCNI2F7XZ \\// C25519-BASE-32 //
#  \\// ZEPTRSB3MYUUOUQGNLDDMTWGOZQEXBRT6XRWJTXE77Z6FR35YDA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
