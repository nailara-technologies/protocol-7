# >:]

# name = system.handler.xserver_pid_reply

my $reply = shift;

if ( $reply->{'cmd'} ne 'ACK' or $reply->{'call_args'}->{'args'} !~ /^\d+$/ ) {
    my $reason = 'unable to obtain Xorg PID';
    $reason = "xserver agent is not in 'xorg' mode"
        if $reply->{'call_args'}->{'args'} =~ /not xorg/;
    <[base.callback.cmd_reply]>->(
        <system.gfx_reload.reply_id>,
        {   'mode' => 'nak',
            'data' => "$reason, aborted!"
        }
    );
    delete <system.gfx_reload>;
} else {
    my $xorg_pid = $reply->{'call_args'}->{'args'};
    <system.gfx_reload.xorg_pid> = $xorg_pid;

    <system.process.wait_gone>->{$xorg_pid} = 'system.handler.xserver_stopped';

    my $wait_gone_interval = 0.13;
    <system.timer.wait_gone> = <[event.add_timer]>->(
        {   'after'    => $wait_gone_interval,
            'interval' => $wait_gone_interval,
            'handler'  => 'system.process.handler.wait_gone'
        }
    );

    <[base.proto.nailara.command.send.local]>->(
        {   'command'   => 'core.nroot.stop',
            'call_args' => { 'args' => 'xserver' }
        }
    );
}

# ______________________________________________________________________________
#\\CD5GN53347DKVSIQGERKC2M67NSL34WK6KTPULSN37MF4JX6KO3YFXGMAHDG52O3QIM6Y6ALQIMHA
# \\ DBDEZCGUFPYIVFPYLY4PKARV2GH53EJG2F5WVAZB7GK3JRXVS3AC \\// C25519-BASE-32 //
#  \\// 5KIHAF4WODDKWMR6IUOOY7GX7W6USW3QRVHBDJG46VQTNQA2ODQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
