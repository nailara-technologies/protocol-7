# >:]

# name = base.X-11.get_dbus_addr

my ($local_sid) = keys( %{<user.cube.session>} );

<[base.log]>->( 1, "requesting socket address from dbus agent.," );

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[net.out]>->( $cube_fh, "($cmd_id)dbus.socket_address\n" );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string  = <$cube_fh>;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(ACK|NAK) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)ACK ([^\n]+)\n$} ) {
    ( my $path_str = <x11.dbus_addr> = $1 ) =~ s/^[^=]+=|,.+$//g;
    <[base.log]>->( 1, "received dbus socket address ['$path_str']" );
    $ENV{'DBUS_SESSION_BUS_ADDRESS'} = <x11.dbus_addr>;
    return <x11.dbus_addr>;
} else {
    <[base.log]>->(
        0,
        "protocol mismatch (unexpected reply from dbus agent) ['$reply_string']"
    );
    return undef;
}

#.............................................................................
#DGGC2WEFSWLKD3JES4S2JJVMQJXXFFNDAJ4NJWUU7ZG3MJVILIZ2ENIQLGJPGJQ5MIDYHCRVVPHFK
#::: TY2NYJ4QKZDILRDS4WWAUY45PRLMGAXQCBSRJM2HFYVL34HOI3X :::: NAILARA AMOS :::
# :: W46B3ZEUU5M47D3CKU2GNCVN4HDMZJIAOGECRGWOWSBOQCJSY2BQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
