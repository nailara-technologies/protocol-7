# >:]

# name = base.X-11.get_screen_size

my ($local_sid) = keys( %{<user.cube.session>} );

<[base.log]>->( 2, "requesting screen size from X-11 agent.," );

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[net.out]>->( $cube_fh, "($cmd_id)X-11.get_screen_size\n" );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string  = <$cube_fh>;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(ACK|NAK) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)ACK ([^\n]+) ([^\n]+)\n$} ) {
    ( <x11.screen.width>, <x11.screen.height> ) = ( $1, $2 );
    <[base.log]>->( 1, "received screen size [$1x$2]" );
    return ( <x11.screen.width>, <x11.screen.height> );
} else {
    <[base.log]>->( 0, "not expected X-11 reply ['$reply_string']" );
    return undef;
}

#.............................................................................
#74UXUTQALVCFNQJ4S3DLUTP2KBIRNU6EEA4ONVGMY6LJBECHNASFZTYNHO3SRRW432VSBEDP3UOQU
#::: 2SG2HDS5OTDXUAJFN4BWDZ5DQS6M7FJMCAPE6TBE6QMIHYJRJXQ :::: NAILARA AMOS :::
# :: A4GSWF5EQNINN4ZLIG25NMC6SY3XRMA3SODSKR5YALMOR7UN5KAY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
