# >:]

# name  = auth.agent.cmd.session-key
# param = <agent> <key_str>
# descr = set up session key for agent auth.
# todo  = parameter validation!

my $id = $$call{'session_id'};
my ( $sn_agent, $key ) = split( / +/, $$call{'args'}, 2 );
my $agent   = $sn_agent;  # <- $sn_agent also contains subname if agent has one.
my $subname = $agent =~ s/\[(.+)\]$// ? $1 : '';

if ( $agent ne '' and $key ne '' ) {
    if ( exists <auth.setup.usr>->{$agent}
        and <auth.setup.usr>->{$agent} eq ':agent:' ) {
        $KEYS{'auth'}{'agent'}{$sn_agent} = blake2b_384_b64($key);
        $reply = { 'mode' => 'ack', 'data' => 'key added' };
        <[base.log]>->( 1, "[$id] received session key for '$agent'" );
    } else {
        $reply = {
            'mode' => 'nak',
            'data' => "user '$agent' not accepted for :agent: auth."
        };
        <[base.log]>->(
            0,
            "[$id] add_session_key: user '$agent'"
                . " not accepted for :agent: auth."
        );
    }
} else {
    $reply = { 'mode' => 'nak', 'data' => 'not enough arguments' };
    &{ $code{'base.log'} }( 0, "[$id] add_session_key: not enough arguments" );
}

# ______________________________________________________________________________
#\\SQJMX4ZP54VZKLXSIKBBR3IAPFI5XUW5QNNIQCHWKF2UVDSU4MKZBSPGR7IQDMVBHEW2TLG7ST4GU
# \\ HRCS6LHHTJ3BCGN7LTBSRDH4IKDFBMSP6N5TGS2TT6PJ25SF6M3N \\// C25519-BASE-32 //
#  \\// ZJ4OZZLG5TS5Y23YDRZYXNOHRRGOVQFEQBSDNYRSBAQIAVBHKBI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
