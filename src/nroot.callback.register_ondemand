# >:]

# name = nroot.callback.register_ondemand

my $ondemand_agents = shift;
$ondemand_agents //= <nroot.ondemand_agents>;

my $core_path = 'core.';

## check previous post-init command status [ 'connect_to_core' ] ..,
my $post_init_status = <nroot.current-init-data.status.post-init> // 0;
return <[base.log]>->( 0, 'core authentication was not successful .,' )
    if $post_init_status == 0;
##
return warn 'expected array reference with agent names'
    if not defined $ondemand_agents
    or ref($ondemand_agents) ne 'ARRAY';

<[base.log]>->( 1, 'registering ondemand agents at core .,' )
    if @{$ondemand_agents};

foreach my $agent_name ( @{$ondemand_agents} ) {
    <[base.protocol-7.command.send.local]>->(
        {   'command' => $core_path . 'ondemand-agent',
            'reply'   => {
                'handler' => 'base.handler.warn_nak_reply',
                'params'   => "${core_path}ondemand-agent add $agent_name"
            },
            'call_args' => { 'args' => "add $agent_name" }
        }
    );
}

# ______________________________________________________________________________
#\\EWXC57CM5IHAC7SHQUWLAGCM4XYD7HH5LQ5UZDN4WP6PLOSBHIIS3NXAR3Q6AKRE352EMAZK4Q6RY
# \\ J4NMETCWXQPOOKDKD7YH7CZFIGKJMCC4YLAUHN724PSLYLBGQRXX \\// C25519-BASE-32 //
#  \\// QPXVXK4QTJRK7A27U2M2VDQF6AD6WZMQ7DUMTOOKIIUM3YCZUDA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
