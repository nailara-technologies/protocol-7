# >:]

# name  = root.agent.cmd.notify_offline
# param = <agent|instance>
# descr = reply after specified agent was shut down

<root.agent.notify_offline> //= {};

my $agent_subname;
my $query_param = $$call{'args'};
my $reply_id    = $$call{'reply_id'};

return {
    'mode' => 'nak',
    'data' => 'expected agent name or instance parameter'
    }
    if not defined $query_param or !length($query_param);

my $query_copy = $query_param;
$agent_subname = $1
    if $query_param !~ /^\d+/ and $query_param =~ s|\[([^\]]+)\]$||;

if (    not defined <[agent.get_id]>->($query_param)
    and not defined <root.agent.instance>->{$query_param} ) {
    my $rep_msg
        = $query_param =~ /^\d+$/
        ? "no such agent instance ($query_param)"
        : "no such agent in setup [$query_param]";
    return {
        'mode' => 'nak',
        'data' => $rep_msg
    };
}

if ( $query_param =~ /^(\d+)$/ and my $id = $1 ) {    # instance id
    return {
        'mode' => 'ack',
        'data' => "agent instance '$id' already offline!"
        }
        if not defined <root.agent.instance>->{$id}
        or <root.agent.instance>->{$id}->{'status'} eq 'shutdown';
} else {                                              # agent name [+subname]
    my $found = 0;
    foreach my $id ( keys %{<root.agent.instance>} ) {
        if (<root.agent.instance>->{$id}->{'agent_name'} eq $query_param
            and (  not defined $agent_subname
                or not defined <root.agent.instance>->{$id}->{'subname'}
                or <root.agent.instance>->{$id}->{'subname'} eq $agent_subname )
        ) {
            $found = 1;
            last;
        }
    }
    return {
        'mode' => 'ack',
        'data' => "agent '$query_copy' is not online!"
        }
        if !$found;
}

<[base.log]>->(
    2, "shutdown notification request for agent '$query_copy' received"
);

push( @{ <root.agent.notify_offline>->{$query_copy} }, $reply_id );

return { 'mode' => 'later' }
