# >:]

# name  = base.event.add_signal
# descr = assigns new signal handler and cancels old one if it existed

my $signal  = $_[0]->{'signal'};
my $handler = $_[0]->{'handler'};

die "callback '$handler' does not exist!" if not defined $code{$handler};

<watcher.signal> //= {};

<watcher.signal>->{$signal}->cancel if exists <watcher.signal>->{$signal};

eval {
    <watcher.signal>->{$signal} = Event->signal(
        'signal' => $signal,
        'cb'     => sub { &{ $code{$handler} } },
        'desc'   => "signal handler [$signal]",
        'prio'   => 0
    );
};

if ($@) {
    delete <watcher.signal>->{$signal};
    ( my $reason = "$@" ) =~ s| at .+$|<{C}>|;
    warn $reason;
    return undef;
}

return <watcher.signal>->{$signal};
