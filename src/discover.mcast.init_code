# >:]

# name = discover.mcast.init_code

<[base.perlmod.autoload]>->('IO::Socket::Multicast');

<discover.mcast.ip4_addr>  //= '239.13.5.42';    # nailara default
<discover.mcast.ip4_port>  //= 47;
<discover.mcast.mesg_ttl>  //= 3;
<discover.mcast.mesg_loop> //= 0;

if (    defined <discover.mcast.obj.sock>
    and <discover.mcast.ip4_port> < 1024
    and $EUID > 0 ) {
    <[base.log]>->( 0, ": skipping socket reinitialization [am not root]" );
    return 0;
}

<[base.log]>->(
    1,
    sprintf(
        ": opening multicast socket [%s:%d]",
        <discover.mcast.ip4_addr>, <discover.mcast.ip4_port>
    )
);

<discover.mcast.obj.sock> = IO::Socket::Multicast->new(
    'Proto'     => 'udp',
    'LocalAddr' => <discover.mcast.ip4_addr>,
    'LocalPort' => <discover.mcast.ip4_port>,
    'ReuseAddr' => 1
) or die $OS_ERROR;

<discover.mcast.obj.sock>->mcast_ttl(<discover.mcast.mesg_ttl>)
    or die $OS_ERROR;
<discover.mcast.obj.sock>->mcast_loopback(<discover.mcast.mesg_loop>)
    or die $OS_ERROR;

<[base.log]>->(
    1,
    sprintf(
        ": joining local multicast group [%s]", <discover.mcast.ip4_addr>
    )
);

<discover.mcast.obj.sock>->mcast_add(<discover.mcast.ip4_addr>)
    || die $OS_ERROR;
<discover.mcast.obj.sock>
    ->mcast_dest( <discover.mcast.ip4_addr> . ':' . <discover.mcast.ip4_port> );

<[event.add_io]>->(
    {   'fd'      => <discover.mcast.obj.sock>,
        'handler' => 'discover.handler.incoming_packet'
    }
);

0;

# ______________________________________________________________________________
#\\TPCLYXM34YLXS7VUCAR7MOCY3YIM6OJK5FB3XA2EWMNTIDPYZUATU25ZX4VSQ62DXIUDJZNT6IOB2
# \\ UARXXQFX2T5ZE7FGDXFUBXTWXB7OM6MBIMKIUZVHTOV2IT44T2A5 \\// C25519-BASE-32 //
#  \\// NIUC4JIHVOXHGIXASSGCYMFXXCKHFYIYBXSZCHVSKYRM2KX5SDY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
