# >:]

# name  = mpv.handler.error_output

my @err_fds = @_;
push( @err_fds, <mpv.fh.stdout>, <mpv.fh.stderr> ) if !@err_fds;

foreach my $err_line ( map { $_->getlines } @err_fds ) {
    chomp($err_line);
    next if !length($err_line);
    if ( $err_line =~ m|^Error parsing option (.+)(?:-option)? \((.+)\)$| ) {
        <[base.log]>->( 0, "<< ! >> parser error on option '$1' [ $2 ].," );
    } elsif (
        $err_line =~ m|^Setting commandline option (-+.*(?:-option)?.+) failed.| ) {
        <[base.log]>->( 0, "   : :. setting option '$1' unsuccessful ..," );
    } elsif ( $err_line =~ m|^Exiting... \((.+)\)| ) {
        my $reason = lc($1);
        <[base.log]>->( 1, "<<< ! >>> process termination reason '$reason'" );
    } else {
        <[base.log]>->( 0, "< mpv > " . $err_line );
    }
}

# ______________________________________________________________________________
#\\6YLX4YGWQYA3GJYHMWU5GBEFMU3TRHOW2RZIMSURIIEJEZGC2HSQFFKKHDQ2EIFBVRW6M7A2M5GGC
# \\ NINB4KZ7OSCUFEFN6I56OYMCBF5ZLWORY3IREPQEKAHVC6G7UZCT \\// C25519-BASE-32 //
#  \\// SVZ2KZ4O476VW5WZBGBHWSBKPY7NRCHP3WQZLLY624YWSLXZWAY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
