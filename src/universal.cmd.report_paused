# >:]

# name  = universal.cmd.report_paused
# descr = notify parent of paused client

my $session_id = $call->{'session_id'};
my $agent_name = $data{'session'}{$session_id}{'user'};
<universal.child>->{$agent_name}->{'paused'} //= 0;
my $position = <universal.sequence.position>;
my $switch_agent
    = defined $position
    ? <universal.sequence.switch_order>->[$position]
    : undef;
<universal.sequence.frame_pos> //= 0;
<universal.sequence.frame_pos> = 0 if $position == 0;

if ( <universal.child>->{$agent_name}->{'paused'} ) {
    <[base.log]>
        ->( 2, "'$agent_name' already paused, ignoring pause-report.," );
    return {
        'mode' => 'nak',
        'data' => 'already paused'
    };
}

<[base.log]>->( 2, "pause reported from '$agent_name'-child" );

<universal.child>->{$agent_name}->{'paused'} = 1;

my $was_starting = 0;
if ( <universal.child>->{$agent_name}->{'status'} eq 'starting' ) {
    <universal.child>->{$agent_name}->{'status'} = 'ready';
    $was_starting = 1;
}

<universal.children_ready> = 1;
map {
    <universal.children_ready> = 0
        if <universal.child>->{$_}->{'status'} ne 'ready'
    }
    keys %{<universal.child>};

if ( <universal.children_ready> and $was_starting ) {
    <[base.log]>->( 1, "universal agent children online. =)" );
    <[base.x11.assign_window]>->(
        join( ',',
            map { <universal.child>->{$_}->{'window_id'} }
                keys %{<universal.child>} )
    );
}

if (<universal.children_ready>) {
    if ( defined $switch_agent ) {
        <[universal.switch_child]>->($switch_agent)
            if @{<universal.playlist.files>};
    } elsif (<universal.start-anim_running>) {    # [ empty playlist case ]
        <universal.playlist_was_empty> = 1;
        <[universal.stop_start-anim]>;
    }
}

<universal.timer.switch_timeout> = <[event.add_timer]>->(
    {   'after'   => <universal.start-anim_timeout>,
        'handler' => 'universal.handler.start-anim_timeout'
    }
) if <universal.start-anim_running>;

return {
    'mode' => 'ack',
    'data' => 'acknowledged'
    }

# ______________________________________________________________________________
#\\VHCTF2C4QCCBCAOHZH2ZK7YJNBJ47G5AQED5DG7M772QUQ4VC3WCFQIGJDH52UCPYZODEWKEJ3EDM
# \\ PYX46SU2BLGC2G6EXLFPZ2A64U5JYHGFK3POYI5LSGKRTP45JYLK \\// C25519-BASE-32 //
#  \\// E6Y6AJKCEXPULGVFN4JK66O5ENMZ2Z6AVHSPLA27S6SBL4FUCAY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
