# >:]

# name = weather.parent.write_pages

my $station_id = shift;
die "expected (valid) station id parameter"
    if not defined $station_id or $station_id !~ m{^\d+$};
my $cache_dir            = <weather.cache_dir> . '/html';
my $html_dir             = "$cache_dir/$station_id";
my @page_list            = <[weather.parent.page_list]>;
my $current_template_dir = <system.root_path> . '/data/html/templates/weather';
my $body_template        = "$current_template_dir/body.html";

if ( !-d $html_dir ) {
    mkdir($html_dir)
        or die "<!> unable to [re-]create target directory '$html_dir'";
}

die "html template '$body_template' does not exist" if !-f $body_template;

<[file.slurp]>->( $body_template, \my $body_html, ':raw' );
die "unable to load html body template '$body_template'"
    if not defined $body_html;

$body_html =~ s|\[TXT:source\]|<locales.string.tmpl.source>|g;

my $data_ref    = <weather.data>->{$station_id};
my $current_ref = $data_ref->{'current'};
my $today_ref   = $data_ref->{'forecast'}->{'today'};

if ( not defined $current_ref or not exists $current_ref->{'temp'} ) {
    <[base.log]>->( 0, "expected weather data not present, aborting write.," );
    return;
}

my $current_temp = sprintf( "%.1f", $current_ref->{'temp'} );

my %sun;
foreach my $mode ( 'rise', 'set' ) {
    $sun{$mode} = strftime "%H:%M Uhr",
        localtime $data_ref->{'daytime'}->{"sun$mode"};
}

# weather id codes
my $icon_path = <weather.icons>
    ->{ $current_ref->{'code'} . '.' . $data_ref->{'daytime'}->{'now'} };

# openmap icons
$icon_path = <weather.icons>->{ $current_ref->{'icon'} }
    if not defined $icon_path;

$icon_path =~ s|^.*/|./images/|;

my %template_names;
opendir( my $dir_fh, $current_template_dir )
    or die "opendir($current_template_dir): $!";
map { $template_names{$1} = 1 if $_ =~ m{^content\.(.+)\.part$} }
    readdir($dir_fh);
closedir($dir_fh);

### CURRENT ###

foreach my $page_name (@page_list) {
    my $content_str = '';
    next if $page_name !~ m{^current\.(.+)$};
    foreach my $sname ( split( /\./, $1 ) ) {
        if ( not exists $template_names{$sname} ) {
            <[base.log]>->(
                0, "[ write_pages ] html template '$sname' not defined."
            );
            next;
        }
        my $template_path = "$current_template_dir/content.$sname.part";

        $content_str .= ${ <[file.slurp]>->( $template_path,, ':raw' ) };
    }
    my $html_str = $body_html;

    $html_str =~ s|\[MAIN_CONTENT\]|$content_str|;

    $html_str =~ s|\[TXT:current\]|<locales.string.tmpl.current>|g;
    $html_str =~ s|\[TXT:cloudiness\]|<locales.string.tmpl.cloudiness>|g;
    $html_str =~ s|\[TXT:humidity\]|<locales.string.tmpl.humidity>|g;
    $html_str =~ s|\[TXT:pressure\]|<locales.string.tmpl.pressure>|g;
    $html_str =~ s|\[TXT:wind\]|<locales.string.tmpl.wind>|g;
    $html_str =~ s|\[TXT:temperatures\]|<locales.string.tmpl.temperatures>|g;
    $html_str =~ s|\[TXT:today\]|<locales.string.tmpl.today>|g;
    $html_str =~ s|\[TXT:morning\]|<locales.string.tmpl.morning>|g;
    $html_str =~ s|\[TXT:day\]|<locales.string.tmpl.day>|g;
    $html_str =~ s|\[TXT:evening\]|<locales.string.tmpl.evening>|g;
    $html_str =~ s|\[TXT:night\]|<locales.string.tmpl.night>|g;

    my $icon_day   = <weather.icons>->{'not_available'};
    my $icon_night = <weather.icons>->{'not_available'};

    my %temps = map { $_ => 'n/a' } ( 'morn', 'day', 'eve', 'night' );

    if (    exists $template_names{'today'}
        and defined $today_ref
        and ref($today_ref) eq 'HASH'
        and exists $today_ref->{'temp'} ) {
        %temps = map { $_ => sprintf( "%.1f", $today_ref->{'temp'}->{$_} ) }
            ( 'morn', 'day', 'eve', 'night' );

        my $icon_num = $1 if $current_ref->{'icon'} =~ m{^(\d+)};
        $icon_day   = <weather.icons>->{"${icon_num}d"};
        $icon_night = <weather.icons>->{"${icon_num}n"};
    }
    $icon_day   =~ s|^.*/|./images/|;
    $icon_night =~ s|^.*/|./images/|;

    $html_str =~ s|\[TEMP_MORN\]|$temps{morn}|g;
    $html_str =~ s|\[TEMP_DAY\]|$temps{day}|g;
    $html_str =~ s|\[TEMP_EVE\]|$temps{eve}|g;
    $html_str =~ s|\[TEMP_NIGHT\]|$temps{night}|g;
    $html_str =~ s|\[ICON_DAY\]|$icon_day|g;
    $html_str =~ s|\[ICON_NIGHT\]|$icon_night|g;
    $html_str =~ s|\[CITY\]|$data_ref->{city}|g;
    $html_str =~ s|\[REGION\]|$data_ref->{region}|g;
    $html_str =~ s|\[TEMP\]|$current_temp|g;
    $html_str =~ s|\[DESCR\]|$current_ref->{descr}|g;
    $html_str =~ s|\[CLOUDS\]|$current_ref->{clouds}|g;
    $html_str =~ s|\[HUMIDITY\]|$current_ref->{humidity}|g;
    $html_str =~ s|\[PRESSURE\]|$current_ref->{pressure}|g;
    $html_str =~ s|\[WIND_DESCR\]|$current_ref->{wind}->{descr}|g;
    $html_str =~ s|\[WIND_KMH\]|$current_ref->{wind}->{speed_kmh}|g;
    $html_str =~ s|\[SUNRISE\]|$sun{rise}|g;
    $html_str =~ s|\[SUNSET\]|$sun{set}|g;
    $html_str =~ s|\[ICON\]|$icon_path|g;

    <[weather.parent.apply_zoom]>->( \$html_str );

    <[weather.parent.html_put]>->( $html_dir, $page_name, \$html_str );
}

### FORECAST (HOURS) ###

foreach my $page_name (@page_list) {
    my $content_str = '';
    next
        if $page_name !~ m{^forecast_hours\.(.+)$}
        or not exists $data_ref->{'forecast'}->{'hours'};

    my @timestamps
        = sort { $a <=> $b } keys %{ $data_ref->{'forecast'}->{'hours'} };

    foreach my $sname ( split( /\./, $1 ) ) {
        my $template_index;
        $template_index = $1 if $sname =~ s|_(\d+)$|| and $1 > 0;
        if ( not exists $template_names{$sname} ) {
            <[base.log]>->(
                0, "<!>write_pages: html template '$sname' does not exist!"
            );
            next;
        }
        <[file.slurp]>->(
            "$current_template_dir/content.$sname.part",
            \my $part_template, ':raw'
        );

        if ($template_index) {
            my $index = $1 - 1;
            if ( not exists $timestamps[$index] ) {
                <[base.log]>->(
                    2, "'hours' forecast data with index $index not found.,"
                );
                <[file.slurp]>->(
                    "$current_template_dir/content.fail.part",
                    \$part_template, ':raw'
                );
                my $fail_icon = <weather.icons>->{'not_available'};
                $part_template =~ s|\[ICON\]|$fail_icon|g;
                $content_str .= $part_template;
                next;
            }
            my $ts          = $timestamps[$index];
            my $hr_data_ref = $data_ref->{'forecast'}->{'hours'}->{$ts};

            my $hours_temp = sprintf( "%.1f", $hr_data_ref->{'temp'} );
            $part_template =~ s|\[TIME\]|$hr_data_ref->{time}|g;
            $part_template =~ s|\[DESCR\]|$hr_data_ref->{descr}|g;
            $part_template =~ s|\[TEMP\]|$hours_temp|g;
            $part_template =~ s|\[HUMIDITY\]|$hr_data_ref->{humidity}|g;
            $part_template
                =~ s|\[WIND_DESCR\]|$hr_data_ref->{'wind'}->{'descr'}|g;

            my $icon_path = <weather.icons>->{ $hr_data_ref->{'code'} . '.'
                    . $data_ref->{'daytime'}->{'now'} };
            $icon_path = <weather.icons>->{ $hr_data_ref->{'icon'} }
                if not defined $icon_path;
            $icon_path     =~ s|^.*/|./images/|;
            $part_template =~ s|\[ICON\]|$icon_path|g;

        }

        $content_str .= $part_template;
    }
    my $html_str = $body_html;

    $html_str =~ s|\[MAIN_CONTENT\]|$content_str|;

    $html_str =~ s|\[TXT:humidity\]|<locales.string.tmpl.humidity>|g;
    $html_str =~ s|\[TXT:wind\]|<locales.string.tmpl.wind>|g;

    # ( 'current' [ 'city' tile ] )
    $html_str =~ s|\[CITY\]|$data_ref->{city}|g;
    $html_str =~ s|\[REGION\]|$data_ref->{region}|g;
    $html_str =~ s|\[TEMP\]|$current_temp|g;
    $html_str =~ s|\[ICON\]|$icon_path|g;
    $html_str =~ s|\[DESCR\]|$current_ref->{descr}|g;

    # ...

    <[weather.parent.apply_zoom]>->( \$html_str );

    <[weather.parent.html_put]>->( $html_dir, $page_name, \$html_str );
}

### FORECAST (DAYS) ###

foreach my $page_name (@page_list) {
    my $content_str = '';
    next
        if $page_name !~ m{^forecast_days\.(.+)$}
        or not exists $data_ref->{'forecast'}->{'days'};

    my @timestamps
        = sort { $a <=> $b } keys %{ $data_ref->{'forecast'}->{'days'} };

    foreach my $sname ( split( /\./, $1 ) ) {
        my $template_index;
        $template_index = $1 if $sname =~ s|_(\d+)$|| and $1 > 0;
        if ( not exists $template_names{$sname} ) {
            <[base.log]>->(
                0, "[ write_pages ] html template '$sname' does not exist."
            );
            next;
        }

        <[file.slurp]>->(
            "$current_template_dir/content.$sname.part",
            \my $part_template, ':raw'
        );

        if ($template_index) {
            my $index = $1 - 1;
            if ( not exists $timestamps[$index] ) {
                <[base.log]>->(
                    2, "'days' forecast data with index $index not found.,"
                );
                <[file.slurp]>->(
                    "$current_template_dir/content.fail.part",
                    \$part_template, ':raw'
                );
                my $fail_icon = <weather.icons>->{'not_available'};
                $part_template =~ s|\[ICON\]|$fail_icon|g;
                $content_str .= $part_template;
                next;
            }
            my $ts           = $timestamps[$index];
            my $day_data_ref = $data_ref->{'forecast'}->{'days'}->{$ts};

            my $day_temp = sprintf( "%.1f", $day_data_ref->{'temp'}->{'day'} );
            $part_template =~ s|\[DAY\]|$day_data_ref->{day}|g;
            $part_template =~ s|\[DESCR\]|$day_data_ref->{descr}|g;
            $part_template =~ s|\[TEMP\]|$day_temp|g;
            $part_template =~ s|\[CLOUDS\]|$day_data_ref->{clouds}|g;
            $part_template
                =~ s|\[WIND_DESCR\]|$day_data_ref->{'wind'}->{'descr'}|g;

            my $icon_path = <weather.icons>->{ $day_data_ref->{'code'} . '.'
                    . $data_ref->{'daytime'}->{'now'} };
            $icon_path = <weather.icons>->{ $day_data_ref->{'icon'} }
                if not defined $icon_path;
            $icon_path     =~ s|^.*/|./images/|;
            $part_template =~ s|\[ICON\]|$icon_path|g;

        }
        $content_str .= $part_template;
    }
    my $html_str = $body_html;

    $html_str =~ s|\[MAIN_CONTENT\]|$content_str|;

    $html_str =~ s|\[TXT:cloudiness\]|<locales.string.tmpl.cloudiness>|g;
    $html_str =~ s|\[TXT:wind\]|<locales.string.tmpl.wind>|g;

    # ( 'current' [ 'city' tile ] )
    $html_str =~ s|\[CITY\]|$data_ref->{city}|g;
    $html_str =~ s|\[REGION\]|$data_ref->{region}|g;
    $html_str =~ s|\[TEMP\]|$current_temp|g;
    $html_str =~ s|\[ICON\]|$icon_path|g;
    $html_str =~ s|\[DESCR\]|$current_ref->{descr}|g;

    # ..,

    <[weather.parent.apply_zoom]>->( \$html_str );

    <[weather.parent.html_put]>->( $html_dir, $page_name, \$html_str );
}

# ______________________________________________________________________________
#\\C6M6YNYLOFM4IMDYLP4E24XOJCH44OPDMDIFLP2HYDN5AAMQF53WHS4FLQ6X67L3C7ANGRSKYZRVC
# \\ ZXLWMK2TIAEJ5P7ZHDE6TNGTDOJQADVSCPN4K5JVFQ4VIFOZKZJ2 \\// C25519-BASE-32 //
#  \\// 3TERC4SEEJTDAUCYXAQK5ATVMW5CJGLWYMZNFQK665BBOHFMAAA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
