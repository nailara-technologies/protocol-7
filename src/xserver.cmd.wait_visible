# >:]

# name  = xserver.cmd.wait_visible
# param = <timeout> <title>
# descr = wait until matching window is visible
# todo  = combine poll timer for all requested windows

my ( $timeout, $title_pattern ) = split( m| +|, $$call{'args'}, 2 );

return { 'mode' => 'nak', 'data' => 'expected numerical timeout argument' }
    if not defined $timeout or $timeout !~ m|^\d+(\.\d+)?$|;
return { 'mode' => 'nak', 'data' => 'expected title [sub]string argument' }
    if not defined $title_pattern or !length($title_pattern);

my $xtops = <xserver.x11_tops>;

# <[xserver.update-xtops]>;

# <[xserver.process-x11-error]>->( $@, caller )
#     and return { 'mode' => 'nak', 'data' => 'cannot get window list' }
#     if $@;


foreach my $window_id (<[xserver.get_window_ids]>) {
    my $window_title = <[xserver.get_window_title]>->($window_id);
        return { 'mode' => 'ack', 'data' => $window_id }
        if $window_title =~ $title_pattern;
}

my $req_id = <[base.gen_id]>->( <xserver.waiting> //= {} );

my @timers = (
    'poll' => <[event.add_timer]>->(
        {   'after'    => sprintf( "%.4f", rand(0.013) ),
            'prio'     => 4,
            'interval' => sprintf( "%.4f", rand(0.0113) ),
            'handler'  => 'xserver.handler.wait_visible',
            'data'     => $req_id
        }
    )
);
push(
    @timers,
    (   'timeout' => <[event.add_timer]>->(
            {   'after'   => $timeout,
                'repeat'  => 0,
                'prio'    => 2,
                'handler' => 'xserver.handler.wait_visible_timeout',
                'data'    => $req_id
            }
        )
    )
) if $timeout > 0;

<xserver.waiting>->{$req_id} = {
    'reply_id' => $$call{'reply_id'},
    'pattern'  => qr|$title_pattern|,
    'timer'    => {@timers}
};

return { 'mode' => 'deferred' }

# ______________________________________________________________________________
#\\H7SQGX4GHGEB3BS7RT52HV3GJ5ZTZOVYY3NHAFW4GF4AYFISLG3NCBNBUZLNCLUQTIDTYLE5WXSAE
# \\ W5TZ6U3RL3V4PFSG5FCNDU2WKVNRDOPC22XF3RCYB2UOTE27LCG3 \\// C25519-BASE-32 //
#  \\// EZKFNFTAFJ2JVAOJ4XE45CPYJJDELVELMOHLCRNTDBQNM42AGDQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
