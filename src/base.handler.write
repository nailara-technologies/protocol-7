# >:]

# name       = base.handler.write
# descr      = writes buffer content to client handle

my $id;
if   ( $_[0] =~ /^\d+/ ) { $id = $_[0] }
else                     { $id = $_[0]->w->data }

return <[base.session.check_last]> if not exists $data{'session'}{$id};

my $session = $data{'session'}{$id};
my $len     = length( $session->{'buffer'}->{'output'} );
my $written = 0;

if ( fileno $session->{'handle'} ) {
    if ( $len > 0 ) {
        $written = syswrite(
            $session->{'handle'},
            $session->{'buffer'}->{'output'},
            $data{'size'}{'buffer'}{'output'} || $len
        );
        if ( not defined $written ) {
            $session->{'shutdown'} = 1;
        } else {
            $_[0]->w->stop;
            $data{'handle'}{ $session->{'handle'} }{'bytes'}{'out'} += $written;
            substr( $session->{'buffer'}->{'output'}, 0, $written, '' );
            $_[0]->w->start;

            # httpd agent (download in progress)
            if ( defined $session->{'watcher'}->{'download_handler'}
                and !$session->{'watcher'}->{'download_handler'}->is_running ) {
                $session->{'watcher'}->{'download_handler'}->start;
            }
        }
    }
} else {
    $_[0]->w->cancel;
    return $session->{'shutdown'} = 1;
}

if ( $len = length( $session->{'buffer'}->{'output'} ) ) {
    push( @{ $data{'watcher_list'}{'paused'} }, \$_[0] );

    if ( !$data{'watcher'}{'io'}{'transfer'}->is_running ) {
        $data{'watcher'}{'io'}{'transfer'}->start;
    }
} else {

    #    if ( !$session->{'watcher'}{'output_buffer'}->is_running ) {
    $session->{'watcher'}->{'output_buffer'}->start;

    #    }
}

$session->{'shutdown'} = 1 if !$len and $session->{'flush_shutdown'};

return 0;
