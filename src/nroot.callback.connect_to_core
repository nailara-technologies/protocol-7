# >:]

# name  = nroot.callback.connect_to_core
# descr = create nroot agent client session to local core

my $instance_id = shift;
my $core_addr   = <nailara.net.int.addr>;
my $core_port   = <nailara.net.int.port>;
my $init_data   = <nroot.agent.instance>->{$instance_id}->{'init_data'};
my $core_key    = $init_data->{'core'}->{'key'};
my $authname = <system.agent.name> eq '<stdin>' ? 'nroot' : <system.agent.name>;
$authname = <system.agent.auth_name> if exists <system.agent.auth_name>;

<[base.log]>->( 1, "connecting to local core [$core_addr:$core_port] ..," );

my $c_fh = <[base.open]>->( 'ip.tcp', 'output', $core_addr, $core_port );
$c_fh = <[auth.agent.client]>->( $c_fh, $authname, $core_key );

#[ error \ <false> ]
return 0 if not defined $c_fh;

my $session_id = <[base.session.init]>->( $c_fh, 'nailara', 'client', 'core' );
<[base.log]>->( 1, "auth. to core successful [ session $session_id ]" );
<nroot.agent.instance>->{$instance_id}->{'root_sid'} = $session_id;
<nroot.agent.instance>->{$instance_id}->{'is-core'}  = 1;

<callback.session.closing_last> = {
    'name'   => 'agent.change_status',
    'params' => [ $instance_id, 'error' ]
};

my $root_sid = <nroot.agent.instance>->{$instance_id}->{'root_sid'};
<[base.proto.nailara.command.send.local]>->(
    {   'command' => "$root_sid.set-initialized",
        'reply'   => { 'handler' => 'nroot.handler.set_initialized_reply' },
        'call_args' => { 'args' => 0 }    # [ 0 == nroot-agent session [self] ]
    }
);

#[success]
return 1;

# ______________________________________________________________________________
#\\64LUNXADG5GBFVJNKYKMDPE2V5S6TCCE3R5OBBLRB46BCHFM5FGV7DXYGXI7LPUQ36BCNYYXTLYW6
# \\ WEIPSY6YXMWQGRRNMFDL5MYPCXJJ44XFHUX3A3MNI24PM5W4EYHN \\// C25519-BASE-32 //
#  \\// GR2G76LCY3OLZRHJAU57FJFSAPTP4TDP2JC7N3B3J2Z6LQJZGAY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
