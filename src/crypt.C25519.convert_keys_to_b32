# >:]

# name = crypt.C25519.convert_keys_to_b32

my $key_dir = shift // <[crypt.C25519.key_vars]>->{'key_dir'};

return if !-d $key_dir or !-r $key_dir;

my $last_name = '';
foreach my $key_file_path ( @{ <[file.all_files]>->($key_dir) } ) {
    next if $key_file_path !~ /([^\/]+)\.C25519_b64u(\..+)?$/;
    my $key_name = $1;
    ( my $target_name = $key_file_path ) =~ s|_b64u|_b32|;
    if ( -f $target_name ) {
        <[base.log]>
            ->( 0, "[convert] target key file exists ['$target_name']" );
        next;
    }
    <[base.log]>->( 0, "[ converting to base32 ] key '$key_name'" )
        if $key_name ne $last_name;
    $last_name = $key_name;
    <[file.put]>->(
        $target_name,
        encode_b32r( decode_b64u( ${ <[file.slurp]>->($key_file_path) } ) )
    ) and unlink($key_file_path);
}

# ______________________________________________________________________________
#\\I6VRUJLY6WXBXAKTRIBWDCNC764E7RCJHAMY2LL6F4OVJ46BXGGWTH4T3DPOEKGJIONFQQHW47ZZE
# \\ BLGDVOTRMSINRXPDB44VJHNO4GUVWDES53SDJOX4LYC5JV4I4X5E \\// C25519-BASE-32 //
#  \\// X4YQ4NV2KM2XZYFDALV3INME3MFILT3FEHTDFMRYSCTBAQ376BY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
