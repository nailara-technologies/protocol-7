# >:]

# name  = xserver.cmd.hide_window
# param = <w_id>
# descr = hide the window with the specified id

my $X         = <xserver.x11>;
my $window_id = $$call{'args'};

return { 'mode' => 'nak', 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => 'nak', 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <xserver.x11_tops>;
$xtops->update;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'nak', 'data' => 'no such window' } if not defined $window;

<[base.log]>->( 2, "hiding window $window_id" );

eval {
    for ( 1 .. 2 ) {    # <- workaround (ignored state requests)
        X11::Protocol::WM::change_net_wm_state( $X, $window_id, 'add',
            'HIDDEN' );
    }
};

return { 'mode' => 'ack', 'data' => "unable to set 'hidden' state" } if $@;
return { 'mode' => 'ack', 'data' => "set window state 'hidden'" };

# ______________________________________________________________________________
#\\MQI3ROMV2FMT7LGTGAUKFUEB4UAG7TOLHEFEAQ3DDE3JIODHQVHBFLYZ3F4FLHG2FOPL4HI6HEQHI
# \\ HBHVVKJQ2KXEHJPUULJUENSJ4VI2GS7JYZHNRZXLGDMTUX7JHCGI \\// C25519-BASE-32 //
#  \\// GWAZ4M27KEMV347V4CCDEV7HMVKMGM4FVHLQQ2IUN3JPSJRFICI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
