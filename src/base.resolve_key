# >:]

# name  = base.resolve_key
# descr = resolve hash key and return reference to value or undef if not found

my $key_str  = shift;
my $hash_ref = shift // *data{HASH};

# allowing keys containing '.'s by single quoting them
$key_str =~ s/\'([^\']+)\'/my$k=$1;$k=~s|\.|\0|g;$k/ge;
my @key_tree = split( /\./, $key_str );
map { $ARG =~ s/\0/./g } @key_tree;
while ( my $sub_key = shift @key_tree ) {
    if ( ref($hash_ref) ne 'HASH' or not defined ${$hash_ref}{$sub_key} ) {
        return undef;
    }
    if ( @key_tree and ref( ${$hash_ref}{$sub_key} ) eq 'HASH' ) {
        $hash_ref = \%{ $$hash_ref{$sub_key} };
    } elsif ( !@key_tree ) {
        return \${$hash_ref}{$sub_key};
    } else {
        return undef;
    }
}
return undef;

# ______________________________________________________________________________
#\\US6Q66O452UYG2W6TKTUZP43QBC7OVUEM2I6I3LM6DY6ILC7VM7FLCHEBLGWQLSW54C72QAFGBGB6
# \\ 5FZBGIVSXCL4GX6YRUK7SIOVDNDE3LTCVZQZQM5W7I2FCUIOIOZZ \\// C25519-BASE-32 //
#  \\// 236KZI2HKDE5N3O4UF4BE4RJKXJKSTNIOL6OQDS2EV6THKPJAAQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
