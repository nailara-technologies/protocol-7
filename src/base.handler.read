# >:]

# name  = base.handler.read
# descr = session input handler

my $id = $_[0]->w->data;

if ( not defined $id or not defined $data{'session'}{$id} ) {
    $_[0]->w->cancel;
    $id //= '---';
    <[base.log]>->(
        1, "[$id] handler of already closed session called, cancelled!"
    );
    return undef;
}

my $session = $data{'session'}{$id};
my $len = length( $$session{'buffer'}{'input'} ) || 0;

if ( fileno $$session{'handle'} ) {
    if (!sysread(
            $data{'session'}{$id}{'handle'},
            $data{'session'}{$id}{'buffer'}{'input'},
            $data{'size'}{'buffer'}{'input'},
            $len
        )
        ) {
        $$session{'shutdown'} = 1;
    }
} else {
    $$session{'shutdown'} = 1;
}

my $new_len = length( $$session{'buffer'}{'input'} );
$data{'handle'}{ $data{'session'}{$id}{'handle'} }{'bytes'}{'in'}
    += ( $new_len - $len );
$len = $new_len;

if ( $len > $$session{'size'}{'buffer'}{'input'} ) {
    my $max_len = $$session{'size'}{'buffer'}{'input'};
    my $err_msg = 'input buffer size exceeded';
    $$session{'buffer'}{'input'} = '';
    <[base.log]>->( 0, "[$id] $err_msg. ( $len > $max_len )" );
    <[base.session.shutdown]>->( $id, "$err_msg! [ max $max_len bytes ]" );
} elsif ($len) {
    $_[0]->w->start;
}
