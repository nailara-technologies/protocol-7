# >:]

# name  = xserver.cmd.get_window_pid
# param = <id>
# descr = return process id for specified window id

my $X         = <xserver.x11>;
my $window_id = $$call{'args'};

return { 'mode' => 'nack', 'data' => 'window <id> required' }
    if not defined $window_id;
return { 'mode' => 'nack', 'data' => 'invalid window <id> syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <xserver.x11_tops>;
$xtops->update;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'nack', 'data' => 'no such window' } if not defined $window;

return {
    'mode' => 'ack',
    'data' => unpack(
        "I*",
        [   $X->GetProperty(
                $window_id, $X->atom('_NET_WM_PID'),
                'AnyPropertyType', 0, ~0, 0
            )
        ]->[0]
    )
};
