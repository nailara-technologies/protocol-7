# >:]

# name   = base.event.callback.idle_restart
# descr  = restart watcher if idle

if (    defined $data{'watcher_list'}{'paused'}
    and ref( $data{'watcher_list'}{'paused'} ) eq 'ARRAY'
    and scalar @{ $data{'watcher_list'}{'paused'} } ) {
    foreach my $w ( @{ $data{'watcher_list'}{'paused'} } ) {

        my $id   = $$w->w->data;
        my $desc = $$w->w->desc;

        next if not defined $id or not defined $data{'session'}{$id};

        ${$w}->w->start;

        # hotfix (will be done right with the new event module)
        if ( $desc =~ /^\[(\d+)\] output buffer$/ ) {
            ${$w}->w->now if length( $data{'session'}{$1}{'buffer'}{'output'} );
        }
    }
    $data{'watcher_list'}{'paused'} = [];
    $_[0]->w->stop;
} else {
    $data{'watcher_list'}{'paused'} = [];
    $_[0]->w->stop;
}

if (    $PID == <system.process_start.pid>
    and exists <system.ondemand_timeout>
    and not exists <base.timer.ondemand_timeout> ) {
    <base.timer.ondemand_timeout> = <[event.add_timer]>->(
        {   'after'   => <system.ondemand_timeout>,
            'handler' => 'base.handler.ondemand_timeout',
            'data'    => {}
        }
        )
        if not exists $data{'route'}
        or !keys %{ $data{'route'} };
}

# ______________________________________________________________________________
#\\SZJ2D45OQQUCA42WKDDMDIKW2GZGYQ67LONY6NGOZQXY42S6JEJWSLHCCXA7HQABU7BA7PDV3EARA
# \\ HRF4255V2CWRW7QBUEHUPPSGZVYXPGATWVLLBBKIC72UV2GUBZ24 \\// C25519-BASE-32 //
#  \\// 62X4S4D6CIGAVFND2L6PTTBNFLX6LFIMRNZKWD4RWVUKEDRL2BY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
