# >:]

# name  = jobqueue.add_job
# descr = inserts a new job into the jobqueue

die "no parameter supplied" if !@_ or not defined $_[0];

my $max_jobs   = <jobqueue.max_jobs> || 42513;
my $job_id     = <[base.gen_id]>->( <jobqueue.joblist.by_id>, $max_jobs );
my $job_params = {};
if ( ref( $_[0] ) eq 'HASH' ) { $job_params = shift }
elsif ( exists $code{ $_[0] } ) {
    $job_params = {
        'name'            => $_[0],
        'job_id'          => $job_id,
        'job_callback'    => shift,
        'callback_params' => @_
    };
} else {
    die "add_job: callback '$_[0]' does not exist";
}

my $target_queue = $job_params->{'target_queue'} || 'queued';

# LLL: tune defaults later
my $job_data = {
    'name'     => $job_params->{'name'}     || $job_params->{'job_callback'},
    'priority' => $job_params->{'priority'} || 0,
    'object_id' => $job_params->{'object_id'},
    'status'    => $target_queue,
    'tstamp'    => {
        'queued'       => <[base.time]>->(4),
        'dependencies' => undef,
        'running'      => undef,
        'paused'       => undef,
        'completed'    => undef
    },
    'job_callback'    => $job_params->{'job_callback'},
    'callback_params' => $job_params->{'callback_params'},

    # LLL: following features still need implementation...
    'repeat_count' => 0,
    'max_repeat'   => undef,
    'repeat'       => $job_params->{'repeat'} || 'on_error',
    'repeat_delay' => $job_params->{'repeat_delay'} || 5,
};

<jobqueue.joblist.by_id>->{$job_id} = $job_data;

my $joblist = <jobqueue.joblist>;
push(
    @{ $joblist->{$target_queue}{'by_priority'}{ $job_data->{'priority'} } },
    $job_id
);
push( @{ $joblist->{$target_queue}{'by_timestamp'} }, $job_id );

$joblist->{'count'}->{$target_queue}++;

return $job_id;
