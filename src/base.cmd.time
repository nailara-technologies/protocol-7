# >:]

# name  = base.cmd.time
# param = [zone|date|unix[.<n>]]
# descr = return time[zone], date or unixtime [%.0<n>f]

my $param = $$call{'args'};

if ( not defined $param ) {
    return {
        'mode' => 'ack',
        'data' => <[base.parser.timestamp]>->('time')
    };
} elsif ( $param eq 'date' ) {
    return {
        'mode' => 'ack',
        'data' => <[base.parser.timestamp]>->('date')
    };
} elsif ( $param eq 'zone' ) {
    return {
        'mode' => 'ack',
        'data' => <[base.timezone]>
    };
} elsif ( $param eq 'unix' ) {
    return {
        'mode' => 'ack',
        'data' => time()
    };
} elsif ( $param =~ /^unix\.(\d+)$/ ) {    # LLL: consider access control?
    my $float = $1;
    my $limit = 22;
    return {
        'mode' => 'nak',
        'data' => "current float precision limit is $limit"
        }
        if $float > $limit;
    return {
        'mode' => 'ack',
        'data' => <[base.time]>->($float)
    };
} else {
    return {
        'mode' => 'nak',
        'data' => "invalid parameter '$param'.. [date|unix[.<n>]]"
    };
}

# ______________________________________________________________________________
#\\TWNRPBANCCC3JWAVCLO7ST4QHATASASGQ7D47NUVGMOABNYMK22H4PBTL3G7H72BJY6Z7XXO37LEY
# \\ K4NPS3XFBTRCWTLLSWUZY7M6IFTQ5PFGSVPC66P5KKHP6SCCQ34Z \\// C25519-BASE-32 //
#  \\// N6PAB46OHCDBCV6I7Y6X5YWBDPHDT7S73CZJG75PP36GN5PVAAA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
