# >:]

# name       = base.daemonize

<[base.log]>->( 1, 'daemonizing..' );

# sub daemonize {

chdir '/' or die "Can't chdir to /: $!";
open STDIN, '/dev/null' or die "Can't read /dev/null: $!";
open STDOUT, '>/dev/null'
    or die "Can't write to /dev/null: $!";
defined( my $pid = fork ) or die "Can't fork: $!";
exit if $pid;
POSIX::setsid() or die "setsid() failed: $!";
open STDERR, '>&STDOUT' or die "Can't dup stdout: $!";

IO::AIO::reinit();    # <- makes base.s_read() and base.s_write() work again...

# }

# if($pid=fork){exit($pid)}
# else
# {
#     close(STDIN);
#    close(STDOUT);
#    close(STDERR);
#
# }

# ______________________________________________________________________________
#\\B5G44VOF4WOA4BFY32N5RENIV6DBP7LHSHSE3ZL34FV6IC6H43HCB2WARYWSISNRYXY722BNMLNIG
# \\ LUF7WKKR2OIXNBPWLXFXZ2A2GGMN3SDUQANHBWHFEQR4ZSYXNW5L \\// C25519-BASE-32 //
#  \\// F247JBJKYDQOSOCFSWNURC4Z7GC23HUYBY5DUNETUX7RCE6JECQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
