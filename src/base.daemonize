# >:]

# name       = base.daemonize

<[base.log]>->( 1, 'daemonizing..' );

# sub daemonize {

chdir '/' or die "Can't chdir to /: $OS_ERROR";
open STDIN, '/dev/null' or die "Can't read /dev/null: $OS_ERROR";
open STDOUT, '>/dev/null'
    or die "Can't write to /dev/null: $OS_ERROR";
defined( my $pid = fork ) or die "Can't fork: $OS_ERROR";
exit if $pid;
POSIX::setsid() or die "setsid() failed: $OS_ERROR";
open STDERR, '>&STDOUT' or die "Can't dup stdout: $OS_ERROR";

IO::AIO::reinit();    # <- makes base.s_read() and base.s_write() work again...

# }

# if($pid=fork){exit($pid)}
# else
# {
#     close(STDIN);
#    close(STDOUT);
#    close(STDERR);
#
# }

# ______________________________________________________________________________
#\\FHTGROMVLOXQ3PKEBFCBM55YSG5KM6AVEONB6OEEUFTXYPDWXKVTDMXAQDOBY4RVTPRS2CSLDU33S
# \\ URYVDDTDPNYAGSFNRTTKKD62HWBZQZZ2ZNPVFEKQRORQIGOZTJUR \\// C25519-BASE-32 //
#  \\// FLFGFIODI6BHGZSZMTM446LK6TCANHWV5QVAMI7GR76LD3WTUCQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
