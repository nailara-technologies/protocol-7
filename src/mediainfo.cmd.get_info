# >:]

# name  = mediainfo.cmd.get_info
# param = <file> [info_keys]
# descr = return information about audio or video files

return { 'mode' => 'nak', 'data' => 'expected path to content file' }
    if !length( $$call{'args'} );

my ( $file_path, @info_keys ) = split( m| +|, $$call{'args'} );

return { 'mode' => 'nak', 'data' => 'file not found' }
    if !-f $file_path;

my $file_info = new Mediainfo( 'filename' => $file_path );

@info_keys = sort( keys %{$file_info} ) if !@info_keys;

my $info_reply;
my $key_max_len = 0;
map { $key_max_len = length($_) if length($_) > $key_max_len } @info_keys;

foreach my $i_key (@info_keys) {
    return {
        'mode' => 'nak',
        'data' => "mediainfo property key not found ['$i_key']"
        }
        if not exists $file_info->{$i_key};

    $info_reply
        .= sprintf( "%-${key_max_len}s : %s\n", $i_key, $file_info->{$i_key} );
}

return { 'mode' => 'data', 'data' => $info_reply };

# ______________________________________________________________________________
#\\VMRFYKAQMBUTQ4EERNRVU24QHTWFPBR5IRVJVPJYEQZBGSASHJTMMR2DASBR2PC5QV5QDFWZF4PSI
# \\ CHUAKXT77CDA7T4IVT6TOIXGIGZT6WPGOIRNGHNDBBAUDZTKCLEZ \\// C25519-BASE-32 //
#  \\// IXSDTNBQ2MBPSOCBUIFTLYYHYTUM3XFT5Z3U6GY6U2WGVANLMBI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
