# >:]

# name  = mediainfo.cmd.get_info
# param = <file> [info_keys]
# descr = return information about audio or video files

return { 'mode' => 'nak', 'data' => 'expected path to content file' }
    if !length( $$call{'args'} );

my ( $file_path, @info_keys ) = split( m| +|, $$call{'args'} );

return { 'mode' => 'nak', 'data' => 'file not found' }
    if !-f $file_path;

my $file_info = new Mediainfo( 'filename' => $file_path );

@info_keys = sort( keys %{$file_info} ) if !@info_keys;

my $info_reply;
my $key_max_len = 0;
map { $key_max_len = length($ARG) if length($ARG) > $key_max_len } @info_keys;

foreach my $i_key (@info_keys) {
    return {
        'mode' => 'nak',
        'data' => "mediainfo property key not found ['$i_key']"
        }
        if not exists $file_info->{$i_key};

    $info_reply
        .= sprintf( "%-${key_max_len}s : %s\n", $i_key, $file_info->{$i_key} );
}

return { 'mode' => 'data', 'data' => $info_reply };

# ______________________________________________________________________________
#\\73SV4BWG45CMT6AEN3MZ7FP4OXI3DH47UFCUFLSRCCMUHLPTRTXEN5J553ZKYZ65YYP4GWONLAWIM
# \\ 4LVGX222RO5GOFQ3DIHF6E7C2EPAYOM6UPF7IE64GZGC7776Y2N5 \\// C25519-BASE-32 //
#  \\// N4U2WAJEMD6UDOMDGIX44Q6YIMRHAXC3SGKE32TDNUJKUNZWEBA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
