# >:]

# name = root.agent.instance.stop

my $instance_id = shift;

if ( exists <agent.instance.shutdown>->{$instance_id} ) {
    <[base.log]>->(
        1, "instance $instance_id already shutting down, skipping stop command!"
    );
    return;
}

my $instance = <root.agent.instance>->{$instance_id};

return warn "instance.stop: instance id $instance_id does not exist!"
    if not defined $instance;

if ( exists $instance->{'timer'}->{'verify_instance'} ) {
    $instance->{'timer'}->{'verify_instance'}->cancel;
    delete $instance->{'timer'}->{'verify_instance'};
    delete $instance->{'timer'} if !keys %{ $instance->{'timer'} };
}

my $agent_name = $instance->{'agent_name'};
my $job_id     = $instance->{'job_id'};

<[base.log]>->( 1, "terminating instance $instance_id ['$agent_name'].." );

<agent.instance.shutdown>->{$instance_id} = <[base.time]>->(5);

$instance->{'status_timer'}->cancel  if exists $instance->{'status_timer'};
$instance->{'timeout_timer'}->cancel if exists $instance->{'timeout_timer'};
delete <callback.session.closing_last> if $instance->{'is_core'};

if ( defined $instance->{'process'}->{'id'} ) {
    delete <root.child>->{ $instance->{'process'}->{'id'} };
    <[root.terminate_process]>->( $instance->{'process'}->{'id'} );
}

# <[agent.change_status]>->( $instance_id, 'shutdown' );
<[jobqueue.remove_job]>->($job_id);

# undef $agent_instance->{'output_buffer'}; # -> done in output_handler
