# >:]

# name  = base.handler.ondemand_startup
# param = error reason [ NAK reply ]

my $reply = shift;

my $v_id = $reply->{'params'}->{'v_id'};

if ( $reply->{'cmd'} eq 'NAK' ) {
    delete <agents.virtual>->{$v_id}->{'starting'};
    my $reason = $reply->{'call_args'}->{'args'};
    <[base.log]>->( 0, "ondemand agent startup error [ $reason ]" );
    while ( my $element = shift @{ <agents.virtual>->{$v_id}->{'queue'} } ) {
        my $sid    = $element->{'source_id'};
        my $cmd_id = $element->{'cmd_id'};
        next if not exists $data{'session'}{$sid};
        $data{'session'}{$sid}{'buffer'}{'output'}
            .= $cmd_id . "NAK command unknown\n";
    }
} else {
    <[base.proto.nailara.command.send.local]>->(
        {   'command'   => 'nroot.notify_online',
            'call_args' => { 'args' => <agents.virtual>->{$v_id}->{'name'} },
            'reply'     => {
                'handler' => 'base.agents.ondemand.handler.startup_reply',
                'params'  => { 'v_id' => $v_id }
            }
        }
    );
}

# ______________________________________________________________________________
#\\VG2KVPT334US77SAV3EGGJHTXJ462ZF7YGVODSG6R52VJDAGU3I3OLZBFRQWE6YQXAHVK22WQHV7C
# \\ RJWKJFYHOYD45GMK7CIILEU4ZOIBBZVXOFRXKTI3MJ44T4EVVQDO \\// C25519-BASE-32 //
#  \\// CJFP3P3NUYQUV6GO2DM4V46NLBUSJXC7FBD6WPLEIIVV2IDQKCQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
