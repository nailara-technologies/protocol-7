# >:]

# name  = nroot.agent.is_disabled
# descr = returns true if agent is explicitly disabled in start setup

my $agent_name = shift;
die 'nroot.agent.is_disabled: no agent name specified'
    if not defined $agent_name;

my $config_href   = <nroot.start_setup.globals.agents>;
my $agent_name_re = <regex.base.usr_str>;

return 0
    if not exists $config_href->{'disabled'}
    or not defined $config_href->{'disabled'}
    or $config_href->{'disabled'} =~ m|^\s*$|;

# checking config syntax
if ( $config_href->{'disabled'} !~ m|^($agent_name_re*\ *)+$|i ) {
    <[base.log]>->(
        0,
        "start setup syntax error: agents.disabled = '"
            . $config_href->{'disabled'}
            . "' <-- expecting valid agent name[s]"
    );
    die 'configuration syntax error in agents.disabled';
}

map { return 1 if $ARG eq $agent_name }
    split( m|\s+|, $config_href->{'disabled'} );

return 0;

#.............................................................................
#2LKMZI25PXJUWAFMLIF7PLQWHXV3JX5I7GY4THXC2ZY72GTIMIDSMJTPOVS7FU7WQC7LRXMTNVC2A
#::: Y3DRXKVRSH63Q6DMDCHL74V3KJHRYYUP7X5GFTPWDVFOVKIKDAH :::: NAILARA AMOS :::
# :: 2XE77FS3MRNVF6UCSWMV4OKR36GKKNB5V2YB33WXSCSOGNCDJCAY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
