# >:]

# name = universal.handler.switch_fade

my $watcher = shift->w;
my $params  = $watcher->data;
my $win_id  = $params->{'window_id'};
my $agent   = $params->{'agent_name'};

<X-11.fade_in>->{$win_id}->{'opacity'} //= 0;

# LLL: make fade steps time based (delta_t)!
<X-11.fade_in>->{$win_id}->{'opacity'} += 1;

if ( <X-11.fade_in>->{$win_id}->{'opacity'} >= 100 ) {
    delete <X-11.fade_in>->{$win_id}->{'opacity'};
    delete <X-11.fade_in>->{$win_id}
        if !keys %{ <X-11.fade_in>->{$win_id} };
    $watcher->cancel;

    <[universal.hide_except]>->($agent);

    if ( $agent eq 'mpv' ) {

        my $frame_index = <universal.sequence.frame_pos>++;
        my $video_frame = <universal.sequence.frame_path>->{$frame_index};

        <[base.protocol-7.command.send.local]>
            ->( { 'command' => 'browser.clear_views' } );

        <[base.protocol-7.command.send.local]>->(
            {   'command'   => 'core.image2html.get_url',
                'call_args' => {
                    'args' =>
                        join( ' ', $video_frame, <x11.width>, <x11.height> )
                },
                'reply' => { 'handler' => 'universal.handler.image2html_reply' }
            }
        ) if defined $video_frame;
        <universal.frame_index>++;
    }
    return;
}

<[base.protocol-7.command.send.local]>->(
    {   'command'   => "core.X-11.set_opacity",
        'call_args' => {
            'args' =>
                join( ' ', $win_id, <X-11.fade_in>->{$win_id}->{'opacity'} )
        }
    }
);

# ______________________________________________________________________________
#\\BBUCOUBI7UZWAVA57FHSIUPBYY6QLFEQAGBEYKOAQCT2SKTY54Z5MB5QS6J44ZEQUXXWVQSH7MXH2
# \\ B45ZP4MNGRDI2RJKWCZVF63SSTTNZO4V25IQ5FQJAIRNZ2WPIM5S \\// C25519-BASE-32 //
#  \\// KRQDPO43C3V7R72RAPLNPSTPOKNHL7MWSSH6FSCTTNQM7RWFSBA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
