# >:]

# name  = xserver.cmd.get_opacity
# param = <w_id>
# descr = return window opacity in percent [0..100]

my $X         = <xserver.x11>;
my $window_id = $$call{'args'};

return { 'mode' => 'nak', 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => 'nak', 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <xserver.x11_tops>;
$xtops->update;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'nak', 'data' => 'no such window' } if not defined $window;

my $result = <[xserver.get_window_opacity]>->($window_id);

if ( not defined $result ) {
    <[base.log]>->(
        0, "error during get_opacity() command for window $window_id [closed?]"
    );
    return { 'mode' => 'nak', 'data' => 'window has been closed' };
}

return { 'mode' => 'ack', 'data' => sprintf( "%.3f%%", $result * 100 ) };

# ______________________________________________________________________________
#\\GBLHI2HCPUNVOTEBXDMFWTRPMYZRUWEHFNUTK3VW3J4WEIHCB76WT4ZF3IXXW4ACBRMUQQB3KUNGY
# \\ UDHENHTLBV67U2S35X6YCA34UWXZVORHITLWBR46EWFPV4UXGVUJ \\// C25519-BASE-32 //
#  \\// JWRUTJL4WGCLM2ZEBGYKULH6OP3F3BB62ZFVBY22EPM5NBRDCDQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
