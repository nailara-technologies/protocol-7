# >:]

# name  = set-up.cmd.fetch-agent-config
# param = <agent> [type]
# descr = return config of specified agent as json

my ( $agent_name, $config_type ) = split( / +/, $$call{'args'}, 2 );
return { 'mode' => 'nak', 'data' => 'expected agent name parameter' }
    if not defined $agent_name;

return { 'mode' => 'nak', 'data' => 'invalid agent name syntax!' }
    if $agent_name !~ <regex.base.usr>;

my $type_args = {};
$type_args = { 'args' => $config_type } if defined $config_type;

my $cmd_path = "cube.$agent_name.get-config";
$cmd_path = "cube.get-config" if $agent_name eq 'cube';

<[base.protocol-7.command.send.local]>->(
    {   'command'   => $cmd_path,
        'call_args' => $type_args,
        'reply'     => {
            'handler' => 'set-up.handler.agent_reply',
            'params'  => {
                'agent_name' => $agent_name,
                'reply_id'   => $$call{'reply_id'}
            }
        }
    }
);

return { 'mode' => 'deferred' };

# ______________________________________________________________________________
#\\TTKUUOCYSXED6OL6PURSF74YUO7AJXIQJ2T6DOATMK5G3RWAOVRKUOWK4P3CMPJUNCYHPRY3UZAX2
# \\ TRYYUR77NJUM3GG6Q2RKRYGOVJUHD4OXHKNTY5QW5ILIOC7IEBVG \\// C25519-BASE-32 //
#  \\// K7U5NZICHNLURV6YS5EVNNA6THI3HFDRJGDNCJNWTOJ63TVK2CA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
