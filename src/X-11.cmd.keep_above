# >:]

# name  = X-11.cmd.keep_above
# param = <w_id>
# descr = keep specified window mapped on top

my $X         = <X-11.obj>;
my $window_id = $$call{'args'};

return { 'mode' => 'nak', 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => 'nak', 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <X-11.WM>;
<[X-11.update_X11_WM]>;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'nak', 'data' => 'no such window' } if not defined $window;

eval {
    for ( 1 .. 2 ) {    # <- workaround (ignored state requests)
        X11::Protocol::WM::change_net_wm_state( $X, $window_id, "remove",
            "BELOW" );
        X11::Protocol::WM::change_net_wm_state( $X, $window_id, "add",
            "ABOVE" );
    }
};
return { 'mode' => 'nak', 'data' => "unable to set window state 'above'" }
    if $EVAL_ERROR;
return { 'mode' => 'ack', 'data' => "set window state 'above'" };

# ______________________________________________________________________________
#\\FWRJYDD7KYT4XX3YFDGK5RTBBPH6TSPE555GEPUQMWSWLZPXEJPRBREA4KUSM3UV42YGQAMIO4OGA
# \\ J4E54WUEDMGFGEAQXW3RNOKGTVYZ36PDUWNCLKIPOXIQSFRJ766H \\// C25519-BASE-32 //
#  \\// LZFTKOJUSYSIIWF4O7AYZ4W3ODJR37VUUNDEMH7VD6KYONBYECY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
