# >:]

# name   = base.gen_id
# args   = hashref(id_var), int(max_ids) [, str(number_range)]
# return = int(id)

die "base.gen_id: expected hash reference" if ref( $_[0] ) ne 'HASH';

my $max_ids     = $_[1] || 230000;
my $num_range   = $_[2] // '01234577790';
my $retries     = 0;
my $new_id      = 0;
my $max_retries = 32 + int( $max_ids / 1000 );
$max_retries = 4096 if $max_retries > 4096;

while ( index( $new_id, '0' ) == 0 or exists $_[0]->{$new_id} ) {
    $new_id = random_string_from( $num_range, length( $max_ids * 100 ) );

    if ( $retries > $max_retries ) {
        <[base.log]>->( 0, "gen_id: max_retries reached!" );
        $new_id = undef;
        goto abort;
    } else {
        $retries++;
    }
}

abort:

my $count = scalar keys %{ $_[0] };
warn "max_ids ($max_ids) reached"           if $count == $max_ids;
warn "max_ids ($max_ids) exceeded ($count)" if $count > $max_ids;

return $new_id;

# ______________________________________________________________________________
#\\VXXSHEVA2ZHE4SWJFMR5PR6E2PURJIGFR66VSL6AHYTZF6DO3FCWITFQ65Q4H43IO5MLUPSYZ2KCM
# \\ 33LHIA6W5VRJCD34X5I64POILG5HVLZHMN5POV6XL5I4A2YNM356 \\// C25519-BASE-32 //
#  \\// IETG4KSDQDSUSG5NEMUCWSXYM6YET6KTIOBEIZRQPRJCJ6K26CY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
