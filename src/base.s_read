# >:]

# name = base.s_read
# desc = utf8 safe sysread replacement [ with optional fh_offset parameter ]
# note = buffer parameter expects passing by reference

warn 'filehandle not defined <{C1}>' and return undef if not defined $_[0];

my $read_fh    = $_[0];
my $buffer_ref = $_[1];
my $read_len   = $_[2];
my $buf_offset = $_[3];
my $fh_offset  = $_[4];

$$buffer_ref //= '';
$buf_offset  //= length($$buffer_ref);

#    sysread FILEHANDLE,SCALAR,LENGTH,OFFSET
#    sysread FILEHANDLE,SCALAR,LENGTH

#    aio_read  $fh, $offset, $length, $data, $dataoffset, $callback->($retval)

my $b_read;
IO::AIO::aio_read( $read_fh, $fh_offset, $read_len, $$buffer_ref,
    $buf_offset, sub { $b_read = $_[0] } );

IO::AIO::flush();

return undef if $b_read < 0;    # <- sysread() behaviour
return $b_read;

# ______________________________________________________________________________
#\\7HR7L6AH7EUQBMD6RW43CBC4FRSXHLLPOQFDCUCUA2E6WL2GHHLTYLB6VL66H5JPMD5LD2W72K6US
# \\ 3H4KD7LK4ZWUYBU35DOFBG6CGPFA4DWI7LRPTOZTN6H7ZF4AOVUO \\// C25519-BASE-32 //
#  \\// YUBD2MXQS24CPBNESPWXEGHQ65TVRFKMMFXMVSXFVCJEXZSAOBQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
