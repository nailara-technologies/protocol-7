# >:]

# name  = base.callback.cmd_reply
# descr = callback to reply later (asynchronously) to local commands

my ( $reply_id, $reply ) = @_;

return if defined $reply_id and $reply_id eq 'silent';  # silent (no reply) mode

die "expected numerical reply_id"
    if @_ != 2
    or not defined $reply_id
    or $reply_id !~ /^\d+$/;

warn "expected reply data hash reference"
    if not defined $reply
    or ref($reply) ne 'HASH';

return
    warn "no command meta data set up for id '$reply_id' [ agent gone? ] <{C}>"
    if not exists <base.cmd_reply>->{$reply_id};

my $meta_data  = <base.cmd_reply>->{$reply_id};
my $cmd        = $meta_data->{'cmd'};
my $cmd_id     = $meta_data->{'cmd_id'};
my $output     = $meta_data->{'output_fh'};
my $session_id = $meta_data->{'session_id'};

my $_cmd_id = '';
if ( $cmd_id > 0 ) { $_cmd_id = '(' . $cmd_id . ')' }

# reply data error check

if ( not defined $reply or ref($reply) ne 'HASH' ) {
    $reply          = {};
    $$reply{'mode'} = 'nak';
    $$reply{'data'} = 'error during command invocation [ details are logged ]';
    <[base.log]>->( 0, "[$session_id] cmd ['$cmd'] err [ href expected ]" );

} elsif ( not defined $$reply{'data'}
    or $$reply{'mode'} ne 'data' and !length( $$reply{'data'} ) ) {
    <[base.log]>->(
        0,
        "[$session_id] empty "
            . uc( $$reply{'mode'} )
            . '-reply attempted! (base.callback.cmd_reply)'
    );
    $$reply{'mode'} = 'nak';
    $$reply{'data'} = 'error during command invocation [ details are logged ]';
}

# check answer mode

if ( $$reply{'mode'} =~ /^(ACK|NAK|WAIT)$/io ) {
    $$reply{'data'} =~ s/\n/\\n/go;
    $$output .= $_cmd_id . uc( $$reply{'mode'} ) . ' ' . $$reply{'data'} . "\n";
} elsif ( uc( $$reply{'mode'} ) eq 'DATA' ) {
    my $len = length( $$reply{'data'} );
    $$output .= $_cmd_id . 'DATA ' . $len . "\n" . $$reply{'data'};
} elsif ( uc( $$reply{'mode'} ) eq 'TERM' ) {
    <[base.session.shutdown]>->( $session_id, $$reply{'data'} );
}

# clean up

delete <base.cmd_reply>->{$reply_id};

# ______________________________________________________________________________
#\\VE4A6KIYL3N4VUWSXCZTWJAFQU7TABPT55XSVPE5276AERACZBQZDGND2NZBVYHAQV3OTGXMZ6F24
# \\ RQ6NKCA2R5QOR77D6RJO5NEK7NOQ3U3RZXL6NZQ4XOE6HRUPF5TK \\// C25519-BASE-32 //
#  \\// 5LEHIQOIVAJXHO5JJSG3HO5O53BBTRHKKTVJUMEE5V7UM5VYAAI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
