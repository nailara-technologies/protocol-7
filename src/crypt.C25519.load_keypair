# >:]

# name = crypt.C25519.load_keypair

my $key_vars = <[crypt.C25519.key_vars]>->(shift);    # <- [key_name] (optional)

my $key_dir      = $key_vars->{'key_dir'};
my $key_usr      = $key_vars->{'usr_name'};
my $key_name     = $key_vars->{'key_name'};
my $key_basepath = $key_vars->{'key_basepath'};

my $pubkey_file = "$key_basepath.pub";

if ( -r $key_basepath and -r $pubkey_file ) {
    my $u_str = $key_name =~ /^$key_usr(?:\..+)$/ ? '' : " [usr:$key_usr]";
    <[base.log]>->( 1, ":. C25519-key .:. '$key_name'$u_str" );
    if ( $key_basepath =~ /\.C25519_b64u$/ ) {        # base64
        $KEYS{'C25519'}{$key_name}{'priv'}
            = decode_b64u( ${ <[file.slurp]>->($key_basepath) } );
        $KEYS{'C25519'}{$key_name}{'pub'}
            = decode_b64u( ${ <[file.slurp]>->($pubkey_file) } );
    } elsif ( $key_basepath =~ /\.C25519_b32$/ ) {    # base32
        $KEYS{'C25519'}{$key_name}{'priv'}
            = decode_b32r( ${ <[file.slurp]>->($key_basepath) } );
        $KEYS{'C25519'}{$key_name}{'pub'}
            = decode_b32r( ${ <[file.slurp]>->($pubkey_file) } );
    }
} else {
    <[base.log]>->( 0, "unable to load '$key_name' key pair ..." );
}
