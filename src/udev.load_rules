# >:]

# name = udev.load_rules

my @rule_files;
my $setup_name = shift;

<[base.log]>->( 1, "..loading udev rule setup files..," );

if ( defined $setup_name ) {
    @rule_files = "agents/udev/rule-setup.$setup_name";
} else {
    my $dir_fh;
    <[base.log]>->( 1, "no specific rule file configured, loading all .," );
    opendir( $dir_fh, <system.conf_path> )
        or die "unable to open conf dir: $OS_ERROR";
    map { push( @rule_files, $ARG ) if $ARG =~ /^conf\.udev_rules\..+$/ }
        readdir($dir_fh);
    closedir($dir_fh);
}

return <[base.log]>->( 0, "found no rules file to load" ) if !@rule_files;

foreach my $file (@rule_files) {
    <[base.log]>->( 1, ": '$file'" );
    <udev.rules> = <[base.load_section_config]>
        ->( join( '/' . <system.conf_path>, $file ) );
}

# ______________________________________________________________________________
#\\BUDSB4XATVDCD45KQFMVUB3XHWBEXQ57HALPL6PUZCJ4KBRNKYPU3V7DS4S2VX4Z67GEIXE4ID4QW
# \\ WA7R7GZ5HCV5FNE5YGPZIVN47CZ3W5RDUN24PUFCHKX67QJ4VY3G \\// C25519-BASE-32 //
#  \\// HNEKXWBQV7IVYO3AISZYYXWR5R2UYOBEUW6PA3WZIGONL45ZIAI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
