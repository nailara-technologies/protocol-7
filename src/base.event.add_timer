# >:]

# name  = base.event.add_timer
# descr = install a timer watcher

return undef
    if ref( $_[0] ) ne 'HASH'
    and warn 'base.event.add_timer: expected hash reference <{C1}>';
my $callback = ${ $_[0] }{'handler'};
return undef
    if not defined $callback
    and warn "base.event.add_timer: callback ['handler'] is missing <{C1}>";
return undef
    if not defined $code{$callback}
    and warn "base.event.add_timer: callback '$callback' does not exist <{C1}>";

my @event_time;
map { push( @event_time, ( $_ => ${ $_[0] }{$_} ) ) if defined ${ $_[0] }{$_} }
    ( 'at', 'after' );

my $repeat
    = ( defined ${ $_[0] }{'interval'} and ${ $_[0] }{'interval'} ) ? 1 : 0;

my $timer;
eval {
    $timer = Event->timer(
        'reentrant' => ${ $_[0] }{'reentrant'} // 1,
        'repeat'    => ${ $_[0] }{'repeat'}    // $repeat,
        'prio'      => ${ $_[0] }{'prio'}      // 1,
        'async'     => ${ $_[0] }{'async'}     // 0,
        'desc'      => ${ $_[0] }{'desc'}      // $callback,
        'cb'       => sub { &{ $code{$callback} } },
        'time'     => ${ $_[0] }{'time'},
        'interval' => ${ $_[0] }{'interval'},
        'hard'     => ${ $_[0] }{'hard'},
        'data'     => ${ $_[0] }{'data'},
        @event_time
    );
};

warn "add_timer: $@ <{C}>" if $@ or not defined $timer;

return $timer;

# ______________________________________________________________________________
#\\BNFVP5MECPSU4EXDZZJRIJTGLB5XBXRZN3RGIUIKITLCNHELY3RE3SDEPR5B67UMMV7PBPVXKYP64
# \\ TSL7OODIJJZJMFAECJEMTGEGUI23DEOELSWYDMFWBD3J56PKFDXB \\// C25519-BASE-32 //
#  \\// XLRT3IV6SJRG76DNGFW7BKC7JLLCZ5KTTYB6SJKGEXCDKHCT2CA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
