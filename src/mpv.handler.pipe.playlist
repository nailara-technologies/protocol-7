# >:]

# name = mpv.handler.pipe.playlist

my $playlist_str  = '';
my $playlist_json = shift // '';
my $reply_id      = shift @{<mpv.reply_ids>};

if ( length($playlist_json) ) {
    my $playlist_data = <mpv.json.parser>->decode($playlist_json);
    map {
        $playlist_str .= exists $_->{'playing'} ? ':. ' : ':  ';
        $playlist_str .= $_->{'filename'} . "\n"
    } @{$playlist_data};
} else {
    <[base.log]>->(
        0, "playlist decoding handler called with empty string (invalid json)"
    );
}

<[base.callback.cmd_reply]>->(
    $reply_id,
    {   'mode' => 'data',
        'data' => $playlist_str
    }
);

# ______________________________________________________________________________
#\\TCQNTKCBOS6L4HVOOK2GUCLAQU5NCJUFYUAPHJQQ27P4FAOHK25GTMR4X27XWXDFP33UFHWFOJPWS
# \\ APFIMOHENXPN5RALPPOF2EIXN5QNV3QQJRBS57QI3HY2GA5UFONF \\// C25519-BASE-32 //
#  \\// ESWZVEIOMDFRLNVVX7BEOYSYOOTDTWF7W7LFMQCJ6JHBDT2GYBQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
