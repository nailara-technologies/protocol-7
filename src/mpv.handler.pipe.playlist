# >:]

# name = mpv.handler.pipe.playlist

my $playlist_str  = '';
my $playlist_json = shift // '';
my $reply_id      = shift @{<mpv.reply_ids>};

if ( length($playlist_json) ) {
    my $playlist_data = <mpv.json.parser>->decode($playlist_json);
    map {
        $playlist_str .= exists $ARG->{'playing'} ? ':. ' : ':  ';
        $playlist_str .= $ARG->{'filename'} . "\n"
    } @{$playlist_data};
} else {
    <[base.log]>->(
        0, "playlist decoding handler called with empty string (invalid json)"
    );
}

<[base.callback.cmd_reply]>->(
    $reply_id,
    {   'mode' => 'data',
        'data' => $playlist_str
    }
);

# ______________________________________________________________________________
#\\R2K3ZDGC3LKBJMKTJJXAA434GBOBBBKETJFW7EDJIK4XJDV2J5ZLILKWG3XM2G33IHNRRTMFUAMP6
# \\ 7TGO4PVSTNHMJ7WAX7A7IPVD67ZXXVKFKU7ZJJD7WUGV5PJGYYV5 \\// C25519-BASE-32 //
#  \\// 676UMXVRW7KOQMFP5KPI6NQ4K3MVHNBLIXUDETLMRTKY2XLOUCQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
