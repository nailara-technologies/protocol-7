# >:]

# name  = base.protocol.bind
# args  = filehandle, protocol [, mode]
# descr = bind a specific protocol to a socket / filehandle

return warn 'expected protocol name parameter' if not defined $_[1];
if ( not defined $_[0] or not defined $data{'protocol'}{ $_[1] } ) {
    my $protocol_name = $_[1];
    my $reason        = 'undefined filehandle';
    $reason = 'unknown protocol'
        if not defined $data{'protocol'}{$protocol_name};
    <[base.log]>->( 0, "unable to bind protocol '$protocol_name' [ $reason ]" );
    <[base.session.check_remaining]>;
    return undef;
}
$data{'handle'}{ $_[0] }{'protocol'} = $_[1];
my $mode = $_[2] || 'server';

my $fd = eval { fileno( $_[0] ) };

if ( $EVAL_ERROR or not defined $fd ) {
    my $ref_str = ref( $_[0] );
    do { $EVAL_ERROR =~ s|\n+| |g and $EVAL_ERROR =~ s|\.? +$||g }
        if defined $EVAL_ERROR;
    <[base.log]>->(
        0,
        "<<!>> unable to bind protocol '$_[1]' to '$ref_str'-filehandle [$EVAL_ERROR]"
    );
    <[base.session.check_remaining]>;
} else {
    warn "file handle '$fd' does not have a real file descriptor" if $fd == -1;
    <[base.log]>->(
        2, "bound protocol '$_[1]' to handle '$_[0]' [ $mode mode ]"
    );
    my $id = <[base.session.init]>->( $_[0], $_[1], $mode );
}

# ______________________________________________________________________________
#\\ZHPKACAMCBYTBW7XPPFXXEM45WGXTZULUL3JNH7LGBZDDV2BUI65L5VVNTB4HMWWM6TSZE23UP6FG
# \\ I2JOAAQWLNUZ4O3LRL5UGOBWCSGYLUYWDI6NJFKMLZJDC24MGWMX \\// C25519-BASE-32 //
#  \\// OPOQI7VQBJII3G42E2QSAPNETHPNIKGGQ57YBS3Q7A5G2WZIACI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
