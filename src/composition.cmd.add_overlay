# >:]

# name  = composition.cmd.add_overlay
# param = <tile_group_name[s]>
# descr = overlay specified tile group on current

my $overlay_str = $$call{'args'} // '';

<composition.transition_queue> //= [];
<composition.overlays.current> //= [];
<composition.overlays.previous> = [ @{<composition.overlays.current>} ];

return {
    'mode' => 'nak',
    'data' => "current composition is already '$overlay_str' - nothing to do !"
    }
    if $overlay_str eq <composition.current_tile_group>;

my %new_overlays = map { $ARG => 1 } split / +/, $overlay_str;
my @new_overlays = sort keys %new_overlays;

map {
    return {
        'mode' => 'nak',
        'data' => "expected valid tile group name"
        }
        if not defined $ARG or !length($ARG);
    return {
        'mode' => 'nak',
        'data' => "composition \"$overlay_str\" not found!"
        }
        if not exists <composition.setup.tile-groups>->{$ARG};

    push( @{<composition.overlays.current>}, $ARG );
} @new_overlays;

my $merged_name = <[composition.merge_multiple]>->(@new_overlays);

return <[composition.cmd.switch-tile-group]>->( { 'args' => $merged_name } );

# ______________________________________________________________________________
#\\QADZAWQJ7LV7BH3M6TZS22RFHEG5WJZVYCPKFAFJFXBHYCSU7LU3N5G3BHYSL4LTIDJTT3FX7G7VE
# \\ QG4PMUUGJJEQ3CILXY7D6FEYWWCYBZFYIJHE5MKEEA4TAYJQEY2W \\// C25519-BASE-32 //
#  \\// FBRCYIUZMLDQXCXBOKNGXZFANT2Z5P3SIAYVZXG6YWENCWIIWDA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
