# >:]

# name = discover.handler.anounce_host_addr

<[base.log]>->( 2, "sending announce_host packet .." );

my %ifconfig;
my $mlenip   = 0;
my $hostname = <system.host.hostname>;
my $ifaces   = Net::Ifconfig::Wrapper::Ifconfig('list'); # XXX -> Net::Interface

<discover.announce_interval.current> //= 0.23;
<discover.announce_interval.maximum> = sprintf( "%.2f", 40 + rand(4) );
<discover.announce_interval.ifactor> = 1.13;

<discover.announce_interval.logged> //= 0;
<[base.log]>->( 1, "starting 'announce host' broadcast interval ..." )
    if !<discover.announce_interval.logged>++;

my $payload_str = "HOST[ $hostname ] = {\n";
my $start_len   = length($payload_str);
map {
    foreach my $ip_addr ( keys( %{ $ifaces->{$_}->{'inet'} } ) ) {

        # XXX: make exclusion patterns configurable!
        next if $_ !~ /^(en|\wth|wl)/;    # <- skipping other interfaces!

        $mlenip = length($ip_addr) if length($ip_addr) > $mlenip;

        # final sort
        my $is_local = 0;

        # LINK-LOCAL
        $is_local++ if $ip_addr =~ /^169\.254\./;

        # RFC1918
        $is_local += 2 if $ip_addr =~ /
                        (^10\.)|
                        (^127\.)|
                        (^192\.168\.)|
                        (^172\.1[6-9]\.)|(^172\.2[0-9]\.)|(^172\.3[0-1]\.)
                    /x;

        # XXX: make prio patterns configurable!
        my $iface_prio = 0;
        $iface_prio-- if $_ =~ /^(e(th|n))/;
        $iface_prio++ if $_ =~ /^(ath|wl(p|an))/;

        $ifconfig{ <[base.gen_id]>->( \%ifconfig ) } = {
            'ip'         => $ip_addr,
            'iface'      => $_,
            'mac'        => $ifaces->{$_}->{'ether'},
            'is_local'   => $is_local,
            'iface_prio' => $iface_prio
        };
    }
    }
    keys %{$ifaces};
my $x_pos = $mlenip + $start_len + 1;

# print Dumper \%ifconfig;

foreach my $id (
    sort { $ifconfig{$b}{'is_local'} <=> $ifconfig{$a}{'is_local'} }
    sort { $ifconfig{$a}{'iface_prio'} <=> $ifconfig{$b}{'iface_prio'} }
    sort {
        length( $ifconfig{$a}{'iface'} ) <=> length( $ifconfig{$b}{'iface'} )
    }
    sort {
        int(join( '',
                map { sprintf "%03d", $_ } split /\./,
                $ifconfig{$a}{'ip'} )
            ) <=> int(
            join( '',
                map { sprintf "%03d", $_ } split /\./,
                $ifconfig{$b}{'ip'} )
            )
    }
    keys %ifconfig
    ) {
    $payload_str .= sprintf(
        "%" . $x_pos . "s   #  %-17s / %s\n",
        $ifconfig{$id}{'ip'},
        $ifconfig{$id}{'mac'},
        $ifconfig{$id}{'iface'}
    );
}
$payload_str .= "}\n" if $payload_str !~ /}\n$/;

my $payload_len = length($payload_str);
<[base.log]>->(
    2, ".. sending 'announce host' packet .. [$payload_len payload bytes]"
);

<[discover.cmd.mcast_send]>->( { 'args' => $payload_str } );

<discover.timer.announce_host>->cancel
    if <discover.timer.announce_host>->is_active;
<discover.timer.announce_host> = <[event.add_timer]>->(
    {   'after'   => <discover.announce_interval.current>,
        'handler' => 'discover.handler.anounce_host_addr'
    }
);

<discover.announce_interval.current> = sprintf( "%.2f",
    <discover.announce_interval.current> *
        <discover.announce_interval.ifactor> );
<discover.announce_interval.current> = <discover.announce_interval.maximum>
    if <discover.announce_interval.current>
    > <discover.announce_interval.maximum>;
