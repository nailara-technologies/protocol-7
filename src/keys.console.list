# >:]

# name  = keys.console.list
# descr = list C25519 key files/names for current user
# note  = nailara keys list | grep ' : .*: ' | sed 's/.* : //'

my $key_vars = <[crypt.C25519.key_vars]>;

my $key_dir = $key_vars->{'key_dir'};
my $key_usr = $key_vars->{'usr_name'};

my $key_re_secret = <keys.regex.key_file.secret>;
my $key_re_public = <keys.regex.key_file.public>;

opendir( my $dir_fh, $key_dir ) or die "$key_dir: $!";
my @key_files
    = grep {m{$key_re_secret|$key_re_public}} reverse sort readdir($dir_fh)
    or <[base.log]>->( 0, "unix user '$key_usr' has no C25519 key files" );
closedir($dir_fh);

return if !@key_files;    # <- no keys, skipping further output!

my %key_names;
my $max_nlen = 0;

map {
    $key_names{$_} = "'$1'" if $_ =~ m{$key_re_secret};
    my $spaces = ' ' x length($1);
    $key_names{$_} = " $spaces " if $_ =~ m{$key_re_public};
    my $l = length( $key_names{$_} );
    $max_nlen = $l if $l > $max_nlen
} @key_files;

<[base.log]>->( 1, "listing key files ['$key_dir']" );

print "\n :: keys for user $key_usr :.\n :\n",
    ( map { sprintf( " : %${max_nlen}s : %s\n", $key_names{$_}, $_ ) }
        @key_files ),
    "::\n\n";

# ______________________________________________________________________________
#\\B6JQBEIPULIUU6ZYY4IUG5Q4L6YDZBWCH5VKFCW3ISALMQ6CBGPHGARUIF5IGW4ZPNOO3QAQAXIKQ
# \\ H77SUMQCYW4YMWCOBLMBEKMFN32F6F5OMCSWIPEV2IS4IUJ3RXUO \\// C25519-BASE-32 //
#  \\// SUBTPIGBEW3URTT37DLTDH5NZLICPQNALBTGKTKOZV6YDRS7KCI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
