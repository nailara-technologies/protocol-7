# >:]

# name  = screenshot.cmd.get_region_color
# param = <X1> <Y1> <X2> <Y2>
# descr = return average color for given region

my $param_str = shift->{'args'} // '';
return { 'mode' => 'nak', 'data' => 'expected valid region coordinates' }
    if $param_str !~ /^(\d+ +){3}\d+$/;
my @coords = ( split( / +/, $param_str ) );

my $img     = <[screenshot.grab_region]>->(@coords);
my $err_str = $img if ref($img) ne 'Imager';

$img = <[screenshot.scale_image]>->( $img, 1, 1 ) if not defined $err_str;
my $err_str = $img if not defined $err_str and ref($img) ne 'Imager';

my @RGB     = <[screenshot.pixel_color]>->( $img, 0, 0 );
my $err_str = shift @RGB if @RGB == 1;

return {
    'mode' => 'nak',
    'data' => "unable to acquire region color [ $err_str ]"
    }
    if defined $err_str;

pop(@RGB);    # removing alpha

return { 'mode' => 'ack', 'data' => sprintf( "#%02X%02X%02X", @RGB ) };

# ______________________________________________________________________________
#\\P7YI6VMW2764NKME55EIMXCFXEOOGO5PAYXBO3L7PLAHY4CJEO6KXMDDJCCZBCPHNIQEQOXXVJZIS
# \\ 4VM3NEASAH7TKLVUE3YKYWRV3NJ2IT6M3XQ3YTNNZKLEA5QAHB4X \\// C25519-BASE-32 //
#  \\// KPGRPL5MS2YHNIZGZNQSRXY7J2NRQQETV3MBDYE4DQFRREMY2CI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
