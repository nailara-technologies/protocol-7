# >:]

# name  = browser.cmd.run_js
# descr = run javascipt in foreground view

my $reply_id  = $$call{'reply_id'};
my $fg_index  = <browser.overlay.index>->{'fg'};
my $view      = <browser.gtk_obj.view>->{$fg_index};
my $view_uri  = $view->get_uri();
my $settings  = $view->get_settings();
my $js_string = $$call{'args'} // '';

return {
    'mode' => 'NAK',
    'data' => 'javascript execution is disabled'
    }
    if !$settings->get_enable_javascript();

return { 'mode' => 'nak', 'data' => 'expected javascript command string' }
    if !length($js_string);

<[base.log]>->( 2, "[$view_uri] running javascript : '$js_string'" );

$js_string = "throw $js_string";    # see below comment for why ...

$view->run_javascript(
    $js_string,    # <- raw javascript
    undef,         # <- GCancellable
    sub {          # <- : TODO : create external (reloadable) handler... <<!>>
        my $self   = shift;    # <- WebView
        my $result = shift;    # <- WebKitJavascriptResult
        my $rep_id = shift;    # <- nailara internal reply id
        my $s_res  = '';

        ## [ was unable to access value, so using exception / throw to get it! ]
        #
        #         my $s_val = $s_res->get_js_value();
        #         my $s_con = $s_val->get_property('context');
        #         my $js_vm = $s_con->get_property('virtual-machine');

        eval { $s_res = $self->run_javascript_finish($result) };
        ( my $ex_str = $@ ) =~ s| at /usr/.+\n$||;
        $ex_str =~ s|^[^ ]+ ||;

        my $re_mode = $ex_str =~ /^[^:]*Error[^:]*:/ ? 'nak' : 'ack';
        $re_mode = 'raw' if $ex_str =~ /\n/;
        $ex_str  = '<!> "throw" already being prepended internally <!>'
            if $ex_str eq "SyntaxError: Unexpected keyword 'throw'";

        <[base.log]>->(
            0, sprintf "<!JSerr!> [%s] %s",
            $self->get_uri, $ex_str
        ) if $re_mode eq 'nak';    # <- has JS err!

        <[base.callback.cmd_reply]>->(
            $rep_id,
            {   'mode' => $re_mode,
                'data' => $ex_str
            }
        );

    },
    $reply_id
);

return { 'mode' => 'later' };
