# >:]

# name  = io.unix.socket.input.connect

my $id = $_[0]->w->data;
my $fd = $data{'session'}{$id}{'handle'};

if ( -S $fd ) {
    my $new_sock;
    if ( $new_sock = $fd->accept() ) {
        $data{'handle'}{$new_sock}{'link'} = 'unix';
        $data{'handle'}{$new_sock}{'mode'} = 'input';
        no strict;
        my @peercred = unpack( 'i*', $new_sock->sockopt( SO_PEERCRED() ) );
        die "[$id] SO_PEERCRED failed" if @peercred != 3;
        use strict;
        $data{'handle'}{$new_sock}{'unix'} = {
            'pid' => $peercred[0],
            'uid' => $peercred[1],
            'gid' => $peercred[2]
        };
        return $new_sock;
    } else {
        <[base.log]>->( 0, "io.unix.socket.input.connect: can not accept [$!]" );
        return undef;
    }
} else {
    <[base.log]>->( 0, "io.unix.socket.input.connect: no valid socket supplied" );
    return undef;
}

# ______________________________________________________________________________
#\\74JD5MYGZD6RGP57LUOYH4GFHINCRWFPJ2ZSXYS3GNAISH74YGBMPJM6KGHGLVKXBWJOUDGHUGMYK
# \\ GPMXAPMZALSF27O5V7QEXMF6FPXPFEW7FJ36XUAFGOCDOKZRG4D5 \\// C25519-BASE-32 //
#  \\// STOLKTQCODXU6GRBKP36VBKPNKNZIY3XOSRCAGQ65733N3DV2BQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
