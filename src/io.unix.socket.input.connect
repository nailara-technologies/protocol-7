# >:]

# name  = io.unix.socket.input.connect

my $id = $_[0]->w->data;
my $fd = $data{'session'}{$id}{'handle'};

if ( -S $fd ) {
    my $new_sock;
    if ( $new_sock = $fd->accept() ) {
        $data{'handle'}{$new_sock}{'link'} = 'unix';
        $data{'handle'}{$new_sock}{'mode'} = 'input';
        no strict;
        my @peercred = unpack( 'i*', $new_sock->sockopt( SO_PEERCRED() ) );
        die "[$id] SO_PEERCRED failed" if @peercred != 3;
        use strict;
        $data{'handle'}{$new_sock}{'unix'} = {
            'pid' => $peercred[0],
            'uid' => $peercred[1],
            'gid' => $peercred[2]
        };
        return $new_sock;
    } else {
        <[base.log]>
            ->( 0, "io.unix.socket.input.connect: can not accept [$!]" );
        return undef;
    }
} else {
    <[base.log]>->(
        0, "io.unix.socket.input.connect: no valid socket supplied"
    );
    return undef;
}

# ______________________________________________________________________________
#\\VU72ZSZI2474HXZ6P624YXCSZFB7X7XNXQIRX7UEWW2SYIA3PAWT7LD7NQ5H7QRA5NRBJN4RQIAEE
# \\ K4N3GSP23FH66TAM7WUHAOHQY7A57DZC4A4UOZWWWGJIIV6WCLCS \\// C25519-BASE-32 //
#  \\// IDYFWQ6C7HAOKQKGVV7AMWD5EAG6PT2YCCKSERTICTLHKNAOYDY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
