# >:]

# name  = X-11.cmd.unhide_window
# param = <w_id>
# descr = unhide specified window

my $X         = <X-11.obj>;
my $window_id = $$call{'args'};

return { 'mode' => 'nak', 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => 'nak', 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ m|^\d+$|;

return { 'mode' => 'nak', 'data' => 'no such window' }
    if not <[X-11.window_id_found]>->($window_id);

<[base.log]>->( 2, "unhiding window $window_id" );
eval {
    for ( 0 .. 1 ) {    # <- workaround [ ignored state requests ]
        X11::Protocol::WM::change_net_wm_state( $X, $window_id, 'remove',
            'HIDDEN' );
    }
};

return { 'mode' => 'nak', 'data' => "unable to remove 'hidden' state" }
    if $EVAL_ERROR;
return { 'mode' => 'ack', 'data' => "removed 'hidden' window state" };

# ______________________________________________________________________________
#\\J3CQ3ILHYM5LWTSEUFXIFXFEVZ7M7IVCTFESFUTJJ4J4WWFIBE3TS2M3ZQ4EO257VFSYIRXEEA5IU
# \\ UZDHVEWGW5Q67WIFCGIP4P75C5B37PAOCUJL4OXJVHZH2NSTAG2M \\// C25519-BASE-32 //
#  \\// YCD2OPRDOHE2O762NI2CMBYDJUTVWMBFHDXEUV5TJ4YJXJSCWAI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
