# >:]

# name = openbox.init_code

<[base.perlmod.load]>->( 'File::Path', qw| make_path remove_tree | );

<openbox.tmp_dir_init> //= 0;
if ( not <openbox.tmp_dir_init> ) {
    my $home_path = $ENV{'HOME'} = '/tmp/.openbox-' . $$;
    my $log_dir   = "$home_path/.cache/openbox";
    make_path($log_dir) or die "cannot create directory '$log_dir' [ \l$! ]";
    ### ..hiding log file after creation., [ will remain empty ] ###
    map { remove_tree($_) if -d $_ and ( -o $_ or -w $_ ) }
        glob('/tmp/.openbox-*');
    <openbox.home_path>    = $home_path;
    <openbox.log_file>     = "$log_dir/openbox.log";
    <openbox.tmp_dir_init> = 1;
}

<openbox.patched_openbox_path> = '/usr/local/bin/openbox';
<openbox.prefer_patched_openbox> //= 0;

<openbox.bin_path> = <[base.required_bin_path]>->('openbox');

<base.message_parsers.child_output> = [
    $code{'base.parser.xclient-errors'},
    sub {
        my $msg = shift;
        $msg =~ s|^Openbox-Message: ||;
        $msg =~ s|^Failed.to.open.the.display.+
                 |cannot open display ['$ENV{'DISPLAY'}']|x;
        return $msg;
    }
];

if ( <openbox.prefer_patched_openbox>
    and -x <openbox.patched_openbox_path> ) {
    <openbox.bin_path> = <openbox.patched_openbox_path>;
    <[base.log]>->( 1, "selected patched openbox version..," );
}

die "[!] openbox binary not found [!]\n"
    if !length(<openbox.bin_path>)
    or !-x <openbox.bin_path>;

( <openbox.version> = qx(<openbox.bin_path> --version) )
    =~ s,^Openbox |\n.+$,,sg;
<openbox.version> = 'unknown'
    if not defined <openbox.version> or !length(<openbox.version>);

$SIG{'TERM'} = sub {
    map { remove_tree($_) if -d $_ and ( -o $_ or -w $_ ) }
        glob('/tmp/.openbox-*');
};

0;

# ______________________________________________________________________________
#\\IDQ3TJOSON5IQGVLVKSBKRDPPVGAB6SXPLII2MZJSEZN3WLOF5MFDJIWES3QW24PLEVOEJWFHNW24
# \\ GLTAP5CXXZIEOXCOW7ZAWGCJSLCG6Y5626YP42XBBXOYM4XR5SO3 \\// C25519-BASE-32 //
#  \\// XSHQX5TKO56MZIGYF6F2KNAMTZLZD43R5BT4CHHJLHTNTCFYQDA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
