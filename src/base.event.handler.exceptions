# >:]

# name  = base.event.handler.exceptions

my $event   = shift;
my $err_str = shift;
my $watcher = $event->w;

return if $err_str eq '?';    # <-- WEIIIRD and redundant

my $ev_desc = 'not named';
$ev_desc = $watcher->desc if $event and $watcher;

$err_str =~ s| at (\S+) line (\d+).*\n$||;
my $file = $1;
my $line = $2 // '';
$err_str =~ s|^(.)|lc($1)|e;
$err_str =~ s|can\'t|cannot|g;
$err_str .= " < $@ >" if $@;

<[base.log]>->( 0, "$err_str [ $file, $line ] \\\\ [EV: $ev_desc ]" );

return
    if not $watcher
    or <system.verbosity.console> < 2 and <system.verbosity.agent_buffer> < 2;

my @attr_names = sort { length($a) <=> length($b) } sort $watcher->attributes;

my $lvl  = 2;
my $mlen = 0;
map { $mlen = length($_) if length($_) > $mlen } @attr_names;

<[base.log]>->( $lvl, ".:[ event ]:." );

foreach my $akey (@attr_names) {
    my $val = $watcher->$akey // '<undef>';
    next if $akey eq 'debug' and !length($val);
    <[base.log]>->( $lvl, sprintf( ": %${mlen}s : %s", $akey, $val ) );
}

# ______________________________________________________________________________
#\\P4EROPTKQ4JDGT6KD5BANF3M7TGW5MKFQBDNASNFBO3BX7IQQMHZVJSCPYOEM63UQN5OL4GW4AMPE
# \\ BZAZAKRIRAYWM3R6BXFSZUWI2S3JTVAWVYWQMB4K65BCNQJCH3DG \\// C25519-BASE-32 //
#  \\// 5VHCFNG2ZEPAL7MJR3VG3T6BUJGHQ3L5OGZVBKTS3MJTYUDUABI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
