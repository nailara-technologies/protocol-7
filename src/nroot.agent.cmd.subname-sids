# >:]

# name  = nroot.agent.cmd.subname-sids
# param = <pattern>
# descr = list cube sid[s] for given subname pattern

my $subname_query = $$call{'args'} // '';
return { 'mode' => 'nak', 'data' => 'expected agent subname pattern' }
    if !length($subname_query);

my @reply_list;
foreach my $instance_id ( keys %{<nroot.agent.instance>} ) {
    my $instance = <nroot.agent.instance>->{$instance_id};
    next
        if not exists $instance->{'subname'}
        or not exists $instance->{'cube_sid'}
        or $instance->{'subname'} !~ qr/$subname_query/;
    push(
        @reply_list,
        join( ' ',
            $instance->{'cube_sid'},
            "$instance->{agent_name} \[ $instance->{subname} ]" )
    );
}

if (@reply_list) {
    return {
        'mode' => 'data',
        'data' => join( '', map {"$ARG\n"} @reply_list )
    };
} else {
    return {
        'mode' => 'nak',
        'data' => "no match for subname pattern /$subname_query/"
    };
}

#.............................................................................
#LMK45HEA7VKA3WEQ55BANT3CW4YQIH6S3D3EEMWHH7YY7AQA5PAR7LZQRKCQRJRDLTYWAELFU3RAC
#::: PNZ5KFP3233NJMUPQKCDB6HFL7BLJ46UGYEVZMP5LAYLLKCKWVD :::: NAILARA AMOS :::
# :: 4GCGBMHYYZPBGXTRC5EGN4BP27LGXVSTSVHGFCQNIB3ZUAKMWABY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
