# >:]

# name  = composition.cmd.size_hint_y
# param = <agent[tile]> [ratio]
# descr = return matching Y % to fit ratio [16:9]

return { 'mode' => 'nak', 'data' => "expected valid agent name" }
    if not defined $$call{'args'}
    or $$call{'args'} !~ /^(\S+)( +(\d+:\d+))?$/;

my ( $agent_name, $ratio_str ) = ( $1, $3 // '16:9' );    # <- default ratio!

my $coords_reply = <[composition.cmd.get_coordinates]>->($agent_name);

return $coords_reply if $coords_reply->{'mode'} ne 'ack';

my @coords = split( / /, $coords_reply->{'data'} );

my ( $width, $height ) = ( $coords[2] - $coords[0], $coords[3] - $coords[1] );

my %underscan;
map {
    $underscan{$1} = <composition.setup.screen>->{$ARG}
        if $ARG =~ /^underscan\.(\w+)/
} keys %{<composition.setup.screen>};

my $x_total = <x11.screen.width> - $underscan{'left'} - $underscan{'right'};
my $y_total = <x11.screen.height> - $underscan{'top'} - $underscan{'bottom'};

my ( $ratio_x, $ratio_y ) = split( /:/, $ratio_str );

my $new_height = sprintf( "%.02f", ( $width / $ratio_x ) * $ratio_y );

my $old_percent = sprintf( "%.02f", $height * 100 / $y_total );
my $new_percent = sprintf( "%.02f", $new_height * 100 / $y_total );

return {
    'mode' => 'ack',
    'data' => "[$ratio_str] Y = $old_percent% --> $new_percent%"
    }

# ______________________________________________________________________________
#\\7VI724YBG7ZK5IUNX3XBXZX3OY3VY533S4NMBDQJ6IGVTS57S2VX75UZUYDPBRRXZ3ZQZASQVMIPC
# \\ U2R6MFXOKB5QZN5YR2XUGQALUNPIMCETZ6EF6YZGHSZXSDFMQPNY \\// C25519-BASE-32 //
#  \\// AT3X4Q5LRW3ZLTK5YWTSR4RMJBOY7LMDPJPLB6GVCCSO455EGDA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
