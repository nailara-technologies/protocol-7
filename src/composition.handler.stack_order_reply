# >:]

# name = composition.handler.stack_order_reply

my $answer   = shift;
my $reply_id = delete $answer->{'params'};

return <[base.callback.cmd_reply]>->(
    $reply_id,
    {   'mode' => 'nak',
        'data' => "unexpected answer from (missing?) X-11 agent!"
    }
) if defined $reply_id and $answer->{'cmd'} ne 'DATA';
return <[base.callback.cmd_reply]>->(
    $reply_id,
    {   'mode' => 'nak',
        'data' => "no open windows found"
    }
) if defined $reply_id and $answer->{'call_args'}->{'args'} == 0;

$answer->{'data'} =~ s|\n$||;
my @window_stack = split( /\n/, $answer->{'data'} );

my $missing   = 0;
my %wid_check = map { $ARG => 1 } @window_stack;
for my $agent_name ( keys %{<composition.layers>} ) {
    my $wid_str = <composition.window_ids>->{$agent_name};
    if ( not defined $wid_str ) {
        <[base.log]>->( 2, "[layers] no window id defined for '$agent_name'" );
        next;
    }

    my @wids_ok;
    map {
        push( @wids_ok, $ARG ) if defined $ARG and exists $wid_check{$ARG};
        $missing++ if not exists $wid_check{$ARG}
        }
        split /\D+/, $wid_str;
    if ( !@wids_ok ) {
        <composition.window_ids>->{$agent_name} = undef;
    } elsif ($missing) {
        <composition.window_ids>->{$agent_name}
            = join( ',', sort { $a <=> $b } @wids_ok );
    }
}

my @lower_ids;
my %known_ids;
for my $agent_name (
    sort { <composition.layers>->{$b} <=> <composition.layers>->{$a} }
    keys %{<composition.layers>}
) {
    my $window_ids_str = <composition.window_ids>->{$agent_name};
    next if not defined $window_ids_str;
    my @window_ids = sort split( /\D+/, $window_ids_str );
    my $layer_pos  = <composition.layers>->{$agent_name};
    push( @lower_ids, @window_ids );
    map { $known_ids{$ARG} = 1 } @window_ids;
}
my @known_windows;
map { push( @known_windows, $ARG ) if exists $known_ids{$ARG} } @window_stack;

my $ack_msg = 'layers sorted';
if ( join( ',', @known_windows ) eq join( ',', @lower_ids ) ) {
    $ack_msg = 'already sorted';
} else {
    map {
        <[base.protocol-7.command.send.local]>->(
            {   'command'   => "core.X-11.lower_window",
                'call_args' => { 'args'    => $ARG },
                'reply'     => { 'handler' => 'dev.null' }
            }
        )
    } @lower_ids;
}

<[base.callback.cmd_reply]>->(
    $reply_id,
    {   'mode' => 'ack',
        'data' => $ack_msg
    }
) if defined $reply_id;

# ______________________________________________________________________________
#\\P7UA3PLWQE4VXM65GLWMLPKTA76IOAVJM32Z45F6JOJBWJVX53HYJNV5GJLJPBMQIEQW7HIQBT6BO
# \\ X6LUQO76MRGXGCZ6D3TGEYZ6L56HTLVZZOSYID6W45GB4QUSFPFS \\// C25519-BASE-32 //
#  \\// 2NCFO7YLAV3OFFOIKOIWIYZSRD3VFKK4HLT6AC5HHJAKZZR5SBY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
