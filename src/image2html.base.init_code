# >:]

# name = image2html.base.init_code

<[base.perlmod.autoload]>->('File::Copy');
<[base.perlmod.load]>->( 'File::Path', qw/make_path remove_tree/ );
<[base.perlmod.autoload]>->('LWPx::ParanoidAgent');
<[base.perlmod.autoload]>->('Graphics::Magick');

<image2html.converting> //= {};
<image2html.cache_dir>  //= '/var/cache/image2html';
<image2html.fail_html> = <system.root_path> . '/data/html/failed_to_load.html';
my $cache_dir = <image2html.cache_dir>;

my $perms = <image2html.cache_perm> // '0750';
if ( !-d $cache_dir ) {
    <[base.log]>->( 1, "creating cache directory '$cache_dir'.. [$perms]" );
    my ( undef, undef, $uid, $gid ) = getpwnam(<system.privs.user>)
        or die "user '" . <system.privs.user> . "' not in passwd file";
    make_path( $cache_dir,
        { mode => oct($perms), 'uid' => $uid, 'group' => $gid } )
        or die "make_path: $!";
} else {
    my $old_perms = <[base.file_perm]>->($cache_dir);
    if ( $old_perms ne $perms ) {
        <[base.log]>->(
            0, "<!> fixing cache dir permissions [ $old_perms -> $perms ]"
        );
        chmod( oct($perms), $cache_dir ) or warn("chmod($cache_dir): $!");
    }
}

my $image_dir = "$cache_dir/gfx";
if ( !-d $image_dir ) {
    <[base.log]>->( 1, ": creating 'gfx' directory.." );
    make_path($image_dir) or die "make_path($image_dir): $!";
}
my $loading_icon_source = <system.root_path> . '/data/gfx/anim/busy.2K.gif';
my $loading_icon_target = "$image_dir/busy.2K.gif";
if ( !-f $loading_icon_target ) {
    <[base.log]>->( 1, ": copying animated 'loading' image.." );
    copy( $loading_icon_source, $loading_icon_target )
        or warn "copy('$loading_icon_source','$loading_icon_target'): $!";
}

chdir($cache_dir) or die "chdir($cache_dir): $!";

0;
