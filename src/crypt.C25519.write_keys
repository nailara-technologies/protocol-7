# >:]

# name = crypt.C25519.write_keys

my $key_vars = <[crypt.C25519.key_vars]>->(shift);    # <- [key_name] (optional)

my $uid          = $key_vars->{'uid'};
my $gid          = $key_vars->{'gid'};
my $key_usr      = $key_vars->{'usr_name'};
my $usr_hdir     = $key_vars->{'usr_home'};
my $key_name     = $key_vars->{'key_name'};
my $key_basepath = $key_vars->{'key_basepath'};

foreach my $type ( 'priv', 'pub' ) {
    my $file_name = $type eq 'pub' ? "$key_basepath.pub" : $key_basepath;
    next if not -f $file_name;
    $file_name =~ s|^$usr_hdir||;
    <[base.log]>->( 0, "<<!>> key '$file_name' exists..," );
    <[base.log]>->( 0, "  :.  not overwriting .," );
    return 0;
}
foreach my $type ( 'priv', 'pub' ) {
    my $file_name = $type eq 'pub' ? "$key_basepath.pub" : $key_basepath;

    open( my $key_fh, '>>', "$file_name.$$" ) or die "$file_name.$$: $!";
    if ( $type eq 'pub' ) {
        chmod( 0644, "$file_name.$$" ) or die "chmod: $!";
    } else {
        chmod( 0600, "$file_name.$$" ) or die "chmod: $!";
    }
    my $key_str_b32 = encode_b32r( $KEYS{'C25519'}{$key_name}{$type} );
    printf( {$key_fh} "%s\n", $key_str_b32 );
    close($key_fh);
    rename( "$file_name.$$", $file_name ) or die "$file_name: $!";
    chown( $uid, $gid, $file_name ) or warn "$file_name: $!";

    <[base.log]>->( 1, ": $file_name" );
}
return 1;

# ______________________________________________________________________________
#\\B5QO6R5675WHM5FLONZLFERP3AADDCIAU7GYATHQP6PNJ7DFXJLLH2VPAX3MTX66GOFL43OUWMHUI
# \\ 7HRLPAZIJHNY3ORMYEMWFOCGWVAJMSRSHAJFMX36FFWGEKOA265Y \\// C25519-BASE-32 //
#  \\// WIAGRASYHQEC5L5RNIPKHZSBQY44X5F5LMBCZUSRONOPQDYNUCY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
