# >:]

# name  = debug.cmd.exec-sub
# param = <sub_name>
# descr = run subroutine and return output [ developement acceleration only ]

my $support_params = 0; ## <-- keep this disabled for security reasons < ! > ###
( my $sub_name, my @params ) = split( m| +|, $$call{'args'} ); # no quotes supp.

return { 'mode' => 'nak', 'data' => 'expected subroutine name parameter' }
    if !length($sub_name);
return { 'mode' => 'nak', 'data' => 'subroutine parameters are not supported' }
    if @params and not $support_params;

return { 'mode' => 'nak', 'data' => 'no such subroutine' }
    if not exists $code{$sub_name};

my $sub_output = eval { $code{$sub_name}->(@params) };

my $err_msg;
$err_msg = 'errors during subroutine execution' if $@;
$err_msg = 'undefined subroutine output'        if not defined $sub_output;
return { 'mode' => 'nak', 'data' => $err_msg } if defined $err_msg;

$sub_output =~ s|\n$|| if $sub_output =~ m|\n| <= 1;

my $rep_mode = $sub_output =~ m|\n| ? 'data' : 'ack';

return { 'mode' => $rep_mode, 'data' => $sub_output };

# ______________________________________________________________________________
#\\NBWT76RS3F2BDVEFZM3MGUCK72JKGVJFZYYGCANUD4NFBUWHE7NHHQ3HPSKFZGZTE3MP3M2ADAZY6
# \\ WNSYV6DOL6TZVOLP7N4UP5YRP3CKQIHODONGW2VA6SIGALPHAJXA \\// C25519-BASE-32 //
#  \\// 3TJNA4FVANMZ5XJEERTPAIHUWZ5JYKSQOIPFIY26VMVQABMMQAQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
