# >:]

# name  = debug.cmd.exec-sub
# param = <sub_name>
# descr = run subroutine and return output

my $sub_name = $$call{'args'};

return { 'mode' => 'nak', 'data' => 'expected subroutine name parameter' }
    if !length($sub_name);
return { 'mode' => 'nak', 'data' => 'subroutine parameters are not supported' }
    if $sub_name =~ m| |;
return { 'mode' => 'nak', 'data' => 'no such subroutine' }
    if not exists $code{$sub_name};

my $sub_output;
eval { $sub_output = $code{$sub_name}->() };

my $err_msg;
$err_msg = 'errors during subroutine execution' if $@;
$err_msg = 'undefined subroutine output'        if not defined $sub_output;
return { 'mode' => 'nak', 'data' => $err_msg } if defined $err_msg;

$sub_output =~ s|\n$|| if $sub_output =~ m|\n| <= 1;

my $rep_mode
    = $sub_output =~ /\n/
    ? 'data'
    : 'ack';

return {
    'mode' => $rep_mode,
    'data' => $sub_output
};

# ______________________________________________________________________________
#\\IWOQJWYDZUZSA2IT6YH7NIBDOWFFSD232F7Y2Q6NSOLJWI2MIWXPGX3IMDSRQJXEC25DOFE67F2HE
# \\ VAZ3DM5QB3QJJK66UZZSOIP3M4LSKWGIDOAOMZQAUF5O43OJOELN \\// C25519-BASE-32 //
#  \\// HHIKS3ZT7QIMK6JI2DYBBY3IND36D4H4ZLFA4DW3TEMXPAXWGAY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
