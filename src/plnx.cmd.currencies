# >:]

# name  = plnx.cmd.currencies
# param = [pattern]
# descr = return list of traded currencies

my $api_command   = 'getCurrencies';
my $hide_disabled = 1;

my $pattern = $$call{'args'};

<plnx.api.pub>->{'msg'} = 'no data';
my $currency_list = <plnx.api.pub>->api_public('returnCurrencies');

#  'KEY' => {
#             'disabled' => 1,
#             'id' => 116,
#             'minConf' => 10000,
#             'txFee' => '0.01000000',
#             'name' => 'KeyCoin',
#             'frozen' => 0,
#             'depositAddress' => undef,
#             'delisted' => 1
#           },

if ( ref($currency_list) ne 'HASH' ) {
    ( my $reason_str = lc( <plnx.api.pub>->{'msg'} ) ) =~ s/\.$//;
    my $log_msg = "API request failed ['$reason_str']";
    <[base.log]>->( 0, $api_command . ': ' . $log_msg );
    return {
        'mode' => 'nak',
        'data' => $log_msg
    };
}

my @currencies;

foreach my $key_name ( sort( keys( %{$currency_list} ) ) ) {
    my $cur_data = $currency_list->{$key_name};
    next
        if defined $pattern
        and $key_name !~ m{\Q$pattern\E}i
        and $cur_data->{'name'} !~ m{\Q$pattern\E}i;
    push( @currencies, sprintf( "%-8s %s\n", $key_name, $cur_data->{'name'} ) )
        if !$hide_disabled
        or (!$cur_data->{'delisted'}
        and !$cur_data->{'frozen'}
        and !$cur_data->{'disabled'} );
}

return {
    'mode' => 'data',
    'data' => join( '', @currencies )
};

# ______________________________________________________________________________
#\\JO6HFAUZ7CGBYGOGBG5JKVN2F5B23GIFIEJWCGJJ2CDUZHRBGTKWPLCRXUHWRYWBC3SJXLNCUBF5I
# \\ B4HA4ZHVPV3TH6LYAVFO6NENEJAG4PYYANKMZG2QJ6VYURLSXYLS \\// C25519-BASE-32 //
#  \\// RAEH36XQM35WYX6PHUZ4DKHYQWLAJTC4BXGHYCCV55XF2EBKUAQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
