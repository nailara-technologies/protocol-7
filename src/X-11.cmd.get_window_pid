# >:]

# name  = X-11.cmd.get_window_pid
# param = <w_id>
# descr = return process id for specified window id

my $X         = <X-11.obj>;
my $window_id = $$call{'args'};

return { 'mode' => 'nak', 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => 'nak', 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <X-11.WM>;
<[X-11.update_X11_WM]>;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'nak', 'data' => 'no such window' } if not defined $window;

return {
    'mode' => 'ack',
    'data' => unpack(
        "I*",
        [   $X->GetProperty(
                $window_id, $X->atom('_NET_WM_PID'),
                'AnyPropertyType', 0, ~0, 0
            )
        ]->[0]
    )
};

# ______________________________________________________________________________
#\\BXYHVUCHNV5G2L2SMJCNOK3GXHU344AU2J3SK5OPWYMMOGUU7FC2XO7QANHHQ5NI4SCFORRBLP7WC
# \\ 7VG22QI7VESXD2EFYPXSR3PJBNQE32MXGSJI3ICSVK456RC6AGX5 \\// C25519-BASE-32 //
#  \\// TMC2IKOQRADXIGBCCOJAV6GLKA4LEIUHH6VJYXJW3XO43ITKQBY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
