# >:]

# name = browser.proxy_setup

my $use_proxy = shift // <browser.cfg.use_proxy> // 'no';
my $log_level = shift // 1;

<browser.init_proxy> = 0;

if (    defined <browser.cfg.proxy_addr>
    and defined <browser.cfg.proxy_port>
    and defined $use_proxy ) {
    my $proxy_addr = <browser.cfg.proxy_addr>;
    my $proxy_port = <browser.cfg.proxy_port>;
    if ( $use_proxy eq 'yes' ) {
        <browser.init_proxy> = 1;
        <[base.log]>->(
            $log_level, "http proxy is enabled ($proxy_addr:$proxy_port)"
        );
    } elsif ( $use_proxy eq 'auto' ) {
        <[base.log]>->(
            $log_level, "checking http proxy... ($proxy_addr:$proxy_port)"
        );
        my $check_sock = IO::Socket::INET->new(
            PeerAddr => $proxy_addr,
            PeerPort => $proxy_port,
            Proto    => 'tcp',
            Timeout  => 0.2
        );
        if (    defined $check_sock
            and -S $check_sock
            and $check_sock->connected() ) {
            <[base.log]>->( $log_level, ": proxy ok - enabled.." );
            $check_sock->close();
            <browser.init_proxy> = 1;
        } else {
            <[base.log]>->(
                $log_level, ": failed to connect to proxy - disabled"
            );
        }
    } else {
        <[base.log]>->( $log_level, "http proxy is disabled in agent setup.." );
    }
}

if (<browser.init_proxy>) {
    my $proxy_addr = <browser.cfg.proxy_addr>;
    my $proxy_port = <browser.cfg.proxy_port>;
    my $session    = Gtk3::WebKit::get_default_session();
    my $proxy_uri  = HTTP::Soup::URI->new("http://$proxy_addr:$proxy_port");
    $session->set( 'proxy-uri' => $proxy_uri );
}

return <browser.init_proxy>; # no checks performed if use_proxy set to 'yes' ...
