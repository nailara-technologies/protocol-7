# >:]

# name  = fs.cmd.mount
# param = [dev] <mountpoint>
# descr = mount the specified device / filesystem

my ( $mount_point, $device ) = reverse split( / +/, $$call{'args'}, 2 );
return { 'mode' => 'nak', 'data' => 'expected mountpoint parameter' }
    if not defined $mount_point;
$mount_point =~ s|/+$|| if length($mount_point) > 1;

my $status = <[fs.is_mounted]>->($mount_point);

return {
    'mode' => 'nak',
    'data' => 'specified mountpoint does not exist'
    }
    if not defined $device and $status == -1 or !-d $mount_point;

return {
    'mode' => 'nak',
    'data' => 'specified device does not exist'
    }
    if defined $device and !-e $device;

return {
    'mode' => 'nak',
    'data' => 'already mounted'
    }
    if $status == 1;

if ( not defined $device ) {
    <[base.log]>->( 1, "mounting '$mount_point'.." );
    if ( system( '/bin/mount', $mount_point ) != 0
        or !<[fs.is_mounted]>->($mount_point) ) {
        <[base.log]>->( 0, ": mounting of '$mount_point' failed!" );
        return { 'mode' => 'nak', 'data' => "failed to mount '$mount_point'" };
    }
} else {
    <[base.log]>->( 1, "mounting $device to $mount_point .." );
    if ( system( '/bin/mount', $device, $mount_point ) != 0
        or !<[fs.is_mounted]>->($mount_point) ) {
        <[base.log]>->( 0, ": failed to mount $device to $mount_point" );
        return {
            'mode' => 'nak',
            'data' => "failed to mount $device to $mount_point"
        };
    }
}

return { 'mode' => 'ack', 'data' => 'mounted successfully' };
