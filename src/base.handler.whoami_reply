# >:]

# name = base.handler.whoami_reply

my $reply = shift;

<base.callback_hooks.async_online> //= [];
delete <base.in_progess.get_session_id>;

if ( $reply->{'cmd'} ne 'ACK' ) {
    my $reason = $reply->{'call_args'}->{'args'};
    <[base.log]>->( 0, "<!> unexpected reply to whoami command <!> [$reason]" );
    return undef;
}

my $reply_str = $reply->{'call_args'}->{'args'};

if ( $reply_str =~ /^(\w[\w\-\d]*) (\d+)$/ ) {
    my ( $agent_name, $core_sid ) = ( $1, $2 );
    if ( $agent_name ne <system.agent.name> ) {
        <[base.log]>->( 0, "whoami reply does not match internal agent name!" );
    }
    my $usr_str = $reply->{'params'}->{'route_user'};
    my ($local_sid) = keys( %{ $data{'user'}{$usr_str}{'session'} } );
    $data{'session'}{$local_sid}{'core_sid'} = $core_sid;
    <[base.log]>->( 1, "core session id received .. [$core_sid]" );
    <system.agent.initialized> = 1;
    <[base.call_online_hooks]>;
} else {
    <[base.log]>->(
        0, "protocol error (unexpected reply to whoami command!) [$reply_str]"
    );
    return undef;
}
