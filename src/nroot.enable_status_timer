# >:]

# name = nroot.enable_status_timer

my ( $instance_id, $after, $interval ) = @_;
die "no instance id specified" if not defined $instance_id;

my $globals      = <nroot.start_setup.globals> || {};
my $instance     = <nroot.agent.instance>->{$instance_id};
my $agent_id     = $instance->{'agent_id'};
my $agent_name   = <nroot.agent.setup>->{$agent_id}->{'name'};
my $agent_config = <nroot.start_setup.agents.config>->{$agent_name};

my $status_timer_delay
    = $after // $agent_config->{'heartbeat'}->{'after'}
    // $globals->{'heartbeat'}->{'after'}
    // 2;    # <- (initial) heartbeat delay default

my $status_timer_interval
    = $interval // $agent_config->{'heartbeat'}->{'interval'}
    // $globals->{'heartbeat'}->{'interval'}
    // 5;    # <- heartbeat interval default

<[base.log]>->(
    2,
    ": instance $instance_id new status timer setup "
        . "[${status_timer_delay}s,int=$status_timer_interval]"
);

delete $agent_config->{'restart'}   if !keys %{ $agent_config->{'restart'} };
delete $agent_config->{'heartbeat'} if !keys %{ $agent_config->{'heartbeat'} };
delete $globals->{'restart'}        if !keys %{ $globals->{'restart'} };
delete $globals->{'heartbeat'}      if !keys %{ $globals->{'heartbeat'} };

$instance->{'heartbeat'} //= {};
$instance->{'heartbeat'}->{'retry_timeout'}
    //= 2;    # setting short heartbeat timeout

# set up new status timer..
$instance->{'status_timer'} = <[event.add_timer]>->(
    {   'after'    => $status_timer_delay,
        'interval' => $status_timer_interval + sprintf( "%.3f", rand(2) ),
        'handler'  => 'nroot.handler.status_timer',
        'data'     => $instance_id
    }
);

# ______________________________________________________________________________
#\\TGZGEJG46PTJBAAKQFUAIZ46VXK3HSDTZXILZ3C3LSQBPWS5A4MYQHGHBEEMV35METTPUPXBBB6SQ
# \\ 5XXU2NCNMAMRAJGF2IWBMKTK3573SEMHNILKUUEJUXP2L757DJSL \\// C25519-BASE-32 //
#  \\// MXD2QJMTWYKAW7JLN4JTBVJJREFELXR2GWEG525BXL72IUZGADI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
