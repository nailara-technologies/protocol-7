# >:]

# name  = base.handler.connect

my $id     = $_[0]->w->data;
my $fd_srv = $data{'session'}{$id}{'handle'};
my $type   = $data{'handle'}{$fd_srv}{'link'};
my $proto  = $data{'session'}{$id}{'protocol'};
my $state  = $data{'session'}{$id}{'state'};
my $mode   = $data{'handle'}{$fd_srv}{'mode'};

my $handler = $data{'io'}{'type'}{$type}{'handler'}{$mode}{'connect'};
my $banner  = $data{'protocol'}{$proto}{'connect'}{'banner'} // '';

if ( not defined $data{'handle'}{$fd_srv}{'protocol'} ) {
    <[base.log]>->(
        1, 'base.handler.connect: no protocol defined for submitted handle'
    );
    <[base.session.check_remaining]>;
    return undef;
} else {
    ( my $handler_str = $handler ) =~ s{^io\.|\.connect$}{}g;
    <[base.log]>->( 1, "[$id] calling connect handler [$handler_str]" );
    my $fd_client = $code{$handler}->( $_[0] );
    if ( defined $fd_client and $fd_client->connected() ) {
        my $id = <[base.session.init]>->( $fd_client, $proto, $mode );

        # send server banner
        if ( length($banner) and $mode eq 'input' ) {
            <[net.out]>->( $fd_client, $banner );
        }
        <[base.log]>->( 1, "[$id] establishing $proto protocol link" );
    } else {
        <[base.log]>->( 1, "[$id] connection [ already ] closed.," );
        return undef;
    }
}

# ______________________________________________________________________________
#\\RKDBW6NBAGGZPB3MIS5RBP4O5AVCURYOQI5LZ5GZIGQVVCULPNS2GZZTISNQ7V3F5NWIN7Z24SUH2
# \\ Y4HNHUGJ657P7R4UQGENAYALEYPPBGB2Q6Q6ZZXWAX764V7WRGWW \\// C25519-BASE-32 //
#  \\// DX5PLPFE3ZFDWMVBDNF4J5YIRQJ4LIM3Q7VUM4KKEJ7XNJWGGAI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
