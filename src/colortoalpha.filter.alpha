# >:]

# name = colortoalpha.filter.alpha

my $RGBA  = shift;    #[4]
my $color = shift;    #[3]

die "expected RGBA array reference"
    if not defined $RGBA
    or ref($RGBA) ne 'ARRAY';
die "expected 'color' array reference"
    if not defined $color
    or ref($color) ne 'ARRAY';

my @alpha;

$$RGBA[3] = ( 255 - $$RGBA[3] );
$alpha[3] = $$RGBA[3];

if ( $$RGBA[0] > $$color[0] ) {
    $alpha[0]
        = ( $$RGBA[0] - $$color[0] ) / ( 255 - $$color[0] );
} elsif ( $$RGBA[0] < $$color[0] ) {
    $alpha[0]
        = ( $$color[0] - $$RGBA[0] ) / ( $$color[0] );
} else {
    $alpha[0] = 0;
}

if ( $$RGBA[1] > $$color[1] ) {
    $alpha[1]
        = ( $$RGBA[1] - $$color[1] ) / ( 255 - $$color[1] );
} elsif ( $$RGBA[1] < $$color[1] ) {
    $alpha[1]
        = ( $$color[1] - $$RGBA[1] ) / ( $$color[1] );
} else {
    $alpha[1] = 0;
}

if ( $$RGBA[2] > $$color[2] ) {
    $alpha[2]
        = ( $$RGBA[2] - $$color[2] ) / ( 255 - $$color[2] );
} elsif ( $$RGBA[2] < $$color[2] ) {
    $alpha[2]
        = ( $$color[2] - $$RGBA[2] ) / ( $$color[2] );
} else {
    $alpha[2] = 0;
}

if ( $alpha[0] > $alpha[1] ) {
    if ( $alpha[0] > $alpha[2] ) {
        $$RGBA[3] = $alpha[0];
    } else {
        $$RGBA[3] = $alpha[2];
    }
} else {
    if ( $alpha[1] > $alpha[2] ) {
        $$RGBA[3] = $alpha[1];
    } else {
        $$RGBA[3] = $alpha[2];
    }
}

$$RGBA[3] *= 255;

if ( $$RGBA[3] == 1 ) {
    $$RGBA[0]
        = 255 * ( $$RGBA[0] - $$color[0] ) / $$RGBA[3] + $$color[0];
    $$RGBA[1]
        = 255 * ( $$RGBA[1] - $$color[1] ) / $$RGBA[3] + $$color[1];
    $$RGBA[2]
        = 255 * ( $$RGBA[2] - $$color[2] ) / $$RGBA[3] + $$color[2];

    $$RGBA[3] *= $alpha[3] / 255;
}

$$RGBA[3] = 255 - $$RGBA[3];

# ______________________________________________________________________________
#\\Y2D7OX6HM53OZ6IWWQZFJGXJVF6GGFU57JCDYRH732EHWBIUXBY7COX5UR7MSWI3CUSRRVXBD33N4
# \\ MCJXCDXK6SP2R3J5IVAF444ASTPT4I3R3QROWGBIDFF6QK4YDD63 \\// C25519-BASE-32 //
#  \\// RERWCDBUYEGY6CFZEKPHHGHR5XBP2B6IEAMJNQQEWJD2URXJKDY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
