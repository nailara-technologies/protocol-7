# >:]

# name  = nroot.agent.cmd.stop
# param = <agent_name(s)|instance(s)>
# descr = (manually) shutdown agent instance(s)

my $params = $$call{'args'} // '';
return { 'mode' => 'nak', 'data' => 'expected agent name or instance id' }
    if !length($params);

my $stop_mode
    = ( defined $$call{'mode'} and $$call{'mode'} eq 'implicit' )
    ? 'implicit'
    : 'manual';

my @instance_ids;
my $failed_name;
my $not_found   = 0;
my $setup_found = 0;
foreach my $param_str ( split / +/, $params ) {
    if ( $param_str =~ /^\d+$/ ) {    # instance id
        return {
            'mode' => 'nak',
            'data' => "unknown agent instance '$param_str' (see 'list agents')"
            }
            if not exists <nroot.agent.instance>->{$param_str};
        push( @instance_ids, $param_str );
    } else {                          # agent name ( LLL: validate syntax! )
        my $agent_name = $param_str;
        my $agent_subname;
        $agent_subname = $1 if $agent_name =~ s|\[([^\]]+)\]$||;
        my $agent_id = <[agent.get_id]>->($agent_name);
        if ( defined $agent_id ) { $setup_found++ }
        else { $not_found++; $failed_name //= $agent_name; next }
        foreach my $iid ( keys %{<nroot.agent.instance>} ) {
            next
                if defined $agent_subname
                and not exists <nroot.agent.instance>->{$iid}->{'subname'}
                or defined $agent_subname
                and exists <nroot.agent.instance>->{$iid}->{'subname'}
                and <nroot.agent.instance>->{$iid}->{'subname'} ne
                $agent_subname;

            push( @instance_ids, $iid )
                if <nroot.agent.instance>->{$iid}->{'agent_id'} == $agent_id;
        }
    }
}

map { <[agent.instance.stop]>->($_) } @instance_ids;

my $count   = scalar @instance_ids;
my $s       = $count > 1 ? 's' : '';
my $msg_str = "shutting down $count agent instance$s";

my %agent_names;
map {
    my $agent_name
        = <nroot.agent.setup>
        ->{ <nroot.agent.instance>->{$_}->{'agent_id'} }->{'name'};
    $agent_names{$agent_name}++;
} keys %{<nroot.agent.instance>};
my %shutdown_names;
map {
    my $agent_name
        = <nroot.agent.setup>
        ->{ <nroot.agent.instance>->{$_}->{'agent_id'} }->{'name'};
    <nroot.agent.instance>->{$_}->{'stopping'} = 1;
    $shutdown_names{$agent_name}++;
} @instance_ids;
foreach my $name ( keys %shutdown_names ) {
    if ( exists <nroot.agent.auto_cleanup>->{$name} ) {
        delete <nroot.agent.auto_cleanup>->{$name};
        delete <nroot.agent.auto_cleanup> if !keys %{<nroot.agent.auto_cleanup>};
    }
    my $instances_remaining = $agent_names{$name} - $shutdown_names{$name};
    if ( !$instances_remaining ) {

        my %agent_list;
        map { $agent_list{$_} = 1 } split / +/,
            <nroot.spawn_config.globals.agents.enabled>;
        delete $agent_list{$name};
        <nroot.spawn_config.globals.agents.enabled>
            = join( ' ', keys %agent_list );

        <nroot.agent.manually_stopped>->{$name} = <[base.time]>->(4)
            if $stop_mode eq 'manual';

        <[base.log]>->(
            2, "disabled agent '$name' (no more instances present)"
        );
        <[base.log]>->(
            1, ": <!> added '$name' to 'manually stopped' list <!>"
        ) if $stop_mode eq 'manual';

        next if not exists <nroot.agent.dependency>;
        foreach my $dep_name ( keys %{<nroot.agent.dependency>} ) {
            delete <nroot.agent.dependency>->{$dep_name}->{$name};
            if ( !keys %{ <nroot.agent.dependency>->{$dep_name} } ) {
                delete <nroot.agent.dependency>->{$dep_name};
                if ( exists <nroot.agent.auto_cleanup>->{$dep_name} ) {
                    <[base.log]>->(
                        1, "dependency based auto-start cleanup [$dep_name]"
                    );
                    <[agent.cmd.stop]>
                        ->( { 'args' => $dep_name, 'mode' => 'implicit' } );
                }
            }
        }
        delete <nroot.agent.dependency>
            if !keys( %{<nroot.agent.dependency>} );
    }
}

map { <[agent.change_status]>->( $_, 'shutdown' ) } @instance_ids;

return {
    'mode' => 'nak',
    'data' => "no agent '$failed_name' found in setup! (see 'list agents')"
    }
    if !$setup_found and $not_found;

if ($count) {
    return { 'mode' => 'ack', 'data' => $msg_str };
} else {
    return {
        'mode' => 'nak',
        'data' => 'there is no agent matching agent running'
    };
}
