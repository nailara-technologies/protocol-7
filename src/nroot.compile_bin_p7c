# >:]

# name = nroot.compile_bin_p7c

my $gcc_bin        = <nroot.gcc_bin>;
my $gcc_timeout    = <nroot.gcc_timeout> || 7;
my $p7c_src_path   = join( '/', <system.root_path>, <system.p7c_src_path> );
my $p7c_bin_path   = <nroot.cfg.p7c_bin_path>;
my $strip_binpth   = <[file.which]>->(qw| strip |);
my $compile_static = <[base.cfg_boolean]>->( <nroot.cfg.p7c_static> // 1 );
die "<< 'gcc' binary not found >>"          if !-x $gcc_bin;
die "source file '$p7c_src_path' not found" if !-f $p7c_src_path;

( my $src_name = $p7c_src_path ) =~ s|^.+./||;

<[base.log]>->( 0, ":. compiling '$src_name' source onto '$p7c_bin_path'..," );

## reading source., ##
<[file.slurp]>->( $p7c_src_path, \my $p7c_src_str )
    or die "unable to compile '$src_name' << ! >>";

my $p7c_checksum = delete <nroot.checksum.p7c_source>
    // <[digest.bmw.filesum]>->( 224, $p7c_src_path );
$p7c_src_str =~ s|\[BMW_FILE_DIGEST\]|$p7c_checksum|g;

my $tmp_bin    = "$p7c_bin_path.$p7c_checksum";
my @gcc_params = $compile_static ? ('-static') : ();
push( @gcc_params, qw| -O3 -x c -o |, $tmp_bin, '-' );

unlink($tmp_bin) or die "< unlink > $tmp_bin [ $OS_ERROR ]" if -f $tmp_bin;

## compiling.., ###
my $gcc_in_fh  = IO::Handle->new();
my $gcc_err_fh = IO::Handle->new();
my $gcc_pid    = open3( $gcc_in_fh, undef, $gcc_err_fh, $gcc_bin, @gcc_params )
    or die "<< ! >> compilation failed [ $OS_ERROR ] << ! >>\n";
print {$gcc_in_fh} $p7c_src_str if $gcc_in_fh->opened;
close($gcc_in_fh)               if $gcc_in_fh->opened;

## timeout., ###
if ( defined $gcc_pid ) {
    local $SIG{'ALRM'} = sub {
        warn "'p7c' compilation timed out after $gcc_timeout seconds.";
        kill( 9, $gcc_pid );
    };
    alarm($gcc_timeout);
    waitpid( $gcc_pid, 0 );
    alarm(0);
}

qx| $strip_binpth -R .comment $tmp_bin | if length($strip_binpth); # optional ##

## verify.., ##
if ( -f $tmp_bin ) {
    close($gcc_err_fh) if $gcc_err_fh->opened;
    rename( $tmp_bin, $p7c_bin_path )
        or die "< rename > $tmp_bin --> $p7c_bin_path [$OS_ERROR]";
    chmod( 0755, $p7c_bin_path ) or die "< chmod > $p7c_bin_path [ $OS_ERROR ]";
    <[base.log]>->( 1, ":: :. successfully installed to '$p7c_bin_path'. =)" )
        and return 1
        if <[nroot.bin_p7c_is_current]>->(2); # <-- silent checksum verification
} else {
    ( my $err_str = join( '', $gcc_err_fh->getlines ) )
        =~ s{gcc: (fatal )?error: |\n+}{ }g;
    $err_str =~ s|  +| \\ |g;
    $err_str =~ s{^ \\|\\? +$}{}g;
    $err_str = join( ' ', '', @gcc_params ) if !length($err_str);
    $err_str =~ s{^ +| +$}{}g;
    <[base.log]>->( 0, ":: : no success. << $gcc_bin $err_str >>" );
}
return 0;

# ______________________________________________________________________________
#\\EJEK2DYW56TZUHUDGPKD6BCUBJCYM3ZRYOMVBLY75UYCRE5V2L75GKCQTJ4ENHA2AAZON57WMFJJO
# \\ ZALDHBJH7NOAGUIYZLVVHESSEAT2U42L5D4URXPGC6Y2N6OZ6TMT \\// C25519-BASE-32 //
#  \\// XX5YJGG7D4U27T3EM6MPA2AAGCBNA5YLGY23ITMFKJYJK2LMICQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
