# >:]

# name = base.file.get-non-dirs

my ( $path, $result_aref, $resolved ) = @_;
my $old_path;
my $recursive         = 0;
my $recursion_entered = 0;
$resolved //= 0;    # <-- resolve symlinks
$resolved = 1 if $resolved eq 'resolved';

if ( not defined $result_aref ) {
    $result_aref = [];
} elsif ( $result_aref eq 'recursive' ) {
    $result_aref = [];
    $recursive   = 1;
} else {
    $recursion_entered = 1;
}

if ( -d $path ) {
    my $dir_fh;
    $path =~ s/\/+$//;
    if ( !opendir( $dir_fh, $path ) ) {
        <[base.log]>->( 0, "can not open directory '$path' [$!]" );
        return undef;
    }
    foreach my $entry ( sort( readdir($dir_fh) ) ) {
        next if $entry =~ m|^\.\,?$|;
        my $file_path = "$path/$entry";
        my $result_path
            = $resolved ? abs_path($file_path) : canonpath($file_path);
        push( @{$result_aref}, $result_path ) if !-d $file_path;
        <[file.non_dirs_rec]>->( $result_path, $result_aref, $resolved )
            if -d $file_path and $recursive;
    }
}

return $result_aref if !$recursion_entered;

# ______________________________________________________________________________
#\\SCI757RBXUWVHUNQALVN4OFH7W2CQTDC7KB2YHOC6G5555UBUWOYHKJ5INPTEXP6INYEECWAJ7NAW
# \\ Z6YIHC52AM24KY4O3T72KOYV4M7HJD3QBUGECYB7C2RQCICFGO7I \\// C25519-BASE-32 //
#  \\// N52YE7Y5MYPQPIHIOM2EGFJ2INYLT77QONNMYHPL4W5KXCMPOCA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
