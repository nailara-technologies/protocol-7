# >:]

# name  = X-11.get_window_title

my $window_id = shift;

return undef if not defined $window_id or $window_id !~ m|^\d{1,13}$|;

my $retries = 24;
my $window_title;
my $wmstate;
my $err;
while ( not defined $wmstate and not defined $err and !$retries-- ) {
    eval {
        ($wmstate)
            = <X-11.obj>->GetProperty( $window_id, <X-11.obj>->atom('WM_NAME'),
            'AnyPropertyType', 0, ~0, 0 );
        last if $wmstate;    ## <-- top-level window ##
        my ( undef, $parent ) = <X-11.obj>->QueryTree($window_id);
        $window_id = $parent;
    };
    $err = $@ if $@;
}

eval {
    ($window_title) = <X-11.obj>->GetProperty(
        $window_id,
        <X-11.obj>->atom('_NET_WM_NAME'),
        <X-11.obj>->atom('UTF8_STRING'),
        0, ~0, 0
    );
    $err = $@ if $@;
} if not defined $err;

eval {
    if ( not defined $window_title ) {
        ($window_title) = <X-11.obj>->GetProperty(
            $window_id,
            <X-11.obj>->atom('WM_NAME'),
            <X-11.obj>->atom('STRING'),
            0, ~0, 0
        );
    }
} if not defined $err;
$err = $@ if $@;

if ( defined $err and $err =~ m|^Protocol error: bad 3 \(Window\);| ) {
    return undef;
} elsif ( defined $err ) {
    warn "<get_window_title> $err";
}

$window_title = <[base.utf8.sanitize]>->( $window_title // '' );
$window_title =~ s{^'|'$}{}g;

return length($window_title) ? $window_title : "''"; ## <-- quotes when empty..,

# ______________________________________________________________________________
#\\K6HHERSOL5XSCT2SEG656J7QNXWLSMXS6SRNRAHJG6CRLA7TJTP2MVDMBUG5ATNROPLS2QXBLJ6FW
# \\ NJ3YLGPT7GRNKQD3ZLANRLOL42PGVCN7AUQLZJCOGHUKHUZGINWP \\// C25519-BASE-32 //
#  \\// H6VGTKAVQU24FEXXZOYTKRQTZWCDLZKBYWJJW6R3MJOLDD3XYBQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
