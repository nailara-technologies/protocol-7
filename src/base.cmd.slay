# >:]

# name    = base.cmd.slay
# descr   = close all sessions of specified user
# param   = <user|sid> [message]

my $re = <regex.base>;

if ( $$call{'args'} =~ /^($re->{usr}|\d+)( +(.+))?$/ ) {
    my $param        = $1;
    my $slay_message = $3 || 'session terminated!';
    my $killed       = 0;
    my $killed_own   = 0;

    if ( $param =~ /\s/ ) {
        ( $param, $slay_message ) = split( /\s/, $param, 2 );
    }

    if (exists $data{'user'}{$param}{'session'}
        or ( exists $data{'session'}{$param}
            and $data{'session'}{$param}{'mode'} ne 'server' )
    ) {
        my $msg_string = $slay_message;
        my $uname
            = $param =~ /^\d+$/ ? $data{'session'}{$param}{'user'} : $param;
        <[base.log]>->( 2, "slaying of user '$uname' requested!" );
        foreach my $sid ( keys %{ $data{'session'} } ) {
            if (   $data{'session'}{$sid}{'user'} eq $param
                or $param =~ /^\d+$/ and $param eq $sid ) {
                if ( $call->{'session_id'} eq $sid ) {
                    $killed_own = 1;
                    $msg_string = "just killed your own session!"; # TERM reply!
                } else {
                    <[base.session.shutdown]>->( $sid, $msg_string );
                }
                <[base.log]>->( 0, "slaying session $sid ($uname)" );
                $killed++;
            }
        }
        my $s = $killed > 1 ? 's' : '';
        my $reply_string = "terminated $killed session$s";
        <[base.log]>->( 0, $reply_string ) if $killed;
        my $yours_str = 'yours included';
        $yours_str = 'yours' if $killed == 1;
        $reply_string .= " ($yours_str)" if $killed_own;
        $reply_string = $msg_string if $killed_own and $killed == 1;
        return {
            'mode' => $killed_own ? 'term' : 'ack',
            'data' => $reply_string
        };
    } else {
        my $u_str = $param =~ /^\d+$/ ? 'session' : 'user';
        my $fail_msg = "found no such $u_str ($param)";
        $fail_msg = "will not destroy server mode sessions! >;["
            if exists $data{'session'}{$param}
            and $data{'session'}{$param}{'mode'} eq 'server';
        return { 'mode' => 'nack', 'data' => $fail_msg };
    }
} else {
    $$reply{'data'} = 'not a valid username or session id syntax!';
}
