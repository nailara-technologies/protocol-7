# >:]

# name = web-browser.calc_zoom_level

my ($local_sid) = keys( %{<user.cube.session>} );
<web-browser.zoom_level> //= 1;

if ( not defined <web-browser.auto_zoom> or !<web-browser.auto_zoom> ) {
    <[base.log]>->(
        1,
        sprintf( "auto zoom is disabled.. using default value [%.2f]",
            <web-browser.zoom_level> )
    );
    return;
} else {
    <[base.log]>->( 1, "auto zoom is enabled.." );
}

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[net.out]>->( $cube_fh, "($cmd_id)X-11.get_screen_size\n" );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string  = <$cube_fh>;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(ACK|NAK) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)ACK (\d+) (\d+)\n$} ) {
    <x11.screen_width>  = $1;
    <x11.screen_height> = $2;
    my $base_width = 1920;
    my $calc_width
        = <x11.screen_width> > <x11.screen_height>
        ? <x11.screen_width>
        : <x11.screen_height>;
    <web-browser.zoom_level> = sprintf( "%.3f",
        ( <web-browser.zoom_level> / $base_width ) * $calc_width );
    my $m_str = '';
    if ( defined <web-browser.min_zoom> ) {
        <web-browser.zoom_level> = <web-browser.min_zoom>
            if <web-browser.zoom_level> < <web-browser.min_zoom>;
        $m_str = ' [ configured minimum ]'
            if <web-browser.zoom_level> == <web-browser.min_zoom>;
    }
    <[base.log]>->(
        1, ": recalulated zoom level = " . <web-browser.zoom_level> . $m_str
    );
    return <web-browser.zoom_level>;
} else {
    <[base.log]>->( 0, "not expected X-11 reply ['$reply_string']" );
    return undef;
}

# ______________________________________________________________________________
#\\25W5FH5G7ARDN4RKQ7PD43FDRF5ICXL3F3RWC3PJZJ43RQLW43TU4EF3IFYG5MO43R4PBGW327ZM4
# \\ MVO3L3DTV2R22GTIWVQTLUYGLIBRY3QFRHFCHFW7PDJ6FLKVQVTL \\// C25519-BASE-32 //
#  \\// WXQF4X4SY4LUJP73KPMTIKNFA7FBBHIZRFZB65IPEDJJS7YMIAY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
