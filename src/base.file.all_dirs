# >:]

# name = base.file.all_dirs

my ( $path, $result_aref ) = @_;
die "expected'path' parameter!" if not defined $path;
my $old_path;
my $recursive         = 0;
my $recursion_entered = 0;
if ( not defined $result_aref ) {
    $result_aref = [];
} elsif ( $result_aref eq 'recursive' ) {
    $result_aref = [];
    $recursive   = 1;
} else {
    $recursion_entered = 1;
}

if ( -d $path ) {
    my $dir_fh;
    $path =~ s/\/+$//;
    if ( !opendir( $dir_fh, $path ) ) {
        <[base.log]>->( 0, "can not open directory '$path' [$OS_ERROR]" );
        return undef;
    }
    foreach my $entry ( sort( readdir($dir_fh) ) ) {
        next if $entry =~ /^\.{1,2}$/;
        push( @{$result_aref}, abs_path("$path/$entry") ) if -d "$path/$entry";
        <[file.all_dirs]>->( abs_path("$path/$entry"), $result_aref )
            if -d "$path/$entry" and $recursive;
    }
}

return $result_aref if !$recursion_entered;

# ______________________________________________________________________________
#\\3X5TERM57PI7LQ75HGZVCDPTJKRG2H36UGVFDNQYMGYY6HSBHAM6OKKB7GPH4TKTSDC665GZO6MU2
# \\ HTPE4GNT5X2TKTM4TTN72NTUYI3QFOHIVWN67KXNLGI3JLAUAJLJ \\// C25519-BASE-32 //
#  \\// 3T3MDVCGFYZXPIJWZVGNGJJOVGBHH32RY7TXKKSMJU5QABUZ2CA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
