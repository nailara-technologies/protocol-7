# >:]

# name = weather.parent.cache.write_data

my ( $type, $station_id, $weather_data ) = @_;
my $cache_dir = <weather.cache_dir> . '/data';

die "expected valid type parameter [current|hours|days]"
    if not defined $type or $type !~ /^(current|hours|days)$/;
die "expected (valid) station_id parameter"
    if not defined $station_id
    or !length($station_id)
    or $station_id !~ /^[\w\d]+$/;
die "expected weather data string"
    if not defined $weather_data or !length($weather_data);
die "cache directory '$cache_dir' does not exist" if !-d $cache_dir;

my $type_str = $type eq 'current' ? $type : "next-$type";
<[base.log]>->(
    2, "<$station_id> writing '$type_str' weather data to disk cache.."
);

my $data_file_path = "$cache_dir/$station_id.$type";

<[file.put]>->( $data_file_path, time . "\n$weather_data\n" );

# ______________________________________________________________________________
#\\4Q4OMF5U47CUMD7DFGP3IBJSBTSQOLC5RJLH7ROZJCAB5IL7CNUTSSZCPWMAOGPO7EDNJEQEVCPUE
# \\ QFV4NNQGIFI4HG5HDEAVYUCECOKUMAYAGKVH6DPYYMMH2O4EQQ64 \\// C25519-BASE-32 //
#  \\// 4ATS2TCLG3PJACTGUR6S5PP4DWRLFIUAGKDPWCU4QBQH2VKUSCY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
