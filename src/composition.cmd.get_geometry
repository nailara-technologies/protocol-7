# >:]

# name  = composition.cmd.get_geometry
# param = [agent_name]
# descr = window geometry for named or current agent

return { 'mode' => 'nak', 'data' => 'no agent name received' }
    if not defined $$call{'args'}
    or $$call{'args'} !~ m|^(\S+)( +(\S+))?$|;

my ( $source_agent, $agent_name ) = ( $1, $3 );
$source_agent =~ s|^.+\.||g;
$agent_name = $source_agent if not defined $agent_name;

if ( $agent_name =~ m|^\[([^\]]+)\]$| ) {    #  <--  only subname given
    my $subname = $1;
    my %agent_names;
    map { $agent_names{$_} = 1 if $_ =~ m|\[$subname\]$| }
        keys %{<composition.coordinates>};
    my $err_msg;
    if ( !keys(%agent_names) ) {
        $err_msg = "no agent matches subname '$subname'";
    } elsif ( keys(%agent_names) > 1 ) {
        $err_msg = 'multiple agents are matching, agent name required';
    }
    return { 'mode' => 'nak', 'data' => $err_msg } if defined $err_msg;
    ($agent_name) = keys(%agent_names);
}

if ( not exists <composition.coordinates>->{$agent_name} ) {
    my $last_match;
    my $match   = 0;
    my $msg_str = "no geometry defined for agent '$agent_name'";
    if ( $agent_name !~ m|[\[\]]+| ) {
        map {
            if ( $_ =~ m|^([^\[]+)\[| and $1 eq $agent_name ) {
                $last_match = $_;
                $match++;
            }
        } keys %{<composition.coordinates>};
    }
    $msg_str
        = "multiple '$agent_name' instances defined, agent subname required."
        if $match > 1;
    return {
        'mode' => 'nak',
        'data' => $msg_str
        }
        if $match != 1;
    $agent_name = $last_match;
}

my $coordinates_data = <composition.coordinates>->{$agent_name};

my @coordinates;
my @borders = ( 'left', 'top', 'right', 'bottom' );
foreach my $border_name (@borders) {
    return {
        'mode' => 'nak',
        'data' => "coordinates for $border_name border are missing"
        }
        if not exists $coordinates_data->{$border_name};
    push( @coordinates, $coordinates_data->{$border_name} );
}

return {
    'mode' => 'ack',
    'data' => <[base.X-11..coordinates_to_geometry]>->(@coordinates)
    }

# ______________________________________________________________________________
#\\NL3TD7XHAZK4BFM4UXZN4QQIREHWMFNQLLBZWHXYPH5PPSBDVTNE44RJ4X7KYTPYKZZBN534JFY26
# \\ RP6L6Q4F7ZKDZ32COLIALEHW7AF2GH2O5U6BY6UFDKDBECBIH5JL \\// C25519-BASE-32 //
#  \\// RXKTNDQ7A7PNQO3ZVKW2T7QDAHRA2ZOSRKLU4N3P4V4INW6V2BA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
