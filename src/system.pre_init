# >:]

# name = system.pre_init

my $paths_and_modes = {
    '/var/run/.7'           => 0775,
    '/etc/protocol-7'       => 0750,
    '/var/run/.7/UNIX'      => 0775,
    '/var/run/protocol-7'   => 0750,
    '/var/cache/protocol-7' => 0750
};

my $uname   = <system.privs.user>;    ## <-- nailara \ protocol-7 user ###
my $sub_dir = 'agents/' . <system.agent.name>;    ## <-- disabled \ unused
my ( undef, undef, $uid, $gid ) = getpwnam($uname);

<[base.log]>->( 1, 'checking configuration paths.,' );

my $changes_made = 0;

foreach my $chk_path (
    sort { length $b <=> length $a }
    reverse sort keys %{$paths_and_modes}
) {

    # $chk_path .= "/$sub_dir";## disabled \ unused ., ##

    my $dir_mode = $paths_and_modes->{$chk_path};

    my $log_level = 1;
    if ( not -d $chk_path ) {
        <[base.log]>->( $log_level, ": creating., : '$chk_path'" );
        <[file.make_path]>->( $chk_path, $dir_mode )
            or <[base.log]>->( 0, ": :. \l$OS_ERROR [$chk_path]" );
        $log_level++;
    } else {
        $log_level = 0;
    }

    next if not -d $chk_path;

    ## checking \ restoring owner and permissions ##

    <[base.log]>->( 2, ": owner : '$chk_path'" );
    my $dir_stat = File::stat::stat($chk_path);

    if ( $dir_stat->uid != $uid or $dir_stat->gid != $gid ) {
        <[base.log]>->( $log_level, ": $chk_path : change owner ['$uname']" );
        my $was = 'was';
        chown( $uid, $gid, $chk_path )
            or <[base.log]>->( 0, ": :. \l$OS_ERROR [$chk_path]" )
            and $was = 'still is';
        <[base.log]>->(
            $log_level,     sprintf ": :. $was  UID %d : GID %d ..,",
            $dir_stat->uid, $dir_stat->gid
        );
        $changes_made++;
    }

    my $cur_mode = sprintf "%04o", $dir_stat->mode & 07777;
    if ( $cur_mode != sprintf "%04o", $dir_mode ) {
        <[base.log]>->(
            $log_level,
            sprintf( ": %s : change  mode [ %04o ]", $chk_path, $dir_mode )
        );
        my $was = 'was';
        chmod( $dir_mode, $chk_path )
            or <[base.log]>->( 0, ": :. \l$OS_ERROR [$chk_path]" )
            and $was = 'still is';
        <[base.log]>->( $log_level, sprintf ": :. $was mode : $cur_mode .," );
        $changes_made++;
    }
}

<[base.log]>->( 2, ':.. no changes required =)' ) if not $changes_made;

0;

# ______________________________________________________________________________
#\\YXJFVCIMZ2U2Q6JLWJAHQD36UHUUYE4C4RDYPG2OW2AFKHF2U4TM2Z72UNWYRJJL7JO3L4SHR4ICW
# \\ IO2CUJHT5L65URFTYP5INXEKRMXX27PFFQIA57EQGR4RFULMZX4U \\// C25519-BASE-32 //
#  \\// ZHNUMAHMGGG5A6PANW5PZTD46PPL26NQVO2TN2NDAG6J3YIIYBQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
