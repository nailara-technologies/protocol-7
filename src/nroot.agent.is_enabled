# >:]

# name  = nroot.agent.is_enabled
# descr = returns true if agent is enabled \ not disabled in the configuration

my $agent_name = shift;
die 'nroot.agent.is_enabled: no agent name specified'
    if not defined $agent_name;

my $config_href   = <nroot.start_setup.globals.agents>;
my $agent_name_re = <regex.base.usr_str>;

# checking config syntax
foreach my $check_key ( 'enabled', 'disabled' ) {
    if (    exists $config_href->{$check_key}
        and defined $config_href->{$check_key}
        and $config_href->{$check_key} !~ m|^(($agent_name_re*\ *)+)?\s*$|i ) {
        <[base.log]>->(
            0,
            "start setup syntax error: agents.$check_key = '"
                . $config_href->{$check_key}
                . "' <-- expecting valid agent name[s]"
        );
        die 'critical configuration error';
    }
}

# all agents are considered enabled in absence of explicit statements ..,
return 1
    if not defined $config_href->{'enabled'}
    and ( not defined $config_href->{'disabled'}
    or $config_href->{'disabled'} =~ m|^\s+$| );

# agents.diabled takes precedence to agents.enabled.,
map { return 0 if $ARG eq $agent_name }
    split( m|\s+|, $config_href->{'disabled'} )
    if defined $config_href->{'disabled'};

return 1 if not defined $config_href->{'enabled'};

# if agents.enabled is present, all agents not listed there count as disabled .,
map { return 1 if $ARG eq $agent_name }
    split( m|\s+|, $config_href->{'enabled'} );
return 0;

# ______________________________________________________________________________
#\\RNBL3KRQHCEFPULDEPMB6HJOKEJCSCOKRS5ISKTO34CN4YGI5BT2OCRH673QHKGUKBXIWINICTCCU
# \\ D3XRO57RNEIRNRFT6ZBO3HS56I5GRU2TZ3XWDDKIPEI3BW6WW4ZX \\// C25519-BASE-32 //
#  \\// WXJBXYIXU2YFHEZZ5APIHCRSK4HBMPEJFDR3IX3PFCZBNTBV6BA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
