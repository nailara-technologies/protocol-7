# >:]

# name  = base.log
# descr = generate a log entry
# args  = log_level log_msg [log_buffer]

my ( $log_level, $log_msg, $log_buffer )
    = ( $_[0] || 0, $_[1] // '', $_[2] // '' );

$log_level = 0 if $log_level !~ /^\d+$/;

<system.verbosity>          //= 0;
<system.internal_verbosity> //= 0;

return
    if $log_level > <system.verbosity>
    and $log_level > <system.internal_verbosity>;

$log_buffer = 'agent' if !length($log_buffer);

$log_msg = 'UNDEFINED LOG MESSAGE' if !length($log_msg);

$log_msg =~ s/\r/\\r/g;
$log_msg =~ s/\n/\\n/g;
$log_msg =~ s/\0/\\0/g;
$log_msg =~ s/\e/\\e/g;

# prevent deep recursions in error log system:
my $fatal_exit
    = ( $log_msg =~ m|Deep recursion | and $log_msg =~ m,log|buffer, ) ? 1 : 0;

$log_msg = "call to unknown subroutine while executing '$1'!"
    if $log_msg
    =~ m|\$code\{'([^\']*)'\}.+Can't use string \(""\) as a subroutine|;

my $dots = <log.dots> //= '.';
my $agent_prefix
    = sprintf( ":.%s%s%s.:", <system.node.name>, $dots, <system.agent.name> );

my $log_str;
if ( $log_level > 0 ) {
    $log_str = "$agent_prefix $log_msg";
} else {
    $log_str = "$agent_prefix $ANSI{bold}$ANSI{yelblue}$log_msg$ANSI{normal}";
}

if ($fatal_exit) {
    say STDERR $log_str, "$agent_prefix << EMERGENCY SHUTDOWN >> ",
        " [ anticipated deep recursion in log system ]";
    exit 2;
}

my $time_stamp = $code{'base.log_timestamp'}->();

# write to 'agent' log buffer
<[base.buffer.add_line]>->(
    $log_buffer, join( ' ', $time_stamp, $log_level, $log_msg )
) if $log_level <= <system.internal_verbosity>;

# print to console
utf8::decode($log_str)
    and say $log_str
    if fileno(STDOUT)
    and $log_level <= <system.verbosity>;

# ______________________________________________________________________________
#\\YURV4I2INZBFONAAAYV2NGUE6HEI6J5EBQQYY5CG6IWEAH7UF5UPXK74W2CLWJAQHGOPFSTSWAUSS
# \\ CHRBKQ3Q4DXUTP7BU56IYLS4R75TWXPMSW4R6ALBFVEKXQJIJM6W \\// C25519-BASE-32 //
#  \\// RXWNEXEI2FK4V6ZWTSCGSB3RHFX7S24U7J3BTNESG656LZV5WAQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
