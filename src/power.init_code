# >:]

# name = power.init_code

<[base.perlmod.autoload]>->('Device::Gembird');
<[base.perlmod.autoload]>->('Net::Libdnet::Arp');
<[base.perlmod.autoload]>->('POSIX::1003::Errno');
map { eval "sub Net::Ping::$_ {$errno{$_}}" if not defined \&{"Net::Ping::$_"} }
    errno_names();
<[base.perlmod.autoload]>->('Net::Ping');
<[base.perlmod.load]>->( 'File::Path', qw/make_path/ );

<net.silent_ignore.core> //= 1;
<power.cfg.ping_timeout> //= 1;    # seconds

<power.cfg.devices> //= {};

my $config_dir = <power.config_dir>;

if ( !-d $config_dir ) {
    <[base.log]>->( 1, "creating config directory '$config_dir'.." );
    my ( undef, undef, $uid, $gid ) = getpwnam(<system.privs.user>)
        or die "user '" . <system.privs.user> . "' not in passwd file";
    make_path( $config_dir, { mode => 0750, 'uid' => $uid, 'group' => $gid } )
        or die "make_path: $!";
}

<[power.load_config]> if -f join( '/', $config_dir, <power.config_file> );

<power.net_mac> //= Net::Libdnet::Arp->new;

<power.pattern.gembird_mac> //= qr/^88:b6:27:/;

# XXX: add status timer for each device

<list.devices> = {
    'var'   => 'data',
    'key'   => 'power.cfg.devices',
    'mask'  => '<key>:id status mac:mac_addr ip:ip_addr port pass',
    'align' => {
        'id'     => 'right+2',
        'status' => 'left+1',
        'mac'    => 'left',
        'ip'     => 'left',
        'port'   => 'right+5',
        'pass'   => 'center-1'
    },
    'descr' => 'configured devices'
};

0;
