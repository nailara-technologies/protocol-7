# >:]

# name = nroot.instance_pid_count

my $instance_id = shift;
die "expected instance id" if not defined $instance_id;
my $instance   = <nroot.agent.instance>->{$instance_id};
my $parent_pid = $instance->{'process'}->{'id'};

return 0 if not defined $parent_pid;

my %check_pids = ( $parent_pid => 1 );
map { $check_pids{$_} = 1 }
    ( @{ <[nroot.sub-process.get_children]>->($parent_pid) } );
map { $check_pids{$_} = 1 } keys %{ $instance->{'restart_pids'} }
    if exists $instance->{'restart_pids'};

my $processes_left = 0;
map { $processes_left++ if <[nroot.sub-process.exists]>->($_) }
    reverse sort keys %check_pids;

return $processes_left;

# ______________________________________________________________________________
#\\RQISVN3B7LNYJBZIQ66YIUQMRGQ7ZLB7SSXRIOAVY633DI277SWRNZFHDYAG6YEXA5HII63MMQRAE
# \\ 5GARKZ6CZL7ETBDQ63VRFIRMP3KXLQSBK7CENSC36H3FQ5EOYKFF \\// C25519-BASE-32 //
#  \\// 74IL7LREUMQ2ASI5LEBAOPZ3RIGH2IXNB7HQKOSRIZBUPJXXMAQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
