# >:]

# name = X-11.init_code

<[base.perlmod.autoload]>->('IPC::Open3');
<[base.perlmod.autoload]>->('Linux::Inotify2');
<[base.perlmod.autoload]>->('X11::Protocol');
<[base.perlmod.autoload]>->('X11::Keyboard');
<[base.perlmod.autoload]>->('X11::Protocol::WM');
<[base.perlmod.autoload]>->('X11::Protocol::XSetRoot');
<[base.perlmod.autoload]>->('X11::WM');

my $modes_re = <X-11.modes_re> = qr,^(host|xnest|nxagent|xorg|xephyr|xvfb)$,;

if ( defined <system.agent.subname> ) {
    my $override_mode = <system.agent.subname>;
    if ( $override_mode =~ $modes_re ) {
        <[base.log]>->(
            0, "<< overriding X-11 agent mode [ with '$override_mode' ] >>"
        );
        <X-11.mode> = $override_mode;
    } else {
        my $old_mode = <X-11.mode>;
        <[base.log]>->(
            0,
            "<<< invalid agent mode \"$override_mode\", keeping '$old_mode' >>>"
        );
    }
}

foreach my $bin_name (
    qw|

    Xvfb
    Xorg
    Xnest
    lspci
    Xephyr
    nxagent
    intel_gpu_top
    intel_gpu_frequency

    |
) {
    <X-11.bin_path>->{$bin_name} //= <[base.required_bin_path]>->($bin_name);
}

<[base.inotify.install_io_watcher]>;

if ( <X-11.mode> eq 'auto-xephyr' ) {
    system("ps h -C Xorg 1>/dev/null 2>/dev/null");
    <X-11.mode> = $CHILD_ERROR == 256 ? 'xorg' : 'xephyr';
    <[base.log]>->( 1, "[auto] switched to '<X-11.mode>'-mode.." );
}

<X-11.waiting>        //= {};
<X-11.bg_mode>        //= 'full';
<X-11.video_driver>   //= <[X-11.get_video_driver]>;
<X-11.disable_glamor> //= 0;

<X-11.bg_color> //= '000000';
<X-11.bg_color> =~ s|^#?([0-9a-f]{6})$|#$1|i;

<X-11.keybd.grab_all_keys> //= 'no';
<X-11.max_intel_gpu_freq>  //= 'no';

<X-11.collect_intel_gpu_stats> //= 0;

if (    <X-11.mode> eq 'xorg'
    and <X-11.max_intel_gpu_freq> =~ m{^(yes|1)$}
    and <X-11.video_driver>       =~ m|^i\d\d\d$| ) {
    my $freq_bin_path = <X-11.bin_path.intel_gpu_frequency>;
    if ( !length($freq_bin_path) or !-x $freq_bin_path ) {
        <[base.log]>->(
            0,
            "[!] max_intel_gpu_freq is enabled but"
                . " intel_gpu_frequency binary not found.."
        );
    } else {
        my $freq_output = qx| $freq_bin_path -g |;
        if ( $freq_output =~ m|^cur: ([^\n]+)\n.+max: ([^\n]+)\n$|s ) {
            my ( $cur_freq, $max_freq ) = ( $1, $2 );
            if ( $cur_freq ne $max_freq ) {
                <[base.log]>->(
                    1,
                    "<!> maximizing GPU frequency [ $cur_freq --> $max_freq ]"
                );

                qx| $freq_bin_path -m |;    # <- max

                if ( qx| $freq_bin_path -g |
                    =~ m|^cur: ([^\n]+)\n.+max: ([^\n]+)\n$|s ) {
                    ( $cur_freq, $max_freq ) = ( $1, $2 );
                    <[base.log]>->(
                        0,
                        "[!] GPU frequency setting failed "
                            . "[ now $cur_freq, should be $max_freq ]"
                    ) if $cur_freq ne $max_freq;
                }
            }
        }
    }
}

0;

# ______________________________________________________________________________
#\\AKCVNOH5A4KNBQSPAEDN3B3DNBUNGAPRT2CC2TZNDAPGLOWNMAMQJ73W2GE7ABLFXKNR3Y2RQ4CI4
# \\ EHYXV5H4DFIAS6OHSVPWULXVHVM7OSV4REHD6ZG4WMVZXIFZEZ5M \\// C25519-BASE-32 //
#  \\// Y62MSKYI7NLTLNINGDSP6J34ZHBP3RU3FAO65KQQA4VHJTZUUAQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
