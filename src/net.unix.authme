# >:]

# name  = net.unix.authme
# descr = unix domain socket auth. (client side)
# todo  = implement client side authentication timeout

my $answer;
my $smiley;
my ( $backend_socket, $user ) = @_;

if (   not defined $backend_socket
    or !-S $backend_socket
    or !$backend_socket->connected ) {
    <[base.log]>->(
        0,
        "[!] net.unix.authme: can not authenticate (no valid socket supplied)"
    );
    return undef;
}

if ( <[base.s_read]>->( $backend_socket, \$smiley, 4 ) ) {
    if ( $smiley =~ />:\]\n/ ) {
        <[base.log]>->( 2, '[*] protocol banner detected..' );
    } else {
        <[base.log]>->( 0, '[#] no valid smiley found! :(' );
        return undef;
    }
    <[net.out]>->( $backend_socket, "select unix\n" );
    <[base.sleep]>->(0.2);
    $answer = <$backend_socket>;
    if ( $answer =~ /ACK continue\n/ ) {
        <[base.log]>->( 2, '[*] unix auth. selected' );
    } else {
        <[base.log]>->( 0, '[#] unix auth. not available!' );
        return undef;
    }
    <[net.out]>->( $backend_socket, "auth $user\n" );
    if ( <[base.s_read]>->( $backend_socket, \$answer, 9 ) ) {
        if ( $answer =~ /YEAH/ ) {
            <[base.log]>->( 1, '[*] successfully authenticated =)' );
            return $backend_socket;
        } elsif ( $answer =~ /NOPE/ ) {
            <[base.log]>->( 0, '[#] access denied :(' );
            return undef;
        } else {
            <[base.log]>->( 0, '[#] protocol mismatch >:[' );
            return undef;
        }
    }
}

# ______________________________________________________________________________
#\\OIAT7CAX66V2RLYGUN7VENV7QPZDKR6I3ELHFWH6R2655R4V7ZDQEAEV64JHW3RWUYF6BKICPS62C
# \\ 7JC7WRPOEZ6YKEKO62FSKY3FRCG7LGFWI7XAKCRMA74EFWQGS2RE \\// C25519-BASE-32 //
#  \\// NGOS65IJSH74PQ32UPBK2YE7IQVLGFXBCDWUBC7UO2LMY6NCWDI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
