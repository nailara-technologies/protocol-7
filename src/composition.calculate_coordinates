# >:]

# name = composition.calculate_coordinates

my $descr       = shift;
my $screen      = <x11.screen>;
my $screen_lcfg = <composition.setup.screen>;

die "'\<x11.screen>' not defined"
    if not defined $data{'x11'} or not defined <x11.screen>;
map { die "screen $ARG not defined" if not defined $screen->{$ARG} }
    ( 'width', 'height', 'orientation' );

### screen borders (underscan) ###

my %screen_frame;
my @border_names = ( 'left', 'top', 'right', 'bottom' );
map { $screen_frame{$ARG} = 0 } @border_names;

# LLL: fix load_section_config hash key recursion and adapt config loading!

if ( exists $screen_lcfg->{'underscan'}
    and $screen_lcfg->{'underscan'} =~ /^\d+$/ ) {
    map { $screen_frame{$ARG} = $screen_lcfg->{'underscan'} } @border_names;
}

foreach my $border (@border_names) {
    $screen_frame{$border} = $screen_lcfg->{"underscan.$border"}
        if exists $screen_lcfg->{"underscan.$border"}
        and $screen_lcfg->{"underscan.$border"} =~ /^\d+$/;
}

### window edge coordinate calculation ###
my ( $screen_width, $screen_height )
    = ( $screen->{'width'}, $screen->{'height'} );

$screen_width  -= $screen_frame{'left'} + $screen_frame{'right'};
$screen_height -= $screen_frame{'top'} + $screen_frame{'bottom'};

my ( $width, $height ) = ( $screen_width, $screen_height );
my ( $left, $top, $right, $bottom ) = ( 0, 0, $screen_width, $screen_height );

if ( exists $descr->{'left'} ) {
    $left = $descr->{'left'};
    $left = sprintf( "%.0f", ( $screen_width / 100 ) * $1 )
        if $left =~ /^(\d+(\.\d+)?)\%$/;
}
if ( exists $descr->{'top'} ) {
    $top = $descr->{'top'};
    $top = sprintf( "%.0f", ( $screen_height / 100 ) * $1 )
        if $top =~ /^(\d+(\.\d+)?)\%$/;
}
if ( exists $descr->{'width'} ) {
    $width = $descr->{'width'};
    $width = sprintf( "%.0f", ( $screen_width / 100 ) * $1 )
        if $width =~ /^(\d+(\.\d+)?)\%$/;
    $right = $left + $width;
}
if ( exists $descr->{'height'} ) {
    my $height = $descr->{'height'};
    $height = sprintf( "%.0f", ( $screen_height / 100 ) * $1 )
        if $height =~ /^(\d+(\.\d+)?)\%$/;
    $bottom = $top + $height;
}

return {
    'left'   => $left + $screen_frame{'left'},
    'top'    => $top + $screen_frame{'top'},
    'right'  => $right + $screen_frame{'left'},
    'bottom' => $bottom + $screen_frame{'top'}
};

# ______________________________________________________________________________
#\\IVESRALNQ6OLOEBKTPIG6K7IPEZJVT6DHI3JZJ44UTOWF7MTDLGNFYQECZDHEHFLXEP4KBOYEMM7A
# \\ X7HVN2CF47DAGSEO2U2JKQML2BITR2NNH4KUIG6O2BA3L77VI6VZ \\// C25519-BASE-32 //
#  \\// 4HMBZO4OZ5T7SXKDJO72QS5VKIFY3RZRBYB4CKW2Y7LRTCCQGDA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
