# >:]

# name = browser.main_loop

if ( exists <base.perlmod.loaded>->{'Glib::Event'} ) {
    <[base.log]>->( 1, "entering main loop..," );
    Gtk3->main;
    CORE::exit(0);
} else {

    map { <[base.log]>->( 1, $ARG ) } (
        ':',
        ":  << 'Glib::Event' module is not available, >>",
        ':  <<  :. entering alternative main loop .., >>', ':'
    );
    <browser.main-loop.wakeup-interval> = 0.24;
    Event->idle(    ## <-- also create 'base.event.add_signal' routine ##  [LLL]
        cb => sub {
            $SIG{'ALRM'} = sub { }; ## <-- will wake up from waiting gtk loop ##
            my $wakeup_interval = <browser.main-loop.wakeup-interval> //= 0.24;
            Time::HiRes::alarm($wakeup_interval) if !<window.scrolling>;
            Gtk3->main_iteration_do();
            alarm 0;                ## <-- returned, disabling alarm signal ##

            return 1;
        },
        repeat => 1
    );
    <[event.loop]>;
    <[base.exit]>;
}

# ______________________________________________________________________________
#\\PK3VBQ7QVVSGFNBYUUQZSDDYWXF2ZOKDZRFQINWRDWNHAVXDMCYJE6T5WFNDGDYQECKL54CPZWBG6
# \\ AINZWC4DAR455B3BBZIPTJEF7IWJEPS75VJJXXTD75MATXKNOBNY \\// C25519-BASE-32 //
#  \\// RUDQKLWCADKCRWLK2K5RIWKJL2RV3T23ZQ4EH5YBL2O52R6BSCY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
