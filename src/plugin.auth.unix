# >:]

# name    = plugin.auth.unix
# args    = int(session id)
# return  = str(user name) [success], undef [error]

my $id = $_[0]->w->data;
my $re = <regex.base>;

my $input  = \$data{'session'}{$id}{'buffer'}{'input'};
my $output = \$data{'session'}{$id}{'buffer'}{'output'};

if ( $$input =~ s|^auth ($re->{usr_str})\n|| ) {
    my $auth_user = $1;

    if ( $data{'handle'}{ $data{'session'}{$id}{'handle'} }{'link'} ne 'unix' )
    {
        <[base.log]>->(
            0,
            "[$id] [ auth unix ] access denied to user '$1' [ not a unix link ]"
        );
        $$output .= ">:[\n";
        return 2;
    }

    my $auth_ok = 0;

    my $client_uid
        = $data{'handle'}{ $data{'session'}{$id}{'handle'} }{'unix'}{'uid'};
    my $client_uname = getpwuid($client_uid);

    if ( not defined $client_uname ) {
        $$output .= ">:[\n";
        <[base.log]>->( 0, "[$id] peer UID is undefined, unix auth aborted.." );
        return 2;
    }

    if ( defined <auth.setup.usr>->{$auth_user}
        and <auth.setup.usr>->{$auth_user} =~ m|^:unix:(.+)$| ) {
        my @allowed_users = split( m|\s*,\s*|, $1 );

        map { $auth_ok = 1 if $client_uname eq $ARG } @allowed_users;
    }

    if ($auth_ok) {
        $$output .= "YEAH >:P\n";
        my $s_usr = $client_uname ne $auth_user ? " [u:$client_uname]" : '';
        <[base.log]>
            ->( 1, "[$id] session authorized as '$auth_user'" . $s_usr );
        return ( 0, $auth_user );
    } else {
        $$output .= "NOPE >:|\n";
        my $s_usr = $client_uname ne $auth_user ? " [uname=$client_uname]" : '';
        <[base.log]>->(
            0, "[$id] [auth unix] access as '$auth_user' denied" . $s_usr
        );
        return 2;
    }
} elsif ( $$input =~ m|\n| ) {
    $$output .= ">:[\n";
    <[base.log]>->( 0, "[$id] authentication protocol mismatch [ unix ]" );
} else {
    return 1;
}

return 2;

# ______________________________________________________________________________
#\\SS5TPZJFFAJDCME37RGPHFTP6RZ4MO4NBBHCGKH2R3GNCVR6KHWCFD4EJPNQH2MTHVNK7N25S7SM6
# \\ 4RPWD5QHCFPJA4WLQTXOJZXYOORT7U6RFBVQCMXIW2W3W6RZ2TAD \\// C25519-BASE-32 //
#  \\// YOL3RDNFXXCKIF752WWOYO3CIRROO42USETB76EZVKTX6MIWCDQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
