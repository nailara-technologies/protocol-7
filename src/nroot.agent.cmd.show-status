# >:]

# name  = nroot.agent.cmd.show-status
# param = <agent|instance>
# descr = return agtent status with duration unchanged

<nroot.agent.notify_online> //= {};

my $agent_subname;
my $query_param = $$call{'args'};
my $reply_id    = $$call{'reply_id'};

return {
    'mode' => 'nak',
    'data' => 'expected agent name or instance parameter'
    }
    if not defined $query_param or !length($query_param);

if ( $query_param =~ /^job:(\d+)$/ and my $job_id = $1 ) {
    my $instance_id;
    map {
        $instance_id = $_
            if <nroot.agent.instance>->{$_}->{'job_id'} == $job_id
    } keys %{<nroot.agent.instance>};
    if ( defined $instance_id ) {
        $query_param = $instance_id;
    } else {
        return {
            'mode' => 'nak',
            'data' => "unknown job id '$job_id'"
        };
    }
}

my $query_copy = $query_param;
$agent_subname = $1
    if $query_param !~ /^\d+/ and $query_param =~ s|\[([^\]]+)\]$||;

if (    not defined <[agent.get_id]>->($query_param)
    and not defined <nroot.agent.instance>->{$query_param} ) {
    my $rep_msg
        = $query_param =~ /^\d+$/
        ? "no such agent instance ($query_param)"
        : "no such agent in setup [$query_param]";
    return {
        'mode' => 'nak',
        'data' => $rep_msg
    };
}

if ( $query_param =~ /^(\d+)$/ and my $id = $1 ) {    # instance id
    my $core_sid = <nroot.agent.instance>->{$id}->{'core_sid'};
    my $prog_pid = <nroot.agent.instance>->{$id}->{'process'}->{'id'};
    if ( defined <nroot.agent.instance>->{$id} ) {
        my $agent_status = <nroot.agent.instance>->{$id}->{'status'};

        my $duration = <[base.parser.duration]>->(
            <[base.n2u_time]>->(
                <nroot.agent.instance>->{$id}->{'status-since'}
            )
        );

        return {
            'mode' => 'ack',
            'data' => "[$agent_status] external program"
                . " '$query_copy' [PID=$prog_pid] < since $duration >"
            }
            if <nroot.agent.instance>->{$id}->{'status'} eq 'extbin';

        my $status_msg
            = ( $agent_status eq 'online' and defined $core_sid )
            ? " [$agent_status] < since $duration > [ core-sid $core_sid ]"
            : " [$agent_status] < since $duration >";

        return { 'mode' => 'ack', 'data' => $status_msg };
    }
}

foreach my $id ( keys %{<nroot.agent.instance>} ) {    # agent name [+subname]
    my $core_sid = <nroot.agent.instance>->{$id}->{'core_sid'};
    my $prog_pid = <nroot.agent.instance>->{$id}->{'process'}->{'id'};
    if (<nroot.agent.instance>->{$id}->{'agent_name'} eq $query_param
        and (  not defined $agent_subname
            or not defined <nroot.agent.instance>->{$id}->{'subname'}
            or <nroot.agent.instance>->{$id}->{'subname'} eq $agent_subname )
    ) {
        my $agent_status = <nroot.agent.instance>->{$id}->{'status'};

        my $duration = <[base.parser.duration]>->(
            <[base.n2u_time]>->(
                <nroot.agent.instance>->{$id}->{'status-since'}
            )
        );

        return {
            'mode' => 'ack',
            'data' => "[$agent_status] external program "
                . " '$query_copy' [PID=$prog_pid] < since $duration >"
            }
            if <nroot.agent.instance>->{$id}->{'status'} eq 'extbin';

        my $status_msg
            = ( $agent_status eq 'online' and defined $core_sid )
            ? "[ $agent_status ] < since $duration > [ core-sid $core_sid ]"
            : "[ $agent_status ] <$duration>";

        return { 'mode' => 'ack', 'data' => $status_msg };
    }
}

return { 'mode' => 'nak', 'data' => 'not present' }

# ______________________________________________________________________________
#\\ESLZMFIYOGU3XIA7KHDF7E2BCU7BT4A4GDCN3LHKWKWEPAUQHHEHRQLNWOBMCECPWTW46RBCQSWII
# \\ HV2ATORXRMX3237THEI627KDHVA7IU4X6UORMOHXTQDAPLGC2EAD \\// C25519-BASE-32 //
#  \\// WI6OOATWZVOZSVP52NJCQU35Y7IHEC6HFJRGY5WEPMVILTUF4CI \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
