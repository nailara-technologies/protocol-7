# >:]

# name  = debug.cmd.extract-line-map
# descr = returns a linenum-map for specified file
# param = <file-path>

my $usr_sid   = $$call{'session_id'};
my $file_name = $$call{'args'};
state $last_warned = '';

my $std_msg = 'file not found or insufficient read permissions';
$std_msg = 'expected file path for line map' if not defined $file_name;
return { 'mode' => 'nak', 'data' => $std_msg }
    if not defined $file_name or !-f $file_name;

if ( !-r $file_name ) {
    my $lvl = $last_warned ne $file_name ? 0 : 2;
    <[base.log]>->(
        $lvl, "[$usr_sid] <extract_line_map> no read permission [ $file_name ]"
    );
    $last_warned = $file_name;
    return { 'mode' => 'nak', 'data' => $std_msg };
}

my $response = "\n# .: $file_name :.\n\n# [line-num] [offset]\n\n";
my $line_map = <[file.line_map]>->($file_name);
map {
    my $element = $line_map->{$_};
    $response .= sprintf( " : %s :. %s\n", $_, $line_map->{$_} )
    }
    sort { $a <=> $b } keys %{$line_map};

return { 'mode' => 'data', 'data' => $response . "\n" };

# ______________________________________________________________________________
#\\GLFTG4C7TSOTUX2B7NSRNCX4VKVNQTD7W2RQFR3AT5C23HRBIUICICBPCKDA43DI4WBBKSTZTVHHS
# \\ YOC27VAMKSUS7BKUDCMDKNCP7LSOVCF6IJ6F3VCCSAH62MLNFR6N \\// C25519-BASE-32 //
#  \\// 6J6HQM562UNRGRCNAJM2CFP4HV3QOHJ2JIF4NK3AMAGZHKNN2CA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
