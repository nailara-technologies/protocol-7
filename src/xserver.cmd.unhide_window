# >:]

# name  = xserver.cmd.unhide_window
# param = <w_id>
# descr = unhide specified window

my $X         = <xserver.x11>;
my $window_id = $$call{'args'};

return { 'mode' => 'nak', 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => 'nak', 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <xserver.x11_tops>;
$xtops->update;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'nak', 'data' => 'no such window' } if not defined $window;

<[base.log]>->( 2, "unhiding window $window_id" );
eval {
    X11::Protocol::WM::change_net_wm_state( $X, $window_id, 'remove',
        'HIDDEN' );
    X11::Protocol::WM::change_net_wm_state( $X, $window_id, 'remove',
        'HIDDEN' );
};

return { 'mode' => 'nak', 'data' => "failed to remove 'hidden' state" }
    if $@;
return { 'mode' => 'ack', 'data' => "removed 'hidden' window state" };
