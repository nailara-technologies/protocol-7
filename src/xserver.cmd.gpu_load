# >:]

# name  = xserver.cmd.gpu_load
# param = [interval_secs]
# descr = return current gpu load statistics

return { 'mode' => 'nak', 'data' => 'no statistics available' }
    if not defined <xserver.gpu_top.stats.load_average>
    or not defined <xserver.gpu_top.stats.secs>;

if ( defined $$call{'args'} ) {
    my $ivl = $$call{'args'};
    my %secs = map { $_ => 1 } @{<xserver.gpu_top.stats.secs>};
    return {
        'mode' => 'nak',
        'data' => "no statistics for interval \"$ivl\" collected .. [ "
            . join( ', ', @{<xserver.gpu_top.stats.secs>} ) . " ]"
        }
        if not exists $secs{$ivl};
    if ( not defined <xserver.gpu_top.stats.load_average>->{$ivl} ) {
        my $sample_count = keys %{<xserver.gpu_top.stats.sample>};
        my $retry_in     = $ivl - $sample_count;
        my $s            = $retry_in > 1 ? 's' : '';
        $s .= ' ..' if $retry_in >= 5;
        $s .= '.'   if $retry_in >= 15;
        return {
            'mode' => 'nak',
            'data' => "please retry in $retry_in second$s"
        };
    }

    return {
        'mode' => 'ack',
        'data' => <xserver.gpu_top.stats.load_average>->{$ivl}
    };
}

my $stats_str = '';
map {
    my $value
        = defined <xserver.gpu_top.stats.load_average>->{$_}
        ? <xserver.gpu_top.stats.load_average>->{$_}
        : '---';
    if ( !length($stats_str) ) {
        $stats_str .= "< $value% >  ";
    } else {
        $stats_str .= "[ ${_}s : $value ]  ";
    }
} @{<xserver.gpu_top.stats.secs>};
$stats_str =~ s| +$||;

return { 'mode' => 'ack', 'data' => $stats_str }
