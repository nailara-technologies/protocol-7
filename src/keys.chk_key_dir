# >:]

# name = keys.chk_key_dir

my $key_dir   = <crypt.C25519.key_dir>;
my $key_owner = <crypt.C25519.key_owner>;
( my $uid, my $gid ) = ( $key_owner->{'uid'}, $key_owner->{'gid'} );

if ( -w "$key_dir/.." or "$key_dir/../.." ) {
    if ( !-d $key_dir ) {
        <[base.log]>->( 1, "creating key directory '$key_dir' .." );
        eval {
            make_path( $key_dir, { mode => 0700, uid => $uid, group => $gid } );
        };
        warn $@ if $@;
        return -1;    # <- error state
    }
} elsif ( !-r $key_dir or !-d $key_dir ) {
    my $perms     = -e $key_dir ? '' : ' (permissions)';
    my $log_level = <crypt.C25519.initialized> // 0;
    $log_level++ if $log_level;
    <[base.log]>->( $log_level, "no key dir$perms ['$key_dir']!" );
    return -1;        # <- error state
}

return 1              # <- success [true]
