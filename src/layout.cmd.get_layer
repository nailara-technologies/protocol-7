# >:]

# name  = layout.cmd.get_layer
# param = <agent_name>
# descr = return configured layer for agent / tile

return { 'mode' => 'nak', 'data' => "expected valid agent name" }
    if not defined $$call{'args'}
    or $$call{'args'} !~ /^(\S+)( +(\S+))?$/;

my ( $source_agent, $agent_name ) = ( $1, $3 );
$source_agent =~ s|^.+\.||g;
$agent_name = $source_agent if not defined $agent_name;

if ( $agent_name =~ /^\[([^\]]+)\]$/ ) {    # <- only subname given
    my $subname = $1;
    my %agent_names;
    map { $agent_names{$_} = 1 if $_ =~ /\[$subname\]$/ }
        keys %{<layout.layers>};
    my $err_msg;
    if ( !keys(%agent_names) ) {
        $err_msg = "no agent matches subname '$subname'";
    } elsif ( keys(%agent_names) > 1 ) {
        $err_msg = 'multiple agents are matching, agent name required';
    }
    return { 'mode' => 'nak', 'data' => $err_msg } if defined $err_msg;
    ($agent_name) = keys(%agent_names);
}

if ( not exists <layout.layers>->{$agent_name} ) {
    my $last_match;
    my $match   = 0;
    my $msg_str = "no configured layer found for agent '$agent_name'";
    if ( $agent_name !~ /[\[\]]+/ ) {
        map {
            if ( $_ =~ /^([^\[]+)\[/ and $1 eq $agent_name ) {
                $last_match = $_;
                $match++;
            }
        } keys %{<layout.layers>};
    }
    $msg_str
        = "multiple '$agent_name' instances defined, agent subname required!"
        if $match > 1;
    return {
        'mode' => 'nak',
        'data' => $msg_str
        }
        if $match != 1;
    $agent_name = $last_match;
}

return {
    'mode' => 'ack',
    'data' => <layout.layers>->{$agent_name}
    }

# ______________________________________________________________________________
#\\OAMEQ3IHYQ4WRRV4NZT4DJGLX6AYCN6LXSUCYQZ6HG2QKLBAGL2IDY5HBB2C7YEAQPHI7HAV7NXTU
# \\ AH2P7BGPBH74LZF2CBYLSOLGU4XE675RH2WNOIKJVC65AE37BS7N \\// C25519-BASE-32 //
#  \\// 4GWRESNS5J6PIJSSJXGYL5RWGWPLV5SVSC6SJAWQOAB7BAOKMBA \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
