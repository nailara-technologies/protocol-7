# >:]

# name = root.init_spawn_config

my $spawn_config_data = shift || [];

<[base.execute_agent_code]>->(
    <[base.parser.config]>->(
        shift( @{$spawn_config_data} )->{'globals'},
        qw( <root.spawn_config.globals> )
    )
);

my $agents_init_code;
while ( not defined $agents_init_code ) {    # skip other sections
    $agents_init_code = shift( @{$spawn_config_data} )->{'agents'};
}

<root.spawn_config.agents.startup.init_code>   //= {};
<root.spawn_config.agents.startup.spawn_order> //= [];

foreach my $agent_element ( @{$agents_init_code} ) {

    if ( ref($agent_element) ne 'HASH' ) {
        <[base.log]>->(
            0,
            ": : spawn cfg syntax error: '$agent_element'"
                . " ( expected \" - <agent_name>\" )"
        );
        next;
    }

    my ( $agent_name, $agent_init_code ) = each %{$agent_element};
    push( @{<root.spawn_config.agents.startup.spawn_order>}, $agent_name )
        if <[agent.is_enabled]>->($agent_name);
    my @config_code;
    foreach my $config_element ( @{$agent_init_code} ) {

        if ( ref($config_element) eq 'HASH' ) {    # : init code section :
            my ( $init_keyword, $init_code ) = each %{$config_element};
            <root.spawn_config.agents.startup.init_code>
                ->{$agent_name}->{$init_keyword} = $init_code;
        } else {
            push( @config_code, $config_element );    # (agent) config section
        }
    }
    <[base.execute_agent_code]>->(
        <[base.parser.config]>->(
            \@config_code,
            qw(<root.spawn_config.agents.config>) . "{'$agent_name'}"
        )
    );
    <root.spawn_config.agents.config>->{$agent_name} //= {};
}
