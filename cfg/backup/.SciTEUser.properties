# Global initialisation file for SciTE
# For Linux, place in $prefix/share/scite
# For Windows, place in same directory as SciTE.EXE (or Sc1.EXE)
# Documentation at http://www.scintilla.org/SciTEDoc.html


file.patterns.perl=*.pl;*.pm;*.cgi;*.pod;*; # XXX: not optimal .,


# Globals

# Window sizes and visibility
position.left=0
position.top=-77
position.width=947
position.height=1137
#position.tile=1
full.screen.hides.menu=1
#minimize.to.tray=1
split.vertical=1
output.horizontal.size=20
output.vertical.size=47
output.initial.hide=1
horizontal.scrollbar=0
#horizontal.scroll.width=10000
output.horizontal.scrollbar=0
#output.horizontal.scroll.width=10000
#output.scroll=0
error.select.line=1
#end.at.last.line=0
tabbar.visible=1
tabbar.hide.one=0
tabbar.multiline=1
toolbar.visible=0
toolbar.detachable=0
toolbar.usestockicons=1
menubar.detachable=1
undo.redo.lazy=0
statusbar.visible=0
#fileselector.width=800
fileselector.height=800
magnification=-1
output.magnification=-3

# Sizes and visibility in edit pane
line.margin.visible=1
line.margin.width=4
margin.width=16
fold.margin.width=16
fold.margin.colour=#220042
fold.margin.highlight.colour=#000000
blank.margin.left=6
blank.margin.right=6
buffered.draw=1
two.phase.draw=1
use.palette=0

# Element styles
view.eol=0
#control.char.symbol=.
caret.period=442
view.whitespace=1
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1
caret.width=1
caret.fore=#11ff42
caret.line.back=#420023
caret.line.back.alpha=-200
edge.column=80
edge.mode=1
edge.colour=#002342
braces.check=1
braces.sloppy=1
selection.fore=#ffdd00
selection.back=#0000ff
selection.alpha=33
whitespace.fore=#0000cc
#whitespace.back=#FFF0F0
error.marker.fore=#ff0000
error.marker.back=#000044
bookmark.fore=#4400cc
bookmark.back=#7700cc
bookmark.alpha=-222
find.mark=#FF0000

# Checking
are.you.sure=1
#are.you.sure.for.build=1
save.all.for.build=1
quit.on.close.last=0
load.on.activate=1
save.on.deactivate=1

#are.you.sure.on.reload=1
reload.preserves.undo=1
check.if.already.open=1
default.file.ext=.cxx
title.full.path=1
title.show.buffers=1
save.recent=1
save.session=1
session.bookmarks=1
session.folds=1
open.dialog.in.file.directory=1
strip.trailing.spaces=1
ensure.final.line.end=1
ensure.consistent.line.ends=0
#save.deletes.first=1
buffers=64
buffers.zorder.switching=1
#api.*.cxx=d:\api\w.api
#win95.death.delay=1000
#translation.missing=***
#read.only=1
#max.file.size=1


# not working...
# $(file.patterns.perl)
#api.*.*=/usr/share/scite/api/perl.api



# Indentation
tabsize=8
indent.size=4
use.tabs=0
indent.auto=1
indent.automatic=1
indent.opening=0
indent.closing=0
tab.indents=1
backspace.unindents=1

# Wrapping of long lines
wrap=0
cache.layout=3
output.wrap=1
output.cache.layout=3
#wrap.visual.flags=3
#wrap.visual.flags.location=3
wrap.visual.startindent=4

# Folding
# enable folding, and show lines below when collapsed.
fold=1
fold.compact=1
fold.flags=16
fold.symbols=0
fold.on.open=0
fold.comment=1
fold.preprocessor=1
fold.at.else=1

# Find and Replace
# Internal search always available with recursive capability so use in preference to external tool
find.command=
# findstr is available on recent versions of Windows including 2000
#if PLAT_WIN
#	find.command=findstr /n /s $(find.what) $(find.files)
#find.input=$(find.what)
#if PLAT_GTK
#	find.command=grep --line-number "$(find.what)" $(find.files)
find.files=*.c *.cxx *.h
find.in.files.close.on.find=0
#find.replace.matchcase=1
find.replace.escapes=1
find.replace.regexp=1
#find.replace.regexp.posix=1
#find.replace.wrap=0
#find.replacewith.focus=0
find.replace.advanced=1

# Behaviour
eol.mode=LF
eol.auto=1
clear.before.execute=1
#vc.home.key=1
wrap.aware.home.end.keys=1
#autocompleteword.automatic=1
#autocomplete.choose.single=0
caret.policy.xslop=1
caret.policy.width=0
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=0
caret.policy.lines=22
caret.policy.ystrict=0
caret.policy.yeven=1
caret.policy.yjumps=0
visible.policy.strict=1
visible.policy.slop=1
visible.policy.lines=22
time.commands=1
caret.sticky=0

# Status Bar
statusbar.number=4
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) - $(FileTime) | $(FileAttr)

if PLAT_WIN
	command.scite.help="file://$(SciteDefaultHome)\SciTEDoc.html"
	command.scite.help.subsystem=2
if PLAT_GTK
	command.print.*=a2ps "$(FileNameExt)"
	command.scite.help=x-www-browser "file://$(SciteDefaultHome)/SciTEDoc.html"

# Internationalisation
# Japanese input code page 932 and ShiftJIS character set 128
#code.page=932
#character.set=128
# Unicode
code.page=65001
#code.page=0
#character.set=204
# Required for Unicode to work on GTK+:
LC_CTYPE=en_US.UTF-8
output.code.page=65001

# Export
#export.keep.ext=1
export.html.wysiwyg=1
#export.html.tabs=1
#export.html.folding=1
export.html.styleused=1
#export.html.title.fullpath=1
#export.rtf.tabs=1
#export.rtf.font.face=Arial
#export.rtf.font.size=9
#export.rtf.tabsize=8
# Magnification (added to default screen font size)
export.pdf.magnification=0
# Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Helvetica
# Page size (in points): width, height
# E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
# Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=äöåúüˇ¿‡¡·¬‚√„ƒ‰≈Â∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˆ
# This is a better set for Russian:
#chars.accented=¿‡¡·¬‚√„ƒ‰≈Â®∏∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ˆ◊˜ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˇ

# The open.filter setting is only used on Windows where the file selector has a menu of filters to apply
# to the types of files seen when opening.
# There is a limit (possibly 256 characters) to the length of a filter,
# so not all source extensions can be in this setting.
source.files=*.asm;*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e

if PLAT_WIN
	all.files=All Files (*.*)|*.*|
if PLAT_GTK
	all.files=All Files (*)|*|Hidden Files (.*)|.*|
open.filter=\
All Source|$(source.files)|\
$(all.files)\
$(filter.ada)\
$(filter.conf)\
$(filter.asm)\
$(filter.asn1)\
$(filter.ave)\
$(filter.baan)\
$(filter.bash)\
$(filter.caml)\
$(filter.cpp)\
#$(filter.ch)\
$(filter.css)\
$(filter.eiffel)\
$(filter.erlang)\
$(filter.fortran)\
$(filter.idl)\
$(filter.inno)\
$(filter.java)\
$(filter.js)\
$(filter.kix)\
$(filter.lout)\
$(filter.lua)\
$(filter.matlab)\
$(filter.metapost)\
$(filter.mmixal)\
$(filter.nncrontab)\
$(filter.nsis)\
$(filter.opal)\
$(filter.pascal)\
$(filter.perl)\
$(filter.php)\
$(filter.pov)\
$(filter.prg)\
$(filter.properties)\
$(filter.ps)\
$(filter.python)\
$(filter.ruby)\
$(filter.sql)\
$(filter.specman)\
$(filter.tcl)\
$(filter.tex)\
$(filter.text)\
$(filter.vb)\
$(filter.web)\
$(filter.yaml)\
$(filter.verilog)\
$(filter.vhdl)

# Give symbolic names to the set of fonts used in the standard styles.
font.base=font:!Sans Serif,size:12
font.small=font:!Sans Serif,size:13
font.comment=font:!Sans Serif,size:13
font.code.comment.box=$(font.comment)
font.code.comment.line=$(font.comment)
font.code.comment.doc=$(font.comment)
font.text=font:!Bitstream Charter,size:12
font.text.comment=font:!Bitstream Vera Sans,size:13
font.embedded.base=font:!Bitstream Vera Sans,size:13
font.embedded.comment=font:!Serif,size:13
font.monospace=font:!Bitstream Vera Sans Mono,size:13,bold
font.vbs=font:!Bitstream Vera Sans Mono,size:13
font.js=$(font.comment)
font.perl = font.monospace

# Old GTK+ font settings are faster but not antialiased
	#~ font.base=font:lucidatypewriter,size:12
	#~ font.small=font:lucidatypewriter,size:10
	#~ font.comment=font:new century schoolbook,size:12
	#~ font.code.comment.box=$(font.comment)
	#~ font.code.comment.line=$(font.comment)
	#~ font.code.comment.doc=$(font.comment)
	#~ font.text=font:times,size:14
	#~ font.text.comment=font:lucidatypewriter,size:10
	#~ font.embedded.base=font:lucidatypewriter,size:12
	#~ font.embedded.comment=font:lucidatypewriter,size:12
	#~ font.monospace=font:courier,size:12
	#~ font.vbs=font:new century schoolbook,size:12

# Give symbolic names to the set of colours used in the standard styles.

colour.code.comment.box=fore:#6befa0

colour.code.comment.line=fore:#3F705F

colour.code.comment.doc=fore:#3F705F

colour.text.comment=fore:#0000FF,back:#D0D0F0

colour.other.comment=fore:#0f668F,

colour.embedded.comment=fore:#332288,back:#DDc0f0

colour.embedded.js=back:#F0F0FF

colour.notused=back:#0000FF

colour.number=fore:#00FEA7

colour.keyword=fore:#37A7F4

colour.string=fore:#77AA7E7

colour.char=fore:#57A7F7

colour.operator=fore:#7755FF

colour.preproc=fore:#078F44

colour.error=fore:#FFFF00,back:#EE0577

# Global default styles for all languages

# Default
style.*.32=fore:#00ccee,back:#000032.$(font.base)

# Line number
style.*.33=fore:#009988,back:#000017,$(font.base)

# Brace highlight
style.*.34=fore:#00FF00,bold

# Brace incomplete highlight
style.*.35=fore:#FF4407,bold

# Control characters
style.*.36=fore:#FFFF17,back:#000000,bold

# Indentation guides
style.*.37=fore:#550088,back:#000000

# determine file type from #!shebang :)

shbang.command=1

# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.
menu.language=\
#FreeBasic|bas||\
Pe&rl|pl|Shift+F12|\
Text|txt|Shift+F11|\
#Ada|ads||\
Apache Confi&g|conf||\
Assembler|asm||\
#ASN.1|asn1||\
#Avenue|ave||\
#Baan|bc||\
&Batch|bat||\
#Bullant|ant||\
&C / C++|c||\
C&#|cs||\
#Csound|orc||\
CSS|css||\
&Difference|diff||\
#&Eiffel|e||\
#Erlang|erl||\
&Errorlist|err||\
#FlagShip|prg||\
#&Fortran|f90||\
H&ypertext|html|F12|\
#&InnoSetup|iss||\
&Java|java||\
Java&Script|js||\
#&Kix|kix||\
TeX|tex||\
#Lisp|lisp||\
#Lot|lot||\
#Lout|lt||\
#Lu&a|lua||\
#Matlab|m.matlab||\
&Makefile|mak|Ctrl+Shift+F11|\
#MetaPost|mp||\
#MMIXAL|mms||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
#Objective Caml|ml||\
#Octave|m.octave||\
#Opal|impl||\
#Pascal|pas||\
#P&HP|php||\
#P&LSQL|spec||\
&Properties|properties||\
#P&ostScript|ps||\
#P&OV-Ray SDL|pov||\
#Pytho&n|py||\
#Reso&urce|rc||\
#Ruby|rb||\
Shell|sh||\
S&QL|sql||\
#Specman|e||\
#&TCL|tcl||\
#&VB|vb||\
#VBScr&ipt|vbs||\
#Verilog|v||\
#VHDL|vhd||\
&XML|xml||\
#YAML|yaml||

# User defined key commands
user.shortcuts=\
Ctrl+Shift+V|IDM_PASTEANDDOWN|\
Ctrl+PageUp|IDM_PREVFILE|\
Ctrl+PageDown|IDM_NEXTFILE|

KeypadPlus|IDM_EXPAND|\
#KeypadMinus|IDM_BLOCK_COMMENT|

# Import all the language specific properties files
#import ada
import asm
#import asn1
#import au3
#import ave
#import baan
#import freebasic
#import blitzbasic
#import bullant
#import caml
import conf
import cpp
#import csound
import css
#import eiffel
#import erlang
#import escript
#import flagship
#import forth
#import fortran
import html
#import inno
#import kix
#import lisp
#import lot
#import lout
import lua
#import matlab
#import metapost
#import mmixal
#import nncrontab
#import nsis
#import opal
import others
#import pascal
import perl
#import pov
import ps
#import purebasic
#import python
#import rebol
import ruby
#import scriptol
#import smalltalk
#import spice
import sql
#import specman
#import tcl
import tex
#import vb
#import yaml
#import verilog
#import vhdl


### XXX: fix perl rules!

# Define SciTE settings for Perl and Bash files.

file.patterns.bash=*.sh;*.bsh;configure

shbang.perl=pl
shbang.sh=sh

filter.perl=Perl (pl pm)|$(file.patterns.perl)|
filter.bash=Bash (sh bsh)|$(file.patterns.bash)|

lexer.$(file.patterns.perl)=perl
lexer.$(file.patterns.bash)=bash

keywords.$(file.patterns.perl)=\
NULL __FILE__ __LINE__ __PACKAGE__ __DATA__ __END__ AUTOLOAD \
BEGIN CORE DESTROY END EQ GE GT INIT LE LT NE CHECK abs accept \
alarm and atan2 bind binmode bless caller chdir chmod chomp chop \
chown chr chroot close closedir cmp connect continue cos crypt \
dbmclose dbmopen defined delete die do dump each else elsif endgrent \
endhostent endnetent endprotoent endpwent endservent eof eq eval \
exec exists exit exp fcntl fileno flock for foreach fork format \
formline ge getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname \
gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername \
getpgrp getppid getpriority getprotobyname getprotobynumber getprotoent \
getpwent getpwnam getpwuid getservbyname getservbyport getservent \
getsockname getsockopt glob gmtime goto grep gt hex if index \
int ioctl join keys kill last lc lcfirst le length link listen \
local localtime lock log lstat lt map mkdir msgctl msgget msgrcv \
msgsnd my ne next no not oct open opendir or ord our pack package \
pipe pop pos print printf prototype push quotemeta qu \
rand read readdir readline readlink readpipe recv redo \
ref rename require reset return reverse rewinddir rindex rmdir \
scalar seek seekdir select semctl semget semop send setgrent \
sethostent setnetent setpgrp setpriority setprotoent setpwent \
setservent setsockopt shift shmctl shmget shmread shmwrite shutdown \
sin sleep socket socketpair sort splice split sprintf sqrt srand \
stat study sub substr symlink syscall sysopen sysread sysseek \
system syswrite tell telldir tie tied time times truncate \
uc ucfirst umask undef unless unlink unpack unshift untie until \
use utime values vec wait waitpid wantarray warn while write \
xor

word.characters.$(file.patterns.perl)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.perl=#~
block.start.$(file.patterns.perl)=10 {
block.end.$(file.patterns.perl)=10 }

colour.perl.heredoc=$(colour.embedded.comment)

fold.perl.package=1
fold.perl.pod=1

# generic keywords
bash_keywords1=alias \
ar asa awk banner basename bash bc bdiff break \
bunzip2 bzip2 cal calendar case cat cc cd chmod cksum \
clear cmp col comm compress continue cp cpio crypt \
csplit ctags cut date dc dd declare deroff dev df diff diff3 \
dircmp dirname do done du echo ed egrep elif else env \
esac eval ex exec exit expand export expr false fc \
fgrep fi file find fmt fold for function functions \
getconf getopt getopts grep gres hash head help \
history iconv id if in integer jobs join kill local lc \
let line ln logname look ls m4 mail mailx make \
man mkdir more mt mv newgrp nl nm nohup ntps od \
pack paste patch pathchk pax pcat perl pg pr print \
printf ps pwd read readonly red return rev rm rmdir \
sed select set sh shift size sleep sort spell \
split start stop strings strip stty sum suspend \
sync tail tar tee test then time times touch tr \
trap true tsort tty type typeset ulimit umask unalias \
uname uncompress unexpand uniq unpack unset until \
uudecode uuencode vi vim vpax wait wc whence which \
while who wpaste wstart xargs zcat

# additional keywords from coreutils
bash_keywords2=chgrp chown chroot dir dircolors \
factor groups hostid install link md5sum mkfifo \
mknod nice pinky printenv ptx readlink seq \
sha1sum shred stat su tac unlink users vdir whoami yes

keywords.$(file.patterns.bash)=$(bash_keywords1) $(bash_keywords2)

word.characters.$(file.patterns.bash)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.bash=#~

colour.bash.heredoc=$(colour.embedded.comment)




#[perl]############################################################################


# Perl styles
# The perl styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Perl lexer - not because this is a good way to display Perl.

style.perl.32=$(font.monospace)

# White space
style.perl.0=fore:#808080,$(font.base)

# Error
style.perl.1=$(colour.error)

# Comment
style.perl.2=$(colour.code.comment.box),$(font.code.comment.box)

# POD: = at beginning of line
style.perl.3=fore:#0066aa,back:#000035,$(font.text),eolfilled

# Number
style.perl.4=$(colour.number)

# Keyword
style.perl.5=$(colour.keyword),bold

# Double quoted string
style.perl.6=$(colour.string),$(font.monospace)

# Single quoted string
style.perl.7=$(colour.char),$(font.monospace)

# Symbols / Punctuation. Currently not used by LexPerl.
style.perl.8=$(colour.notused),$(font.notused)

# Preprocessor. Currently not used by LexPerl.
style.perl.9=$(colour.notused),$(font.notused)

# Operators
style.perl.10=$(colour.operator),bold

# Identifiers (functions, etc.)
style.perl.11=fore:#16a7d4

# Scalars: $var
style.perl.12=fore:#00eeff,back:#000042

# Array: @var
style.perl.13=fore:#00ffee,back:#001300

# Hash: %var
style.perl.14=fore:#A713ff,back:#130013

# Symbol table: *var
style.perl.15=fore:#aaaaff,back:#000013,bold

# Regex: /re/ or m{re}
style.perl.17=fore:#22ffaa,back:#000044

# Substitution: s/re/ore/
style.perl.18=fore:#aaf877,back:#000011,bold

# Long Quote (qq, qr, qw, qx) -- obsolete: replaced by qq, qx, qr, qw
style.perl.19=fore:#E700F7,back:#000013

# Back Ticks
style.perl.20=fore:#FFFF00,back:#000013

# Data Section: __DATA__ or __END__ at beginning of line
style.perl.21=fore:#6633ff,back:#1a075f,eolfilled

# Here-doc (delimiter)
style.perl.22=fore:#08aaff,back:#000055

# Here-doc (single quoted, q)
style.perl.23=fore:#08d842,back:#000055,eolfilled,notbold

# Here-doc (double quoted, qq)
style.perl.24=fore:#08w877,back:#000055,eolfilled,bold

# Here-doc (back ticks, qx)
style.perl.25=fore:#e8d8ff,back:#000055,eolfilled,italics

# Single quoted string, generic
style.perl.26=fore:#e8d8ff,$(font.monospace),notbold

# qq = Double quoted string
style.perl.27=$(style.perl.6)

# qx = Back ticks
style.perl.28=$(style.perl.20)

# qr = Regex
style.perl.29=$(style.perl.17)

# qw = Array
style.perl.30=$(style.perl.13)

# POD: verbatim paragraphs
style.perl.31=fore:#0040a0,back:#0000C0,$(font.monospace),eolfilled

# Braces are only matched in operator style
braces.perl.style=10

#[perl]############################################################################








## Bash styles ##

# The bash styles are set to lots of different foreground and background colours as an
# aid to debugging SciTE's Bash lexer - not because this is a good way to display Bash.
style.bash.32=
# White space
style.bash.0=fore:#808080,$(font.base)
# Error
style.bash.1=$(colour.error)
# Comment
style.bash.2=$(colour.code.comment.box),$(font.code.comment.box)

# Number
style.bash.3=$(colour.number)

# Keyword
style.bash.4=$(colour.keyword),bold

# Double quoted string
style.bash.5=$(colour.string),$(font.monospace)

# Single quoted string
style.bash.6=$(colour.char),$(font.monospace)

# Operators
style.bash.7=$(colour.operator),bold

# Identifiers (functions, etc.)
style.bash.8=fore:#00ff00

# Scalars: $var
style.bash.9=fore:#00ffaa,back:#000013

# Parameter expansion: ${var}
style.bash.10=fore:#37eeff,back:#000013

# Back Ticks
style.bash.11=fore:#FFFF00,back:#000013

# Here-doc (delimiter)
style.bash.12=fore:#000000,back:#000013

# Here-doc (single quoted, q)
style.bash.13=fore:#e8d8ff,back:#000055,eolfilled,notbold

# Braces are only matched in operator style
braces.bash.style=7

command.go.$(file.patterns.perl)=perl -w $(FileNameExt)

command.compile.$(file.patterns.perl)=perl -c -w $(FileNameExt)

command.name.4.$(file.patterns.perl)=Lint
command.4.$(file.patterns.perl)=perl -MO=Lint,all $(FileNameExt)

command.name.1.$(file.patterns.perl)=Check Syntax
command.1.$(file.patterns.perl)=perl -cw $(FileNameExt)

command.name.2.$(file.patterns.perl)=Code Profiler
command.2.$(file.patterns.perl)=perl -d:DProf $(FileNameExt)

command.name.3.$(file.patterns.perl)=Profiler Parser
command.3.$(file.patterns.perl)=C:\Perl\bin\dprofpp.bat $(FileDir)\tmon.out



# Define SciTE settings for HTML files.

# vxml added by lseredi

# tpl is X and Mail specific
file.patterns.web=*.html;*.htm;*.asp;*.shtml;*.htd;*.jsp
file.patterns.php=*.php3;*.phtml;*.php
file.patterns.html=$(file.patterns.web);$(file.patterns.php);*.htt;*.cfm;*.tpl;*.dtd;*.hta
file.patterns.vxml=*.vxml
file.patterns.xml=*.xml;*.xsl;*.svg;*.xul;*.xsd;*.dtd;*.xslt;*.axl;*.xrc;*.rdf
file.patterns.docbook=*.docbook

lexer.$(file.patterns.html)=hypertext
lexer.$(file.patterns.vxml)=hypertext
lexer.$(file.patterns.xml)=xml
lexer.$(file.patterns.docbook)=hypertext

filter.web=Web (html htm asp shtml css xml docbook jsp)|$(file.patterns.web);*.css;*.xml;*.docbook|
filter.php=PHP (php php3 phtml)|$(file.patterns.php)|

fold.html=1
#fold.html.preprocessor=0

#Default Language=1 for JS, 2 for VBS.
#asp.default.language=2
#html.tags.case.sensitive=1

#xml.auto.close.tags=1

# All hypertext elements and attributes must be listed in lower case
hypertext.elements=\
a abbr acronym address applet area b base basefont \
bdo big blockquote body br button caption center \
cite code col colgroup dd del dfn dir div dl dt em \
fieldset font form frame frameset h1 h2 h3 h4 h5 h6 \
head hr html i iframe img input ins isindex kbd label \
legend li link map menu meta noframes noscript \
object ol optgroup option p param pre q s samp \
script select small span strike strong style sub sup \
table tbody td textarea tfoot th thead title tr tt u ul \
var xml xmlns

hypertext.attributes=\
abbr accept-charset accept accesskey action align alink \
alt archive axis background bgcolor border \
cellpadding cellspacing char charoff charset checked cite \
class classid clear codebase codetype color cols colspan \
compact content coords \
data datafld dataformatas datapagesize datasrc datetime \
declare defer dir disabled enctype event \
face for frame frameborder \
headers height href hreflang hspace http-equiv \
id ismap label lang language leftmargin link longdesc \
marginwidth marginheight maxlength media method multiple \
name nohref noresize noshade nowrap \
object onblur onchange onclick ondblclick onfocus \
onkeydown onkeypress onkeyup onload onmousedown \
onmousemove onmouseover onmouseout onmouseup \
onreset onselect onsubmit onunload \
profile prompt readonly rel rev rows rowspan rules \
scheme scope selected shape size span src standby start style \
summary tabindex target text title topmargin type usemap \
valign value valuetype version vlink vspace width \
text password checkbox radio submit reset \
file hidden image

# As defined in "Web Applications 1.0" Working Draft
# http://www.whatwg.org/specs/web-apps/current-work/
html5.elements=\
article aside calendar canvas card command commandset datagrid datatree \
footer gauge header m menubar menulabel nav progress section switch tabbox

html5.attributes=\
active command contenteditable ping

keywordclass.hypertext=\
$(hypertext.elements) $(hypertext.attributes) $(html5.elements) $(html5.attributes) public !doctype

vxml.elements=\
assign audio block break catch choice clear disconnect else elseif \
emphasis enumerate error exit field filled form goto grammar help \
if initial link log menu meta noinput nomatch object option p paragraph \
param phoneme prompt property prosody record reprompt return s say-as \
script sentence subdialog submit throw transfer value var voice vxml

vxml.attributes=\
accept age alphabet anchor application base beep bridge category charset \
classid cond connecttimeout content contour count dest destexpr dtmf dtmfterm \
duration enctype event eventexpr expr expritem fetchtimeout finalsilence \
gender http-equiv id level maxage maxstale maxtime message messageexpr \
method mime modal mode name namelist next nextitem ph pitch range rate \
scope size sizeexpr skiplist slot src srcexpr sub time timeexpr timeout \
transferaudio type value variant version volume xml:lang

keywordclass.vxml=\
$(vxml.elements) $(vxml.attributes) public !doctype

# List from http://www.php.net/manual/en/reserved.php (updated for PHP 5)
# For a list with functions http://www.scintilla.org/SciTEExtras.html
# All words should be lower case to ensure case insensitivity when comparing
keywordclass.php=\
and array as bool boolean break case cfunction class const continue declare \
default die directory do double echo else elseif empty enddeclare endfor \
endforeach endif endswitch endwhile eval exit extends false float for \
foreach function global if include include_once int integer isset list new \
null object old_function or parent print real require require_once resource \
return static stdclass string switch true unset use var while xor \
abstract catch clone exception final implements interface php_user_filter \
private protected public this throw try \
__class__ __file__ __function__ __line__ __method__ __sleep __wakeup

# Override keywordclass.php with another file if present
import phpfunctions

keywords.$(file.patterns.html)=$(keywordclass.hypertext)
# JavaScript keywords are possible inside embedded Javascript
keywords2.$(file.patterns.html)=$(keywordclass.javascript)
# VBScript keywords are possible inside embedded VBScript
keywords3.$(file.patterns.html)=$(keywordclass.vb)
# Python keywords are possible inside embedded Python
keywords4.$(file.patterns.html)=$(keywordclass.python)
# PHP keywords are possible inside embedded PHP
keywords5.$(file.patterns.html)=$(keywordclass.php)
# SGML / DTD keywords
keywords6.$(file.patterns.html)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

# START DocBook
docbook.elements42=\
abbrev abstract accel ackno acronym action address affiliation alt anchor \
answer appendix appendixinfo application area areaset areaspec arg article \
articleinfo artpagenums attribution audiodata audioobject author authorblurb \
authorgroup authorinitials beginpage bibliocoverage bibliodiv biblioentry \
bibliography bibliographyinfo biblioid bibliomisc bibliomixed bibliomset \
bibliorelation biblioset bibliosource blockinfo blockquote book bookinfo \
bridgehead callout calloutlist caption caution chapter chapterinfo citation \
citebiblioid citerefentry citetitle city classname classsynopsis classsynopsisinfo \
cmdsynopsis co collab collabname colophon colspec command computeroutput \
confdates confgroup confnum confsponsor conftitle constant constraint \
constraintdef constructorsynopsis contractnum contractsponsor contrib \
copyright coref corpauthor corpname country database date dedication \
destructorsynopsis edition editor email emphasis entry entrytbl envar \
epigraph equation errorcode errorname errortext errortype example \
exceptionname fax fieldsynopsis figure filename firstname firstterm \
footnote footnoteref foreignphrase formalpara funcdef funcparams \
funcprototype funcsynopsis funcsynopsisinfo function glossary glossaryinfo \
glossdef glossdiv glossentry glosslist glosssee glossseealso glossterm \
graphic graphicco group guibutton guiicon guilabel guimenu guimenuitem \
guisubmenu hardware highlights holder honorific htm imagedata imageobject \
imageobjectco important index indexdiv indexentry indexinfo indexterm \
informalequation informalexample informalfigure informaltable initializer \
inlineequation inlinegraphic inlinemediaobject interface interfacename \
invpartnumber isbn issn issuenum itemizedlist itermset jobtitle keycap \
keycode keycombo keysym keyword keywordset label legalnotice lhs lineage \
lineannotation link listitem iteral literallayout lot lotentry manvolnum \
markup medialabel mediaobject mediaobjectco member menuchoice methodname \
methodparam methodsynopsis mm modespec modifier ousebutton msg msgaud \
msgentry msgexplan msginfo msglevel msgmain msgorig msgrel msgset msgsub \
msgtext nonterminal note objectinfo olink ooclass ooexception oointerface \
option optional orderedlist orgdiv orgname otheraddr othercredit othername \
pagenums para paramdef parameter part partinfo partintro personblurb \
personname phone phrase pob postcode preface prefaceinfo primary primaryie \
printhistory procedure production productionrecap productionset productname \
productnumber programlisting programlistingco prompt property pubdate publisher \
publishername pubsnumber qandadiv qandaentry qandaset question quote refclass \
refdescriptor refentry refentryinfo refentrytitle reference referenceinfo \
refmeta refmiscinfo refname refnamediv refpurpose refsect1 refsect1info refsect2 \
refsect2info refsect3 refsect3info refsection refsectioninfo refsynopsisdiv \
refsynopsisdivinfo releaseinfo remark replaceable returnvalue revdescription \
revhistory revision revnumber revremark rhs row sbr screen screenco screeninfo \
screenshot secondary secondaryie sect1 sect1info sect2 sect2info sect3 sect3info \
sect4 sect4info sect5 sect5info section sectioninfo see seealso seealsoie \
seeie seg seglistitem segmentedlist segtitle seriesvolnums set setindex \
setindexinfo setinfo sgmltag shortaffil shortcut sidebar sidebarinfo simpara \
simplelist simplemsgentry simplesect spanspec state step street structfield \
structname subject subjectset subjectterm subscript substeps subtitle \
superscript surname sv symbol synopfragment synopfragmentref synopsis \
systemitem table tbody term tertiary tertiaryie textdata textobject tfoot \
tgroup thead tip title titleabbrev toc tocback tocchap tocentry tocfront \
toclevel1 toclevel2 toclevel3 toclevel4 toclevel5 tocpart token trademark \
type ulink userinput varargs variablelist varlistentry varname videodata \
videoobject void volumenum warning wordasword xref year

docbook.attributes=\
arch condition conformance id lang os remap role revision revisionflag security \
userlevel vendor xreflabel \
status label endterm linkend space width

keywordclass.docbook=\
$(docbook.elements42) $(docbook.attributes)

keywords.$(file.patterns.docbook)=$(keywordclass.docbook)
keywords6.$(file.patterns.docbook)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION
# END DocBook

word.characters.$(file.patterns.html)=$(chars.alpha)$(chars.numeric)_-
comment.stream.start.hypertext=<!--
comment.stream.end.hypertext=-->
comment.block.hypertext=//~

# No keyword for xml, as it accepts any keyword
keywords.$(file.patterns.xml)=
# SGML / DTD keywords
keywords6.$(file.patterns.xml)=ELEMENT DOCTYPE ATTLIST ENTITY NOTATION

word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-

keywords.$(file.patterns.vxml)=$(keywordclass.vxml)
keywords2.$(file.patterns.vxml)=$(keywordclass.javascript)



word.characters.$(file.patterns.vxml)=$(chars.alpha)$(chars.numeric)_-

# HTML and XML share lexing code so use the same style numbers
# Hypertext Markup Language

# Text
style.hypertext.0=fore:#aaddff,$(font.text)

# Tags
style.hypertext.1=fore:#8800aa

# Unknown Tags
style.hypertext.2=fore:#FF0000

# Attributes
style.hypertext.3=fore:#008080

# Unknown Attributes
style.hypertext.4=fore:#FF0000
# Numbers
style.hypertext.5=$(colour.number)

# Double quoted strings
style.hypertext.6=$(colour.string)

# Single quoted strings
style.hypertext.7=$(colour.string)

# Other inside tag
style.hypertext.8=fore:#800080

# Comment
style.hypertext.9=fore:#808000,$(font.text.comment)

# Entities
style.hypertext.10=fore:#800080,$(font.text)
# XML style tag ends '/>'
style.hypertext.11=fore:#4411cc
# XML identifier start '<?'
style.hypertext.12=fore:#8800FF
# XML identifier end '?>'
style.hypertext.13=fore:#8800FF
#  SCRIPT
style.hypertext.14=fore:#4411cc
# ASP <% ... %>
style.hypertext.15=back:#000000
# ASP <% ... %>
style.hypertext.16=back:#000028
# CDATA
style.hypertext.17=back:#000028
# PHP
style.hypertext.18=fore:#8800ff,back:#FFEFBF
# Unquoted values
style.hypertext.19=fore:#FF00FF,back:#FFEFFF
# JSP Comment <%-- ... --%>
style.hypertext.20=fore:#8800ff,back:#00D0D0
# SGML tags <! ... >
style.hypertext.21=fore:#4411cc,back:#110042
# SGML command
style.hypertext.22=fore:#4411cc,back:#110042,bold
# SGML 1st param
style.hypertext.23=fore:#006600,back:#110042
# SGML double string
style.hypertext.24=fore:#800000,back:#110042
# SGML single string
style.hypertext.25=fore:#993300,back:#110042
# SGML error
style.hypertext.26=fore:#800000,back:#FF6666
# SGML special (#xxxx type)
style.hypertext.27=fore:#3366FF,back:#110042
# SGML entity
style.hypertext.28=fore:#333333,back:#110042
# SGML comment
style.hypertext.29=fore:#808000,back:#110042
# SGML block
style.hypertext.31=fore:#000066,back:#CCCCE0
# Some reasonable background colours found in the default Windows palette
# Off White #FFFBF0    Light green #C0DCC0    Light Blue #A6CAF0
# Matched Operators
style.hypertext.34=fore:#8800ff,notbold,$(font.text)
style.hypertext.35=fore:#FF0000,notbold,$(font.text)

# Embedded Javascript
fontcolour.js=$(colour.embedded.js),$(font.js)
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.40=fore:#7F7F00
# JS Default
style.hypertext.41=fore:#8800ff,bold,$(fontcolour.js),eolfilled
# JS Comment
style.hypertext.42=$(colour.code.comment.box),$(fontcolour.js),eolfilled
# JS Line Comment
style.hypertext.43=$(colour.code.comment.line),$(fontcolour.js)
# JS Doc comment
style.hypertext.44=$(colour.code.comment.doc),bold,$(fontcolour.js),eolfilled
# JS Number
style.hypertext.45=$(colour.number),$(fontcolour.js)
# JS Word
style.hypertext.46=fore:#8800ff,$(fontcolour.js)
# JS Keyword
style.hypertext.47=$(colour.keyword),bold,$(fontcolour.js)
# JS Double quoted string
style.hypertext.48=$(colour.string),$(fontcolour.js)
# JS Single quoted string
style.hypertext.49=$(colour.string),$(fontcolour.js)
# JS Symbols
style.hypertext.50=$(colour.operator),bold,$(fontcolour.js)
# JavaScript EOL
style.hypertext.51=back:#BFBBB0,eolfilled
# JavaScript RegEx
style.hypertext.52=back:#FFBBB0

# ASP Javascript
# JS Start - allows eol filled background to not start on same line as SCRIPT tag
style.hypertext.55=fore:#7F7F00
# JS Default
style.hypertext.56=fore:#8800ff,bold,$(font.js),back:#000000,eolfilled
# JS Comment
style.hypertext.57=fore:#007F00,$(font.js),back:#000000,eolfilled
# JS Line Comment
style.hypertext.58=fore:#007F00,$(font.js),back:#000000
# JS Doc comment
style.hypertext.59=fore:#7F7F7F,bold,$(font.js),back:#000000,eolfilled
# JS Number
style.hypertext.60=fore:#007F7F,$(font.js),back:#000000
# JS Word
style.hypertext.61=fore:#8800ff,$(font.js),back:#000000
# JS Keyword
style.hypertext.62=fore:#00007F,bold,$(font.js),back:#000000
# JS Double quoted string
style.hypertext.63=fore:#e8d8ff,$(font.js),back:#000000
# JS Single quoted string
style.hypertext.64=fore:#e8d8ff,$(font.js),back:#000000
# JS Symbols
style.hypertext.65=fore:#8800ff,bold,$(font.js),back:#000000
# JavaScript EOL
style.hypertext.66=back:#BFBBB0,eolfilled
# JavaScript RegEx
style.hypertext.67=back:#FFBBB0

# Embedded VBS
# Start
style.hypertext.70=
# Default
style.hypertext.71=$(font.vbs),back:#110042,fore:#8800ff,eolfilled
# Comment
style.hypertext.72=$(font.comment),back:#110042,fore:#008000,eolfilled
# Number
style.hypertext.73=$(font.vbs),back:#110042,fore:#008080,eolfilled
# KeyWord
style.hypertext.74=$(font.vbs),back:#110042,fore:#4411cc,bold,eolfilled
# String
style.hypertext.75=$(font.vbs),back:#110042,fore:#800080,eolfilled
# Identifier
style.hypertext.76=$(font.vbs),back:#110042,fore:#4411cc,eolfilled
# Unterminated string
style.hypertext.77=$(font.vbs),back:#7F7FFF,fore:#4411cc,eolfilled

# ASP VBS
# Start
style.hypertext.80=
# Default
style.hypertext.81=$(font.vbs),back:#CFCFEF,fore:#8800ff,eolfilled
# Comment
style.hypertext.82=$(font.comment),back:#CFCFEF,fore:#008000,eolfilled
# Number
style.hypertext.83=$(font.vbs),back:#CFCFEF,fore:#008080,eolfilled
# KeyWord
style.hypertext.84=$(font.vbs),back:#CFCFEF,fore:#4411cc,bold,eolfilled
# String
style.hypertext.85=$(font.vbs),back:#CFCFEF,fore:#800080,eolfilled
# Identifier
style.hypertext.86=$(font.vbs),back:#CFCFEF,fore:#4411cc,eolfilled
# Unterminated string
style.hypertext.87=$(font.vbs),back:#7F7FBF,fore:#4411cc,eolfilled

# Embedded Python
style.hypertext.90=fore:#808080
style.hypertext.91=fore:#808080,back:#EFFFEF,eolfilled
# Comment
style.hypertext.92=fore:#007F00,$(font.comment),back:#EFFFEF,eolfilled
# Number
style.hypertext.93=fore:#007F7F,back:#EFFFEF,eolfilled
# String
style.hypertext.94=fore:#e8d8ff,$(font.monospace),back:#EFFFEF,eolfilled
# Single quoted string
style.hypertext.95=fore:#e8d8ff,$(font.monospace),back:#EFFFEF,eolfilled
# Keyword
style.hypertext.96=fore:#00007F,bold,back:#EFFFEF,eolfilled
# Triple quotes
style.hypertext.97=fore:#7F0000,back:#EFFFEF,eolfilled
# Triple double quotes
style.hypertext.98=fore:#7F0000,back:#EFFFEF,eolfilled
# Class name definition
style.hypertext.99=fore:#8800ff,bold,back:#EFFFEF,eolfilled
# Function or method name definition
style.hypertext.100=fore:#007F7F,bold,back:#EFFFEF,eolfilled
# Operators
style.hypertext.101=bold,back:#EFFFEF,eolfilled
# Identifiers
style.hypertext.102=back:#EFFFEF,eolfilled

# PHP complex variable
style.hypertext.104=fore:#007F00,italics,back:#FFF8F8

# ASP Python
style.hypertext.105=fore:#808080
style.hypertext.106=fore:#808080,back:#CFEFCF,eolfilled
# Comment
style.hypertext.107=fore:#007F00,$(font.comment),back:#CFEFCF,eolfilled
# Number
style.hypertext.108=fore:#007F7F,back:#CFEFCF,eolfilled
# String
style.hypertext.109=fore:#78d8ff,$(font.monospace),back:#CFEFCF,eolfilled
# Single quoted string
style.hypertext.110=fore:#e8d8ff,$(font.monospace),back:#CFEFCF,eolfilled
# Keyword
style.hypertext.111=fore:#00007F,bold,back:#CFEFCF,eolfilled
# Triple quotes
style.hypertext.112=fore:#7F0000,back:#CFEFCF,eolfilled
# Triple double quotes
style.hypertext.113=fore:#7F0000,back:#CFEFCF,eolfilled
# Class name definition
style.hypertext.114=fore:#8800ff,bold,back:#CFEFCF,eolfilled
# Function or method name definition
style.hypertext.115=fore:#007F7F,bold,back:#CFEFCF,eolfilled
# Operators
style.hypertext.116=bold,back:#CFEFCF,eolfilled
# Identifiers
style.hypertext.117=back:#CFEFCF,eolfilled

# PHP
# Default
style.hypertext.118=fore:#000033,back:#FFF8F8,eolfilled
# Double quoted String
style.hypertext.119=fore:#007F00,back:#FFF8F8
# Single quoted string
style.hypertext.120=fore:#009F00,back:#FFF8F8
# Keyword
style.hypertext.121=fore:#e8d8ff,italics,back:#FFF8F8
# Number
style.hypertext.122=fore:#CC9900,back:#FFF8F8
# Variable
style.hypertext.123=fore:#00007F,italics,back:#FFF8F8
# Comment
style.hypertext.124=fore:#999999,$(font.comment),back:#FFF8F8
# One line comment
style.hypertext.125=fore:#666666,italics,$(font.comment),back:#FFF8F8
# PHP variable in double quoted string
style.hypertext.126=fore:#007F00,italics,back:#FFF8F8
# PHP operator
style.hypertext.127=fore:#8800ff,back:#FFF8F8

# XML: eXtensible Markup Language
# For XML, there is no list of known tags or attributes so all are coloured known

# Default
style.xml.0=fore:#8800ff,$(font.text)
# Tags
style.xml.1=fore:#4411cc
# Unknown Tags
style.xml.2=fore:#4411cc
# Attributes
style.xml.3=fore:#008080
# Unknown Attributes
style.xml.4=fore:#008080
# Numbers
style.xml.5=$(colour.number)
# Double quoted strings
style.xml.6=$(colour.string)
# Single quoted strings
style.xml.7=$(colour.string)
# Other inside tag
style.xml.8=fore:#800080
# Comment
style.xml.9=fore:#808000
# Entities
style.xml.10=fore:#800080,$(font.text)
# XML style tag ends '/>'
style.xml.11=fore:#4411cc
# XML identifier start '<?'
style.xml.12=fore:#800080,bold
# XML identifier end '?>'
style.xml.13=fore:#800080,bold
# CDATA
style.xml.17=fore:#800000,back:#FFF0F0,$(font.text),eolfilled
# Question
style.xml.18=fore:#800000
# Unquoted Value
style.xml.19=fore:#608060
# SGML tags <! ... >
style.xml.21=fore:#4411cc,back:#110042
# SGML command
style.xml.22=fore:#4411cc,back:#110042,bold
# SGML 1st param
style.xml.23=fore:#006600,back:#110042
# SGML double string
style.xml.24=fore:#800000,back:#110042
# SGML single string
style.xml.25=fore:#993300,back:#110042
# SGML error
style.xml.26=fore:#800000,back:#FF6666
# SGML special (#xxxx type)
style.xml.27=fore:#3366FF,back:#110042
# SGML entity
style.xml.28=fore:#333333,back:#110042
# SGML comment
style.xml.29=fore:#808000,back:#110042
# SGML block
style.xml.31=fore:#000066,back:#CCCCE0
# No brace matching in XML
braces.xml.style=31

if PLAT_WIN
	command.go.$(file.patterns.web)="file://$(FilePath)"
	command.go.subsystem.$(file.patterns.web)=2
if PLAT_GTK
	command.go.$(file.patterns.web)=netscape "file://$(FilePath)"

command.go.$(file.patterns.php)=php -f "$(FileNameExt)"
command.compile.$(file.patterns.php)=php -l "$(FileNameExt)"

command.name.9.*=tidy
command.9.*=tidy -m -utf8 -q -i -c -asxhtml -w 80 $(FileNameExt)
command.is.filter.9.*=1
command.9.subsystem.*=1


###


# Define SciTE settings for other simple files.

file.patterns.props=*.properties;*.ini;*.inf;*.reg;*.url;*.cfg;*.cnf;*.aut
file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo
file.patterns.batch=*.bat;*.cmd;*.nt
file.patterns.diff=*.diff;*.patch
file.patterns.make=makefile;Makefile;*.mak;configure*

filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text);make*|
filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|
filter.diff=Difference (diff patch)|$(file.patterns.diff)|

lexer.$(file.patterns.props)=props
lexer.$(file.patterns.batch)=batch
lexer.*.err=errorlist
lexer.$(file.patterns.make)=makefile
lexer.*.iface=makefile
lexer.$(file.patterns.diff)=diff

word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'

colour.other.operator=fore:#B06000

# Properties styles

# Default
style.props.0=

# Comment
style.props.1=fore:#007F7F,$(font.comment)

# Section
style.props.2=$(colour.string),back:#E0F0F0,eolfilled

# Assignment operator
style.props.3=$(colour.other.operator)

# Default value (@)
style.props.4=$(colour.preproc)

# Key
style.props.5=
# Matched Operators
style.props.34=fore:#0000FF,notbold
style.props.35=fore:#FF0000,notbold
comment.block.props=#~
preprocessor.symbol.$(file.patterns.make)=!
preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF
preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF
preprocessor.end.$(file.patterns.make)=ENDIF

# Batch styles

# List from http://www.easydos.com/dosindex.html
# I limit here the commands to those built in command.com, ie. I don't list external Dos commands
# if [no] (test) (command) -- test is EXIST (filename) | (string1)==(string2) | ERRORLEVEL (number)
# for %%(variable) IN (set) DO (command) -- variable is [a-zA-Z] -- eg for %%X in (*.txt) do type %%X
keywordclass.batch=rem set if exist errorlevel for in do \
break call chcp cd chdir choice cls country ctty date del erase dir echo \
exit goto loadfix loadhigh mkdir md move path pause prompt rename ren \
rmdir rd shift time type ver verify vol \
com con lpt nul \
color copy defined else not start
keywords.$(file.patterns.batch)=$(keywordclass.batch)

# Optional list of external commands to highlight in style 5.
# If not set all commands are highlighted in style 5.
#keywords2.$(file.patterns.batch)=append attrib chkdsk comp diskcomp

# Default
style.batch.0=fore:#000000
# Comment (rem or ::)
style.batch.1=fore:#007F00,$(font.comment)
# Keywords
style.batch.2=$(colour.keyword),bold
# Label (line beginning with ':')
style.batch.3=$(colour.string),back:#606060,fore:#FFFF00,eolfilled
# Hide command character ('@')
style.batch.4=$(colour.preproc)
# External commands
style.batch.5=fore:#007090,$(font.monospace),bold
# Variable: %%x (x is almost whatever, except space and %), %n (n in [0-9]), %EnvironmentVar%
style.batch.6=fore:#800080
# Operator: * ? < > |
style.batch.7=fore:#000000

comment.block.batch=REM ~

# Makefile styles

# Default
style.makefile.0=fore:#000000
# Comment: #
style.makefile.1=$(colour.other.comment),$(font.code.comment.box)
# Pre-processor or other comment: !
style.makefile.2=$(colour.preproc)
# Variable: $(x)
style.makefile.3=fore:#000080
# Operator
style.makefile.4=$(colour.other.operator)
# Target
style.makefile.5=fore:#A00000
# Error
style.makefile.9=$(colour.error),eolfilled
# Matched Operators
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

comment.block.makefile=#~

# Error list styles

style.errorlist.32=fore:#B06000,$(font.small)
# Default
style.errorlist.0=fore:#aaaaff
# python Error
style.errorlist.1=fore:#FF0000
# gcc Error
style.errorlist.2=fore:#800080
# Microsoft Error
style.errorlist.3=fore:#808000
# command or return status
style.errorlist.4=fore:#666688
# Borland error and warning messages
style.errorlist.5=fore:#B06000
# perl error and warning messages
style.errorlist.6=fore:#dd4444
# .NET tracebacks
style.errorlist.7=fore:#FF0000
# Lua error and warning messages
style.errorlist.8=fore:#FF0000
# ctags
style.errorlist.9=fore:#FF00FF
# diff changed !
style.errorlist.10=fore:#007F00
# diff addition +
style.errorlist.11=fore:#00007F
# diff deletion -
style.errorlist.12=fore:#007F7F
# diff message ---
style.errorlist.13=fore:#7F0000
# PHP error
style.errorlist.14=fore:#FF0000
# Essential Lahey Fortran 90 error
style.errorlist.15=fore:#FF0000
# Intel Fortran Compiler error
style.errorlist.16=fore:#FF0000
# Intel Fortran Compiler v8.0 error/warning
style.errorlist.17=fore:#FF0000
# Absoft Pro Fortran 90/95 v8.2 error or warning
style.errorlist.18=fore:#FF0000
# HTML Tidy
style.errorlist.19=fore:#FF0000
# Java runtime stack trace
style.errorlist.20=fore:#FF0000
# Ensures that spacing is not affected by line number styles
style.errorlist.33=$(font.small)

# Difference styles

# Default
style.diff.0=fore:#000000
# Comment (part before "diff ..." or "--- ..." and , Only in ..., Binary file...)
style.diff.1=fore:#007F00
# Command (diff ...)
style.diff.2=fore:#7F7F00
# Source file (--- ...) and Destination file (+++ ...)
style.diff.3=fore:#7F0000
# Position setting (@@ ...)
style.diff.4=fore:#e8d8ff
# Line removal (-...)
style.diff.5=fore:#007F7F
# Line addition (+...)
style.diff.6=fore:#00007F

command.build.makefile=make
command.build.*.mak=make


###
  # perltidy
command.name.8.*=perltidy
command.is.filter.8.*=1
command.8.subsystem.*=1
command.8.*=mkdir -p /tmp/perltidy_backup ; cp -av $(FileNameExt) /tmp/perltidy_backup/ ; perltidy -pbp -l=80 -bar -sot -ce -se $(FileNameExt) >/tmp/.tidy.$(FileNameExt) && cat /tmp/.tidy.$(FileNameExt) > $(FileNameExt) && rm /tmp/.tidy.$(FileNameExt)
###



font.base=$(font.monospace)
font.small=$(font.monospace)
font.comment=$(font.monospace)
font.text=$(font.monospace)
font.text.comment=$(font.monospace)
font.embedded.base=$(font.monospace)
font.embedded.comment=$(font.monospace)
font.vbs=$(font.monospace)

autocompleteword.automatic=1
find.replace.advanced=1

save.session=1

