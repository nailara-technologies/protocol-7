
 .:[ nailara local core (routing) agent ]:.

buffer.agent.log_cmd = log.msg

# change priority
[base.renice:-13]

[load_config_file:'defaults']

[load_config_file:'auth.setup.core']

# load command access permission setup
[load_config_file:'agents/core/access']

system.agent.type               =       core
modules.load                    =       auth digest net io.ip io.unix \
                                        core.cmd crypt.C25519
plugins.load                    =       plugin.auth
auth.supported_methods          =       pwd agent unix C25519-TF
# get.route                     =       file node_name.file :target:
get.command                     =       file.get
setup.aliases.source_agent      =       notify.message layout.get_coordinates \
                                        layout.get_geometry root.tear-down \
                                        layout.assign_window system.pid_autokill
setup.aliases.source_agent_sid  =       log.msg

net.auth.timeout     =  13  #  seconds

# loading additional (.json) configuration files from /etc/nailara/import/
modules.pre_load = core.config config.json
[load_modules:<modules.pre_load>]
[init_modules:<modules.pre_load>]
[config.json.import_file:'core.auth_setup_usr.json']
[config.json.import_file:'core.access_cmd.json']

# load and initialize modules
[load_modules:<modules.load>]
#[load_modules:'plugin.auth'] # LLL: doesn't reload right now... fix!
[init_modules] # LLL: fix redundant initializations: modules.pre_load

# loading [authentication] plugins
[load_plugins:<plugins.load>]

# calulated network addr/port
core.local = <nailara.net.int>

# open unix domain socket
[file.make_path:'/tmp/.n/s',0777]
unix.path = [digest.elf.b32:"<core.local.addr>:<core.local.port>"]
unix.sock = [base.open:'unix','in',"/tmp/.n/s/<unix.path>"]

# open tcp/ip socket
tcp_ip.sock = [base.open:'tcp/ip','in',<core.local.addr>,<core.local.port>]

# drop root priviledges
[set_privs:'nailara']

# bind nailara protocol to socket
[base.proto.bind:<unix.sock>,'nailara']
[base.proto.bind:<tcp_ip.sock>,'nailara']

# run agent
[event.loop]
