
  .:[ mpv video player agent ]:.

buffer.system.log_cmd = log.msg

[set_privs:'nailara']

[load_config_file:'defaults']

# mpv.rescale_path = /alternative/video/target/path

access.cmd.usr.core = help ping get_subname reload verify_instance \
                      add_file align-x align-y clear_playlist cycle_pause \
                      mpv_pid next pause playlist_update prev quit \
                      reload_playlist resume seek show_playlist stop zoom \
                      get_config_names get_config dump

modules.load = auth net io.ip io.unix config.json digest mpv
[load_modules:<modules.load>]
[init_modules]

[net.connect_to_core:'tcp/ip']

[base.x11.get_mode]
[base.x11.get_display]
mpv.geometry = [base.x11.get_geometry]
mpv.coordinates = [base.x11.get_coordinates]

mpv.fade_in    = 1   # fade in mpv player at startup using compositing (xprop)
mpv.auto_fs    = 1   # start in fullscreen mode in case no geometry was received
mpv.autoresize = 1   # autoresize player window to get rid of black borders

mpv.autorescale = 0  # rescale video automatically in the background (ffmpeg)

mpv.rescale_max_width = 800 # limit ffmpeg reencoding video size

# mpv.vo_backend = vaapi # [vdpau|vaapi|x11|sdl...] ( see mpv -vo help )
mpv.hwdec = auto

mpv.fade_start_geom = 1x1--0--0
#mpv.fade_start_geom = 31x31--0--0 # use this if above geometry fails at startup

mpv.params = --idle --force-window --keep-open=always --loop=inf \
              --no-config --no-audio --no-window-dragging --no-border \
              --no-input-terminal --no-input-cursor --input-vo-keyboard \
              --no-input-default-bindings --no-osc --osd-level=0 --really-quiet

[config.json.import_file:'mpv.config.json'] # .. from /etc/nailara/import/ ..

[mpv.open_player]
# [base.x11.keep_below:<x11.id>]
[mpv.send_command:"observe_property",1,"video-aspect"]
[mpv.send_command:"observe_property",1,"path"]
[mpv.send_command:"observe_property",1,"width"]
[mpv.send_command:"observe_property",1,"height"]
[base.get_session_id]

[mpv.get_playlist:'video']

[event.loop]
