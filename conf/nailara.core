
buffer.system.log_cmd = log.msg

# change priority
[base.renice:-13]

[load_config_file:'defaults']

[load_config_file:'auth.pwd.core']

system.agent.type               =       core
modules.load                    =       auth digest net io.ip plugin.auth debug
auth.methods                    =       pwd agent #rsa
auth.rsa.key_file               =       rsa.core
get.route                       =       file vortex.file :target:
get.command                     =       file.get
setup.aliases.source_agent      =       notify.message layout.get_coordinates \
                                                       layout.get_geometry
setup.aliases.source_agent_sid  =       log.msg

# access control
access.cmd.usr.*     =  clear help exit whoami time \
                        timezone startup_time ping log.msg \
                        xserver.get_display xserver.get_screen_size \
                        xserver.get_geometry xserver.get_stack_order \
                        xserver.get_orientation layout.get_coordinates \
                        layout.get_geometry

access.cmd.usr.root  =  ping session_key *.verify_instance *.ping

access.cmd.usr.ticker = xserver.get_windows xserver.set_gravity \
                        xserver.raise_window

access.cmd.usr.rss-ticker = ticker.read_file

access.cmd.usr.browser = xserver.get_windows xserver.lower_window

access.cmd.usr.layout = root.start root.stop root.restart ticker.get_opacity \
                        xserver.get_window_ids root.get_instance_ids

access.cmd.usr.photon        =  ..*.** **  # development mode (will be removed)

# load and initialize modules
[load_modules:<modules.load>]
#[load_modules:'plugin.auth'] # XXX: doesn't reload right now... fix!
[init_modules]

# open socket
my.sock = [base.open:'tcp/ip','in',<net.local.addr>,<net.local.port>]

# drop root priviledges
[set_privs:'nailara']

# bind nailara protocol to socket
[base.proto.bind:<my.sock>,'nailara','server']

# start event loop
[event.loop]

