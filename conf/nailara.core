
buffer.system.log_cmd = log.msg

# change priority
[base.renice:-13]

[load_config_file:'defaults']

[load_config_file:'auth.pwd.core']

system.agent.type               =       core
modules.load                    =       auth digest net io.ip io.unix \
                                        plugin.auth
auth.methods                    =       pwd agent unix
auth.rsa.key_file               =       rsa.core
get.route                       =       file vortex.file :target:
get.command                     =       file.get
setup.aliases.source_agent      =       notify.message layout.get_coordinates \
                                        layout.get_geometry root.shutdown \
                                        layout.assign_window
setup.aliases.source_agent_sid  =       log.msg

# access control
access.cmd.usr.*     =  clear help exit whoami time localtime \
                        timezone startup_time ping log.msg *.get_subname \
                        xserver.get_display xserver.get_screen_size \
                        xserver.get_geometry xserver.get_stack_order \
                        xserver.get_orientation layout.get_coordinates \
                        layout.get_geometry layout.assign_window

access.cmd.usr.udev  =  notify.message   #   <- ( used in example rules config )

access.cmd.usr.root  =  ping session_key *.verify_instance \
                        *.ping ondemand_agent

access.cmd.usr.config = get_config *.get_config_names *.get_config

access.cmd.usr.ssh    = *.ping

access.cmd.usr.xserver = hide-mouse.blank_cursor

access.cmd.usr.compton = xserver.get_driver

access.cmd.usr.ticker = xserver.wait_visible xserver.set_gravity \
                        xserver.raise_window xserver.keep_above \
                        xserver.set_opacity xserver.wait_visible

access.cmd.usr.rss-ticker = ticker.read_file playlist.get_list

access.cmd.usr.browser = xserver.wait_visible xserver.lower_window \
                         xserver.raise_window playlist.get_list_types \
                         pdf2html.get_url image2html.get_url \
                         layout.get_subconfig

access.cmd.usr.layout = root.start root.stop root.restart ticker.get_opacity \
                        xserver.get_window_ids root.get_instance_ids *.ping \
                        browser.hide_bg_window playlist.update \
                        xserver.set_opacity xserver.get_stack_order \
                        xserver.lower_window

access.cmd.usr.media = playlist.get_list playlist.get_list_types \
                       xserver.wait_visible xserver.lower_window \
                       xserver.raise_window playlist.get_list_types \
                       pdf2html.get_url image2html.get_url \
                       xserver.keep_below xserver.set_geometry \
                       ffmpeg.rescale_video xserver.set_opacity \
                       xserver.hide_window xserver.unhide_window \
                       xserver.get_mode root.start root.stop root.restart \
                       root.notify_online layout.get_subconfig \
                       reenc-msg.refresh reenc-msg.finished

access.cmd.usr.mpv = playlist.get_list xserver.wait_visible xserver.keep_below \
                     xserver.set_geometry ffmpeg.rescale_video \
                     xserver.set_opacity xserver.get_mode \
                     root.notify_online root.start \
                     reenc-msg.refresh reenc-msg.finished

access.cmd.usr.impressive = playlist.get_list xserver.wait_visible

access.cmd.usr.playlist = *.playlist_update weather.get_urls notify.msg_reload \
                          download.get_mimetype root.restart

access.cmd.usr.playlist-update = playlist.reload_file playlist.update \
                                 layout.config_name root.restart

access.cmd.usr.reenc-msg = root.stop

access.cmd.usr.notify-info = notify.info
access.cmd.usr.notify-warn = notify.warn

access.cmd.usr.photon        =  ..*.** **  # development mode (will be removed)

modules.pre_load = core.config config.json
[load_modules:<modules.pre_load>]
[init_modules]

# load additional (.json) configuration files from /etc/nailara/import/
[config.json.import_file:'core.auth_pwd.json']
[config.json.import_file:'core.access_cmd.json']

# load and initialize modules
[load_modules:<modules.load>]
#[load_modules:'plugin.auth'] # XXX: doesn't reload right now... fix!
[init_modules]

# open unix domain socket
[file.make_path:'/tmp/.n/s',0777]
unix.path = [digest.md5.b64u:"<net.local.addr>:<net.local.port>"]
unix.sock = [base.open:'unix','in',"/tmp/.n/s/<unix.path>"]

# open tcp/ip socket
tcp_ip.sock = [base.open:'tcp/ip','in',<net.local.addr>,<net.local.port>]

# drop root priviledges
[set_privs:'nailara']

# bind nailara protocol to socket
[base.proto.bind:<tcp_ip.sock>,'nailara']
[base.proto.bind:<unix.sock>,'nailara']

# start event loop
[event.loop]

