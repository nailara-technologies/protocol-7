#!/usr/bin/perl
use v5.24;
use strict;
use English;
use warnings;

###           ###
## bits-to-num ##
###           ###

##[ LOCAL PM LIB PATH ]#######################################################

BEGIN {
    use English;
    use File::Spec;
    use Cwd qw| abs_path |;
    use FindBin qw| $RealBin |;
    my $up_dir         = File::Spec->updir;
    my $data_pm_path   = qw| data/lib-path/pm |;
    my $root_path      = abs_path( r2_abs( c_dir( $RealBin, $up_dir ) ) );
    my $local_lib_path = abs_path( c_dir( $root_path, $data_pm_path ) );
    $local_lib_path //= $data_pm_path;
    die "\n:\n:: not found : $local_lib_path\n:\n" if !-d $local_lib_path;
    unshift( @INC, $local_lib_path )               if -d $local_lib_path;
    sub c_dir  { File::Spec->catdir(@ARG) }
    sub r2_abs { File::Spec->rel2abs(@ARG) }
}

##[ AMOS MODULE ]#############################################################

use AMOS7;
use AMOS7::INLINE;

## AMOS7::BitConv ##
compile_inline_source( { qw| subroutine-name | => qw| bit_string_to_num | } );

##[ BINARY TO NUMERICAL CONVERSION ]##########################################

error_exit('expected bitstring argument <{NC}>') if !@ARGV;

my $bits = join( '', @ARGV );

error_exit('input not a bit string <{NC}>')       if $bits =~ m|[^01]|;
error_exit('input string size exceeds 64 <{NC}>') if length $bits > 64;

say AMOS7::BitConv::bit_string_to_num($bits);

exit(00000);

#,,.,,,,,,,,,,..,,..,,,,,,...,,.,,.,,,,,.,,..,..,,...,.,.,,,,,,..,...,.,,,..,,
#VTPIC4LKGJKPDM7PTCAARP55W53ZDVY2LM33HOJ7NL6VPOWVWEE2DYDQSZNUTFSXRVMYCHDOKXQG2
#\\\|LQ7PRX46R44NQ2NSZT6BRTLEYIYGCLRS3T2D2BSY2JWDHXTQ6S2 \ / AMOS7 \ YOURUM ::
#\[7]T3RRLTUR6XAYE7OIKXMFJG4SKTJVIWJJVUKYMGQ5FXAZMPHX6CAY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
