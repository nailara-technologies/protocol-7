#!/usr/bin/perl
use v5.24;
use strict;
use English;
use warnings;

###           ###
## num-to-bits ##
###           ###

##[ LOCAL PM LIB PATH ]#######################################################

BEGIN {
    use English;
    use File::Spec;
    use Cwd qw| abs_path |;
    use FindBin qw| $RealBin |;
    my $up_dir         = File::Spec->updir;
    my $data_pm_path   = qw| data/lib-path/pm |;
    my $root_path      = abs_path( r2_abs( c_dir( $RealBin, $up_dir ) ) );
    my $local_lib_path = abs_path( c_dir( $root_path, $data_pm_path ) );
    $local_lib_path //= $data_pm_path;
    die "\n:\n:: not found : $local_lib_path\n:\n" if !-d $local_lib_path;
    unshift( @INC, $local_lib_path )               if -d $local_lib_path;
    sub c_dir  { File::Spec->catdir(@ARG) }
    sub r2_abs { File::Spec->rel2abs(@ARG) }
}

##[ AMOS MODULE ]#############################################################

use AMOS7;
use AMOS7::INLINE;

## AMOS7::BitConv ##
compile_inline_source( { qw| subroutine-name | => qw| num_to_bit_string | } );

##[ NUMERICAL TO BINARY CONVERSION ]##########################################

error_exit('expected numerical argument <{NC}>')
    if @ARGV == 0
    or $ARGV[0] =~ m|\D|;
error_exit('input value exceeds 64 bit size <{NC}>')
    if $ARGV[0] > 18446744073709551615;
error_exit('too many arguments, expected : <num> [, <bitsize> ] <{NC}>')
    if @ARGV > 2;

my $num  = shift(@ARGV);
my $bits = shift(@ARGV);

error_exit('number of bits is not an integer [0..64] <{C1}>')
    if defined $bits
    and ( $bits =~ m|\D| or $bits < 0 or $bits > 64 );

## say( sprintf qw| %0*b |, $bits, $num ); ## <-- same, faster ##

say AMOS7::BitConv::num_to_bit_string( $num, $bits );

exit(00000);

#,,,.,.,.,,.,,,,,,,,.,...,..,,..,,..,,,,.,...,..,,...,..,,..,,..,,..,,.,,,,,,,
#5ERPCIZSGVLHQQCXS3J7ZYLZGCVH7YFXNE347BYVQ7NIQ5D4VAEUFBFZSDYSORHLB5JMEAP5VD4IE
#\\\|PIUHUP2XR75QFFEDPOUEBQD6TAF7PBUDZB336MEZDH63A635JK6 \ / AMOS7 \ YOURUM ::
#\[7]UAOWSXSS3NGAJWEOIDK47UNVS6L4QZIVRI2X53FZDB2ZLAMFQ4AI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
