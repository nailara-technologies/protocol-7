#!/usr/bin/perl
use v5.24;
use strict;
use English;
use warnings;
use Digest::BMW;
use Crypt::Misc 'encode_b32r';

my @sizes = qw| 224 256 384 512 |;

my $bits = 0;
my $next_size;
my $numerical = 0;
map { $numerical = 1 if $ARG eq '-d' } @ARGV;

map { $bits = $LAST_PAREN_MATCH if $ARG =~ m|^-(\d+)| } @ARGV;

my $pmode;
my $bytes;
if ( length($bits) < 3 ) {    ## bytes mode ##
    $bytes = $bits;
    $bits *= 8;
    $pmode = 'bytes';
} else {    ## bits mode ##
    $bytes = int( $bits / 8 );
    $bytes++ if $bits % 8;
    $pmode = 'bits';
}
map { $next_size //= $ARG if $bits <= $ARG or $ARG == 512 } @sizes;
my $b_str = $pmode eq 'bytes' ? sprintf( " [ %d bytes ]", $next_size / 8 ) : '';
die ":\n:: requested bit size larger than $next_size ::$b_str\n:\n"
    if $bits > $next_size;
$bytes ||= $next_size / 8;

my $bmw = Digest::BMW->new($next_size);

my @args = grep { !m,^-(b|\d+)$, } @ARGV;

if ( @args == 2 and $args[0] =~ m|^\-fq?| ) {
    my $fname = $args[1];
    die "\n  << not found : $fname >>" if !-e $fname;
    open( my $FH, '<' . $fname ) or die "\n <!> $fname : $!\n\n";
    $fname =~ s|^.*/||;
    my $bmw_enc = encode( $bmw->addfile($FH)->digest );
    say $bmw_enc and exit if length( $args[0] ) == 3;
    printf( ":\n: $fname :. %s .:\n:\n", $bmw_enc );
    close($FH);
} elsif ( @args == 2
    and $args[0] eq '-fl'
    and ( -f $args[1] or $args[1] eq '-' ) ) {
    my $fname = $args[1];
    if ( $fname eq '-' ) {
        while (<STDIN>) { say encode( $bmw->add($ARG)->digest ) }
    } else {
        say "[ %s ]", $fname;
        open( my $FH, '<' . $fname ) or die $!;
        while (<$FH>) { printf ": %s\n", encode( $bmw->add($ARG)->digest ) }
        close($FH);
    }
} else {
    say encode( $bmw->add( join( ' ', @args ) )->digest );
}

sub encode {
    my $checksum = shift;
    return substr( encode_b32r($checksum), 0, $bytes ) if not $numerical;
    return join( '',
        map { sprintf "%03d", $ARG }
            unpack( 'C*', substr( $checksum, 0, $bytes ) ) );
}

#.............................................................................
#RJTKVABYDV3ARVPUFNJESULHOO64DU6U4JK2QEF7C5DKZM2UIV7HIO2PD5VJSWTKC2YX4KZKJMEVA
#::: K3LNGFHH4C7SLOEIXGVIDE3HAQZSA4OPRM4PS6WEUQBZCJLP5QP :::: NAILARA AMOS :::
# :: UL5XE5RBIP2T64YXYH3ZW3Q2FDQO5XJOK3QPTD2ZTEL7P7BTDKBI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
