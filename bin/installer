#!/usr/bin/perl

use Socket;
use IO::Socket::INET;

$| = 1;

$DATA{'install'}{'server'} = {
    'hostname' => '127.0.0.1',
    'port'     => 2342
};

$DATA{'install'}{'account'} = {
    'name' => 'public',
    'pass' => 'damnet'
};

$DATA{'module'} = {
    'Digest::SHA1'   => 1,
    'Term::ReadLine' => 1,
    'Term::ReadPassword' => 1,
    'Crypt::RSA' => 1,
    'Crypt::Twofish' => 1
};

$DATA{'command'} = {
    'check' => 'cmd_check_dependencies',
    'list'  => 'cmd_list'
};

if ( defined $DATA{'command'}{ $ARGV[0] } ) { $DATA{'cmd'} = $ARGV[0] }
else { print_usage(); exit(0) }

print "\n ::. $DATA{'cmd'} .::\n ::\n";

if ( defined &{ $DATA{'command'}{ $DATA{'cmd'} } } ) {
    &{ $DATA{'command'}{ $DATA{'cmd'} } };
}
else {
    print
" :: [error] command '$DATA{'command'}{$DATA{'cmd'}}' is not defined.\a\n";
}

print " ::\n :\n\n";
exit(0);

sub damn_connect {

    my $sock;
    print " :: connecting to install server ..\r";
    if ( $sock = IO::Socket::INET->new(
            PeerAddr => $DATA{'install'}{'server'}{'hostname'},
            PeerPort => $DATA{'install'}{'server'}{'port'}
        ) )
    {
        print " :: connection to "
          . $DATA{'install'}{'server'}{'hostname'} . ':'
          . $DATA{'install'}{'server'}{'port'}
          . " established   \n";
        my $answer;
        $answer = <$sock>;
        if ( $answer ne ">:]\n" ) {
            print " :: received invalid server response\n :\n\n";
            exit;
        }
	print " :: authentication check..\r";
        print $sock "AUTH "
          . $DATA{'install'}{'account'}{'name'} . " "
          . $DATA{'install'}{'account'}{'pass'} . "\n";
        $answer = <$sock>;
        if ( $answer ne "YEAH >:P\n" ) {
            print " :: authentication failed :(\n :\n\n";
            exit(0);
        }
	else
	{
	    print " :: authentication successful :)\n";
	}
        return $sock;
    }
    else {
        print " :: failed to connect to '"
          . $DATA{'install'}{'server'}{'hostname'} . ':'
          . $DATA{'install'}{'server'}{'port'}
          . "' :( [ $! ]\n :\n\n";
        exit(0);
    }
}

sub cmd_list {
    my $sock = damn_connect();

    print $sock "[file.search:name,phon]\n";

    $answer=<$sock>;

    if($answer=~/$RAW (\d+)\n$/)
    {
	my $len=$1;
	while ($len>=0 and sysread($sock,$data,$len))
	{ $len-=length($data); print $data }
    }
    else{ print " :: failed.\n"; exit(0) }
}

sub cmd_check_dependencies {
    foreach my $module_name (sort(keys(%{$DATA{'module'}}))) {
        test_dependency($module_name);
    }
}

sub test_dependency {
    foreach $mod_name (@_) {
        if ( eval("require $mod_name") ) {
            print " :: $mod_name .. OK\n";
        }
        else { print " :: $mod_name .. NOT INSTALLED\n" }
    }
}

sub print_usage {
    print
"\n ::: usage \t..\tinstaller <command>\n ::\n :: commands:\n ::\n ::. check \t..\tcheck minimum dependencies\n ::. list \t..\tlist available packages\n\n";
}
