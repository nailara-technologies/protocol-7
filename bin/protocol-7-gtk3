#!/usr/bin/perl

use strict;
use warnings;
use File::Spec;
use Module::Load;
use Cwd 'abs_path';
use FindBin qw($RealBin $RealScript);
eval { load 'File::Which', 'which' };
my $which_loaded = $EVAL_ERROR ? 0 : 1;

### wrapper code to load Gtk3 module at compile time ###

BEGIN {
    ( my $local_lib_path = $PROGRAM_NAME ) =~ s|/[^/]+/[^/]+$|/lib/pm|;
    unshift( @INC, $local_lib_path ) if -d $local_lib_path;
}

my $agentname;
my @call_args = @ARGV;

## [script path] ##
my $exec_path = abs_path( File::Spec->catfile( $RealBin, $RealScript ) );
my $bin_path  = abs_path($RealBin);
## [perl path] ##
my $perl_path = '/usr/bin/perl';
eval { $perl_path = which('perl') }          if $which_loaded;
die "<!> WEIIIRD <!> perl binary not found." if !-e $perl_path;
my $nailara_path = File::Spec->catfile( $bin_path, 'nailara' );
die "<!> '$nailara_path' : path not found." if !-f $nailara_path;

## agent name [ link derived ] ###
if ( -l File::Spec->rel2abs($PROGRAM_NAME) ) {
    $agentname = lc($PROGRAM_NAME);
    $agentname =~ s/^.*nailara\.|[\. ]$//g;
    @call_args = ( $agentname, @ARGV );
}
$agentname //= 'nailara';
exec( $perl_path, '-C31', '-MGtk3', $nailara_path, @call_args )
    or die "failed to start $agentname agent: $OS_ERROR";

# ______________________________________________________________________________
#\\TXNJACBLKKFJFECEKHY6KJAFOJL6RKLA6FI2TIZ3WHGPBTXYMLDJ5GR25GG3WNUZRNJRJEPWPYOP2
# \\ ZNERE53E43VMOK2YI3PX4GP6TW3LWL7JW7CQWWYY4FBVQVOW5OGI \\// C25519-BASE-32 //
#  \\// BRFMLHJ7CJDWVHUUGFKBWEANOLZ6GN7UI5GWD234GTKUQIUPKCQ \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
