#!/usr/bin/perl
use v5.24;
use strict;
use English;
use warnings;
our $inline_directory;

my $seed_val = sprintf( qw| %09d |,
    ( @ARGV > 0 and $ARGV[0] =~ m|^\d+$| ? shift(@ARGV) : 0 ) );

say "\n:.   :. $seed_val .:\n:";

my $data_string = join( ' ', @ARGV );
my $elf_chksum  = elf( $seed_val, $data_string );

say sprintf( ".\n     :: %s ::\n", $elf_chksum );

exit(0);

BEGIN {  #[ INIT \ C-CODE ]###################################################
    die 'ENV{USER} not set [ required ]' if !length( $ENV{'USER'} // '' );
    $inline_directory = join( '.', qw| /var/tmp/.inline-elf |, $ENV{'USER'} );
    if ( not -d $inline_directory ) {
        mkdir($inline_directory)
            or die ":\n: \l$OS_ERROR : $inline_directory\n:\n";
    }
}
INIT {
    use Inline ( 'C' => <<~ 'EOT', 'directory' => $inline_directory );

    void elf( unsigned int seed_val, unsigned char *sval )
    {
        inline_stack_vars;
        unsigned int h = 0;
        unsigned int g;
        int left  = 4;
        int right = 24;

        h = seed_val; // continuation

        while ( *sval ) {

            h = ( h << left ) + *sval;

            if ( g = h & 0xF0000000 )
                h ^= g >> right;

            printf( ":   %c : %09u \t: %010lu\n", 32 , h, g );    // <-- dbg.0

            h &= ~g;

            printf( ":.. %c : %09u \t: %010lu\n", *sval , h, g ); // <-- dbg.2
            *sval++;
        }

        inline_stack_reset;
        inline_stack_push(sv_2mortal(newSViv( h )));
        inline_stack_done;
    }

    EOT
}

#.............................................................................
#W7BQIZHNVBJQ3F7PXAZTLMCWCTVY2YLYXEXY6ZRTPCRSZVKATIUZVHI7YUFQFF4W3CI6DL7KVITPW
#::: F6WWASQL3QMFQA6O3ECOWHVN77BY7WEWLHOWBBJSKCUEISHFOAH :::: NAILARA AMOS :::
# :: 2APW6WZWVKU3PG4L4EXMB4GTNJDLTMNDVUJK2OHMFGBDCWZYTABI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
