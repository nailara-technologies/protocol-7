#!/usr/bin/perl
use v5.24;
use strict;
use warnings;
use Term::ReadKey;
use Time::HiRes qw| sleep |;
$SIG{'INT'} = sub { ReadMode 0; exit };
my @commands;
my $loop_count  = shift;
my $loop_delay  = shift;
my $min_delay   = 0.0007;
my $error_delay = 0.13;
die ":\n:: expected < loop-count > parameter\n\n"
    if not defined $loop_count
    or $loop_count !~ m|^\d+$|;
die ":\n:: expected < loop-delay > parameter\n\n"
    if not defined $loop_delay
    or $loop_delay !~ m|^\-?\d+(\.\d+)?$|;
$loop_delay = $min_delay if $loop_delay < $min_delay and $loop_delay >= 0;
if (@ARGV) { @commands = join( ' ', @ARGV ) }
else {
    @commands = grep {length} <STDIN>;
}
die ":\n:: no commands given\n\n" if !@commands;
++$loop_count if $loop_count > 0;    ## keep above 0, 0 === infinite
my $read_delay = $loop_delay < 0 ? 0 : $loop_delay;

while ( $loop_count == 0 or $loop_count > 0 and --$loop_count ) {
    foreach my $command (@commands) {

        system($command) == 0 or sleep $error_delay;
        ReadMode 3 or my $wait = ReadKey($read_delay) if $loop_delay != 0;
        while ( ReadKey(-1) ) {
            sleep 0.4077;
            while ( ReadKey(-1) ) {
            }    ## slow down or accelerate with keypress.,
        }
        ReadMode 0 or exit(4) if defined $wait and uc($wait) eq 'Q';
    }
}
ReadMode 0;

#,,..,,..,.,.,,,.,.,.,...,,,.,..,,...,,.,,,,.,..,,...,...,.,,,.,,,...,.,.,..,,
#LRNKZG2J7SUREUI7CJJMLAH7QYRFK2BYPU3F5Y4L6LZBE456B45XE4KL4CU24Y5QB6GEF4ARC3QKC
#\\\|NFILKWN3VQANY5ALFE6CCYP62CJFF6GVMESVIUPOZ76PRTJRU6Y \ / AMOS7 \ YOURUM ::
#\[7]IJ2RJUKUHFPAGM25RCH5KQFJDWS2NEGLN22HYQ2LOP5TYOV4RAAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
