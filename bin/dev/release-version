#!/usr/bin/perl
use v5.24;
use strict;
use English;
use warnings;
use File::Spec;
use Cwd qw| abs_path |;
use FindBin qw| $RealBin |;
use Crypt::Misc qw| decode_b32r |;

my $ver_seed = 54;
my $release_version;

my $mode = ( @ARGV and $ARGV[0] eq '-m' ) ? 'msg_str' : 'rel_ver';
if ( @ARGV and $ARGV[0] eq '-s' ) { $mode = 'set_tag'; shift @ARGV }

if ( $mode eq 'set_tag' and @ARGV and $ARGV[0] =~ m|^v?(\d+\.\d+\.\d+)$| ) {
    $release_version = $1 and shift @ARGV; ## <-- setting custom rel. version ##
}

my $u = File::Spec->updir;
my $root_path
    = abs_path( File::Spec->rel2abs( File::Spec->catdir( $RealBin, $u, $u ) ) );
my $version_file = File::Spec->catfile( File::Spec->catdir( $root_path, 'cfg' ),
    'protocol-7.src-ver' );
{
    local $| = 1;
    local $/ = undef;
    if ( open( my $v_fh, '<' . $version_file ) ) {
        ( my $src_ver_str = <$v_fh> ) =~ s|\s.+$||sg;

        ( my $ntime_B32, my $commit ) = split( m|\-|, $src_ver_str, 2 );

        my $ntime = ntime_dec($ntime_B32);

        if ( not defined $release_version ) {
            (   $release_version = sprintf "%.3f",
                ( $commit * $ntime / $ver_seed / ( 7777777 * 12242707 ) )
            ) =~ s|(\d)$|\.$1|;
        }

        my $tag_msg
            = sprintf(
            "<< release \\\\// protocol-7-base-v%s || source \\\\// %s >>",
            $release_version, $src_ver_str );
        if ( $mode eq 'rel_ver' ) {
            print STDOUT ":\n: calculated protocol-7 release version : ";
            print STDERR "v$release_version\n";
            print STDOUT ":\n";
        } elsif ( $mode eq 'msg_str' ) {
            print "'$tag_msg'\n";
        } elsif ( $mode eq 'set_tag' ) {
            print ":\n: setting release tag [ 'v$release_version' ]\n:\n::";
            system( 'git', 'tag', "v$release_version", '-m', $tag_msg, @ARGV )
                && die "::<<!>>:\n\n";
            print ":\n\n";
        }
    } else {
        die "$version_file: $!\n";
    }
}

sub ntime_dec {
    my $network_time = shift;

    die ":\n:: invalid network time format in 'src-ver' file\n\n"
        if $network_time !~ m|^[A-Z2-7]{1,22}$|;

    my $ntime_dec;
    eval { $ntime_dec = unpack( 'w', decode_b32r($network_time) ) };

    die ":\n:: network time decoding not successful\n\n"
        if $EVAL_ERROR
        or !length( $ntime_dec // '' );

    return $ntime_dec;
}

# ______________________________________________________________________________
#\\UJMLFJJ4VHQSCWU5ORMQRZ4XJTGLYCAXJNIQ4A5HAPBGXXRL2FR5VS2DACVIKOWJVNVDK2BRQN2UO
# \\ ZNNQ2A65KFBNKJ5FL7T6TBHL3E4Z6UH2VEDI2M4WLN557FZB3GFN \\// C25519-BASE-32 //
#  \\// UE5AP7RUPHEGJ4LQKUXBVH5DKDDIGKYVABNQNREFVBQQT23ASDY \\ CODE SIGNATURE \\
#   ````````````````````````````````````````````````````````````````````````````
