#!/usr/bin/perl
use v5.24;
use strict;
use English;
use warnings;

my $silent = @ARGV > 1 and $ARGV[0] eq qw| -silent | and shift(@ARGV);

BEGIN {
    use File::Spec;
    use Cwd qw| abs_path |;
    use FindBin qw| $RealBin |;
    our $up_dir = File::Spec->updir;
    our $Bin    = $RealBin;
    my $root_path      = abs_path( r2_abs( c_dir( $Bin, $up_dir ) ) );
    my $local_lib_path = abs_path( c_dir( $root_path, 'data/lib-path/pm' ) );
    die "\n:\n:: not found : $local_lib_path\n:\n" if !-d $local_lib_path;
    unshift( @INC, $local_lib_path )               if -d $local_lib_path;
    sub c_dir  { File::Spec->catdir(@_) }
    sub r2_abs { File::Spec->rel2abs(@_) }
}

my $FXI = 202;    ## program return code for asserted FALSE ##

use AMOS::Assert::Truth qw| is_true |;    ## <-- expand \ import routines ..,

my $check_string = join( ' ', @ARGV );

my $rst = "\e[0m";
my $bl  = "\e[1m";
my $bg  = "\e[48;2;9;5;42m";
my $fT  = "\e[38;2;6;71;195m";
my $fg  = "\e[38;2;68;39;172m";
my $no  = "\e[38;2;197;141;7m";
my $ng  = "\e[38;2;71;195;6m";

if ( is_true($check_string) ) {

    say "$fg:\n:: $bl${fT}TRUE$rst$fg :: "
        . "$bg'$fT$check_string$fg'$rst$fg .:\n:$rst"
        if not $silent;

    exit(0);
} else {

    say "$fg:\n:: $bl${ng}FALSE$rst$fg : "
        . "$bg'$ng$check_string$fg'$rst$fg :.\n:$rst"
        if not $silent;

    exit($FXI);
}

#.............................................................................
#ILP2A3TKFWYYWB5PX5CGZBLPXVGCL4K5E7UBRZFIE3ZJ5CZLUCPEVIQ6N6NSXBABDQQVQYSKVISYS
#::: NPF5S3MRSMTPYLXXYZDYG47MFOVYH4VNPIZOPBHG6HGMM6PD6FW :::: NAILARA AMOS :::
# :: 3BLQBLGUHDGUG6HKM4TAJVTC26ONQMMZAVMRI23UAYBDZMXBSEBY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
