#!/usr/bin/perl

use v5.24;
use strict;
use English;
use warnings;

use FindBin;
use Sys::Hostname;

##[ mk.usr ]##

##[ global constants ]##
use constant TRUE  => 5;    ##  TRUE.  ##
use constant FALSE => 0;    ##  false  ##

##[ LOCAL PM LIB PATH ]#######################################################

BEGIN {
    use English;
    use File::Spec;
    use Cwd qw| abs_path |;
    use FindBin qw| $RealBin |;
    our $up_dir = File::Spec->updir;
    our $Bin    = $RealBin;
    my $data_pm_path   = qw| data/lib-path/pm |;
    my $root_path      = abs_path( r2_abs( c_dir( $Bin, $up_dir ) ) );
    my $local_lib_path = abs_path( c_dir( $root_path, $data_pm_path ) );
    $local_lib_path //= $data_pm_path;
    die "\n:\n:: not found : $local_lib_path\n:\n" if !-d $local_lib_path;
    unshift( @INC, $local_lib_path )               if -d $local_lib_path;
    sub c_dir  { File::Spec->catdir(@ARG) }
    sub r2_abs { File::Spec->rel2abs(@ARG) }
}

##[ AMOS MODULE ]#############################################################

use AMOS7;
use AMOS7::13 qw| key_56 |;
use AMOS7::TERM qw| read_password_repeated |;

$AMOS7::TERM::title_prefix   = ' .:';
$AMOS7::mesg_prefix_string   = $AMOS7::TERM::prompt_prefix_string = ' ::';
$AMOS7::TERM::username_regex = qr|^[0-9a-z][0-9a-z\-_]{0,16}$|;

##[ RUNTIME CODE ]############################################################

my %DATA;
my $user;
my $pass;
my $re_pass;
my $node;
my $zenka = shift // qw| cube |;
if ( $zenka =~ s|^([^\.]+)\.|| ) {
    $node = $LAST_PAREN_MATCH;
} else {
    $node = hostname;
}

$DATA{'conf'}{'root'} = $FindBin::Bin;
$DATA{'conf'}{'root'} =~ s|/bin$||;
$DATA{'conf'}{'file'} = sprintf qw| %s/configuration/zenki/%s/auth.users |,
    $DATA{'conf'}{'root'}, $zenka;

my $term_title = sprintf "%s.%s user generator", $node, $zenka;

( $user, $pass ) = AMOS7::TERM::user_and_passwd( $term_title, TRUE );

die sprintf( " ::\n :::[ %saborted %s\\%s username required%s ]\n%s\n",
    $C{'o'}, $C{0}, $C{g}, $C{0}, $C{'R'} )
    if not defined $user
    or not length $user
    or not defined $pass
    or not length $pass;

$pass = key_56( \$pass );

my $new_file = FALSE;

if ( !-f $DATA{'conf'}{'file'} ) {
    $new_file = TRUE;    ## true ##
    open( NEW, ">$DATA{'conf'}{'file'}" )
        or die " ::\n :::[ cannot create user config file ]\n\n";
    print NEW "\n  .: nailara user config :.\n\n";
    close(NEW);
}

my @user_config;
my $user_exists = FALSE;
open( CONF, $DATA{'conf'}{'file'} )
    or die " ::\n :::[ cannot open user config file ]\n\n";
foreach my $line (<CONF>) {
    if ( $line =~ m|^auth.setup.usr.(\S+)[ \t]*=[ \t]*(\S+)$| ) {

        my $found_user = ${^CAPTURE}[0];
        $user =~ s,\s+|\t+,,g;
        my $found_pwd = ${^CAPTURE}[1];
        $found_pwd =~ s,\s+|\t+,,g;

        if (    not $user_exists
            and defined $found_user
            and $found_user eq $user ) {
            $user_exists = TRUE;    ## true ##
            push( @user_config,
                sprintf( "auth.setup.usr.%s  =  %s\n", $user, $pass ) );
        } else {
            push( @user_config, $line );   ##  keep unchanged [ not ours ]  ##
        }
    } else {
        push( @user_config, $line );       ##  keep unchanged [ not ours ]  ##
    }
}
close(CONF);

my @WRITE;
my $found_signature = FALSE;    ## avoiding apend after signature footer ##

if ( not $user_exists ) {
    my $next_line;
    while ( $next_line = shift @user_config ) {
        $found_signature = TRUE and last if $next_line =~ m|^#[\.\,]{77}$|;
        push @WRITE, $next_line;
    }
    ##  appending new entry  ##
    push @WRITE, sprintf( "auth.setup.usr.%s  =  %s\n", $user, $pass );
    push @WRITE, "\n", $next_line, @user_config;
} else {
    @WRITE = @user_config;  ##  user entry is already present [ replaced ]  ##
}

open( CONF, qw| > |, $DATA{'conf'}{'file'} )
    or die " ::\n :::[ cannot write user config file ]\n\n";
print CONF @WRITE;
close(CONF);

print " ::\n :\n\n";

#,,.,,...,..,,...,,,.,,,,,..,,..,,.,.,,,,,,..,..,,...,.,.,...,,.,,...,,,.,...,
#CSAP3QQKRYP575GV443ZLYMQLMXMZPO6RLY2ROJH6CNWAWYGRCUU7A3DWYCPEKZH5PJ6QSU4UZAYY
#\\\|Q363M3KHK4W6RGDA2OWKZELINJJTIGNNVJKRFVRGB3CKSKKUHYR \ / AMOS7 \ YOURUM ::
#\[7]D2IQ44DCVCB6EHG7ELIMB7DUE7A7YAQPXZUTF2LJYNRESUQQCOCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
