## >:] ##

# name  = base.cmd.verify-instance
# param = <rnd_str>
# descr = verify root instance id through log feedback

my $random_string = $$call{'args'} // '';
return { 'mode' => qw| false |, 'data' => 'no random string supplied' }
    if !length($random_string);

<[base.log]>->( 1, "instance verification [KEY:$random_string]" );

<[base.disable_command]>->('verify-instance');    # used only once by v7 zenka

map { <[event.add_timer]>->( { 'after' => 0, 'handler' => $ARG } ) }
    @{ <system.callbacks.initialized> //= [] };

## triggering instance reports before the timer does ##
<system.timer>->{'send_reports'}->now
    if defined <system.timer>->{'send_reports'}
    and <system.timer>->{'send_reports'}->is_active;

return { 'mode' => qw| true |, 'data' => 'verification code logged' };

#,,,,,.,.,..,,.,.,.,,,.,,,...,,,.,,..,,.,,,,,,..,,...,...,..,,,..,,,.,,..,.,.,
#5ZQNPTEKGU3YKLMR6MXKANU4NGTKHTGKBID2UMMLPGYIHZN7HMVSKHCMEQS4WU5LU4I7XCPGTOEKO
#\\\|ISOUALF2XYK4YGWAT2AC5EQDXIKBTMYYDLSOZNCNWS6MEDQVEPN \ / AMOS7 \ YOURUM ::
#\[7]RQSQL7YEOGLVLH4DUJTINDYVTL6GTK3ETHB4EYTZ47NVR3YDOEBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
