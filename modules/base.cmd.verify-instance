## >:] ##

# name  = base.cmd.verify-instance
# param = <rnd_str>
# descr = verify root instance id through log feedback

my $random_string = $call->{'args'} // '';
return { 'mode' => qw| false |, 'data' => 'no random string supplied' }
    if not length $random_string;

<[base.logs]>->( 'instance verification [KEY:%s]', $random_string );

<[base.disable_command]>->('verify-instance');    # used only once by v7 zenka

map { <[event.add_timer]>->( { 'after' => 0, 'handler' => $ARG } ) }
    @{ <system.callbacks.initialized> //= [] };

## triggering instance reports before the timer does ##
<system.timer>->{'send_reports'}->now
    if defined <system.timer>->{'send_reports'}
    and <system.timer>->{'send_reports'}->is_active;

return { 'mode' => qw| true |, 'data' => 'verification code logged' };

#,,,,,,..,,,.,.,,,...,.,,,.,.,...,,.,,,,,,,,.,..,,...,..,,...,.,.,,,.,.,,,,..,
#6TOI7QYBKLFLDE76YLWCSYCHSSJS3RS6O23JZGHCRJPXM4DEM6KOR5RAVLDJHWW6DGXONLLANBPMS
#\\\|DGTV4NJGV3WIEBZ4QUEB4CSNH6BK5NIKJEXO3F2U4HD6HF7OXBD \ / AMOS7 \ YOURUM ::
#\[7]Q3MPL7HZRUNLOSBV274I2TQMTHN4XJ5UM2SQFUGSENT6UMS2BIAA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
