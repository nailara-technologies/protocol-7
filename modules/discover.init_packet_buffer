## [:< ##

# name  = discover.init_packet_buffer

##  packet log buffers  ##
##
<buffer.incoming.max_size> //= 24 * 1024;    ## 24K buffer size ##
<buffer.outgoing.max_size> //= 24 * 1024;    ## 24K buffer size ##

foreach my $type (qw| incoming outgoing |) {    ##  init buffers  ##
    my $zenka_init
        = defined $data{'buffer'}{$type}{'data'} ? qw| re-init | : qw| init |;

    my $line    ## preparing buffer initialization message ##
        = sprintf '.:[ zenka %s | packet collection is %s ]:.', $zenka_init,
        <[base.cfg_bool]>->( <discover.cfg.log-packets>->{$type} )
        ? qw| enabled |
        : qw| disabled |;

    ##  nothing logged [ reset buffer ]  ##
    if (    $zenka_init eq qw| re-init |
        and $data{'buffer'}{$type}{'data'}->@* == 3 ) {
        undef $data{'buffer'}{$type}{'data'}->@*;
        $data{'buffer'}{$type}{'size'} = 0;
        <[base.buffer.add_line]>->( $type, '' );
    }
    <[base.buffer.add_line]>->( $type, '' ) if $zenka_init eq qw| init |;
    <[base.buffer.add_line]>->( $type, $line );
    <[base.buffer.add_line]>->( $type, '' );
}

#,,..,,..,..,,.,.,.,.,..,,,.,,.,,,,..,,.,,,,,,..,,...,...,.,.,.,,,.,.,,.,,...,
#PEOY56PQKIEP7OOMJ5DTB5GF6HDJOBH6ORIWWSXU5C22YMWSTBACUSWFKHWUU7GJPGNQSU4LW3QFG
#\\\|HCBMK2QF6SNADQIAYBEY36ETCWBCSMT54ZNTQ4TKBL7PTLXE52C \ / AMOS7 \ YOURUM ::
#\[7]EEJD7QDMFYUSVKXEMKXJTORBIIVJRDDTFCS67PSQ7HNKIFZNDGBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
