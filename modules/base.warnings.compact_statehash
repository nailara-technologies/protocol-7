## >:] ##

# name  = base.warnings.compact_statehash

my $state_href   = shift;
my $remove_state = shift;    ##  remove values  [ 0 | 5 ]  ##

if ( ref $state_href ne qw| HASH | ) {
    warn 'expected hashref with warning state <{C1}>';
    return undef;
}

## if all enabled, skip rest ##

return { qw| all | => 5 } if $state_href->{'all'};

##  remove all not enabled ones  ##

my $sub_categories_present = 0;
foreach my $key ( keys $state_href->%* ) {
    $sub_categories_present = 5 if index( $key, qw| :: |, 0 ) > 0;

    next if not defined $remove_state;

    delete $state_href->{$key} if $state_href->{$key} == $remove_state;
}

return $state_href if not $sub_categories_present;

##  compacting warnings subcategories  ##

my $main_category;
foreach my $category ( sort keys $state_href->%* ) {
    $main_category //= $category;
    if ( index( $category, qw| :: |, 0 ) == -1 ) {
        $main_category = $category;
        next;
    } else {   ##  remove subcategories for which main category is enabled  ##
        delete $state_href->{$category}
            if index( $category, sprintf( qw| %s:: |, $main_category ), 0 )
            == 0;
    }
}

return $state_href;    ##  return compacted warning state hash  ##

#,,..,..,,,,,,.,.,,.,,..,,,..,,,,,.,,,.,.,,..,.,.,...,...,,,.,...,,..,,,.,...,
#KZWPSJKQ6ZXWNEGSBVPGH3PRZQR4UMRD6D5UVK26FI25LYJFNF4VKFTZRWOGOTGKUS3SMGKLC4IQM
#\\\|WKGV5VHKYYLYK2S753NZ7DIXCN3HZDQUMYR3OMZGTE4WHFUF7E2 \ / AMOS7 \ YOURUM ::
#\[7]23CBK5QLEF6BLIHXZVAZJBMMZLWRACSQAQNV4FU3MQ3ODENNCUBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
