## [:< ##

# name  = base.root.convert-user
# descr = convert one unix user to another + changing owner of all its files

my $old_user = shift // qw|  nailara   |;
my $new_user = shift // qw| protocol-7 |;

my @userdel_paths = qw| /usr/sbin/userdel /sbin/userdel |;
my $exit_codes    = <base.root.userdel.exit-codes>;

my $old_user_id = getpwnam($old_user);

if ( not defined $old_user_id ) {
    <[base.logs]>->(
        2, ":. user '%s' not existing, no conversion .,", $old_user
    );
    return undef;
}

<[base.logs]>->(
    0,         ":. converting '%s' files to '%s'.,",
    $old_user, $new_user
);

<[file.chown_all]>->( $old_user, $new_user );

## removing old [nailara] user ##
my $userdel = shift @userdel_paths;
while ( not -x $userdel and @userdel_paths ) {
    my $new_path = shift @userdel_paths;
    $userdel = $new_path if -x $new_path;
}

if ( not -x $userdel ) {
    <[base.log]>->( 0, qw| : | );
    <[base.logs]>->(
        0, ":: cannot find 'userdel' binary at '%s' ::", $userdel
    );
    return undef;
}
###
<[base.logs]>->(
    0,         ": removing old '%s' user [ UID %u ]..,",
    $old_user, $old_user_id
);

<[base.stderr_redir]>;
my $status = system( $userdel, $old_user ) >> 8;
<[base.stderr_restore]>;

if ( $status > 0 ) {
    my $reason = $exit_codes->{$status} // sprintf( 'exit code %s', $status );
    <[base.logs]>->( 0, '< userdel > %s', $reason );
    <[base.log]>->( 0, qw| : | );
    <[base.logs]>->( 0, "::[ cannot remove user '%s' ]", $old_user );
    return undef;
} else {
    <[base.log]>->( 1, ":.. user removal was successful =)" );
    <[base.logs]>->(
        2, ": '%s' home directory was left existing ..,", $old_user
    );
    return TRUE;
}

#,,..,,,,,.,,,...,,,,,..,,..,,,,,,..,,.,,,,..,..,,...,...,...,,,.,.,,,...,.,,,
#XJO2P7MESM2TO7OLTT7BJWEDZY3L3VJS6O4AGCBH2KTDEZIFYESJ6AU76IFT6DGJ7MYJZUVOCVGUM
#\\\|UTJONXXWAUMH2CD44IOISZMFKXGMIJVLMDD6CODQILNFI7HUJ46 \ / AMOS7 \ YOURUM ::
#\[7]5BIVVWEAMVG756CWLK7DDOVOFMO4ZUZBMBTHP46N4DSYYQMPM4CY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
