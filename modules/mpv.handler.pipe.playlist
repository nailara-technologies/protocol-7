## [:< ##

# name = mpv.handler.pipe.playlist

my $playlist_str  = '';
my $playlist_json = shift // '';
my $reply_id      = shift @{<mpv.reply_ids>};

if ( length($playlist_json) ) {
    my $playlist_data = <mpv.json.parser>->decode($playlist_json);
    map {
        $playlist_str .= exists $ARG->{'playing'} ? ':. ' : ':  ';
        $playlist_str .= $ARG->{'filename'} . "\n"
    } @{$playlist_data};
} else {
    <[base.log]>->(
        0, "playlist decoding handler called with empty string (invalid json)"
    );
}

<[base.callback.cmd_reply]>->(
    $reply_id,
    {   'mode' => qw| size |,
        'data' => $playlist_str
    }
);

#,,..,...,,,.,...,.,,,.,,,...,,,,,,,,,.,,,..,,..,,...,...,,.,,,.,,,.,,,..,..,,
#24AOFSU3QTCILVWF2UOC2C54WWLRQC5557MIQDCLKXT2546THD54F24ZLHGBRSSHLVSKLRZFSBTZM
#\\\|GLWAP5QFQKFOZ5DRRJBTYRFH6L2UPESOHDP54H2EWCE7INPPZFE \ / AMOS7 \ YOURUM ::
#\[7]GNXYDDO2TQYTAK373GJLADSRYRQCXGEFY6ASRQTF66HNY5AASQDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
