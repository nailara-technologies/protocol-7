## >:] ##

# name  = base.strip_chksum_lines

my $string_sref     = shift;   ## scalar reference to multiline input str ##
my $elf_chksum      = shift;   ## aggregate checksum up to which to strip ##
my $line_prefix_str = shift;   ## only strip lines matching optional prefix ##

## a - prefix to elf chksum implies to only include up to matched line ##
## a + prefix to elf chksum implies to include next line after a match ##

my $print_lines_to_console = 0;    ##  debug output with checksums  ##

if ( ref $string_sref ne qw| SCALAR | ) {
    warn 'expected scalar reference param <{C1}>';
    return undef;
} elsif ( not defined $elf_chksum or $elf_chksum !~ m|^[-+]?\d{1,9}$| ) {
    warn 'expected ELF-7 checksum parameter <{C1}>';
    return undef;
}

my $str_length = length $string_sref->$*;
my $pfx_len    = length $line_prefix_str if defined $line_prefix_str;

return 0 if not $str_length;    ##  empty string, nothing to do  ##
my $continuous_chksum  = 0;     ## elf start checksum ##
my $next_line_position = 0;     ## start search at position 0 ##

my %strip_offset_list;
my $checksum_match_occurred = 0;
while ( $next_line_position <= $str_length ) {
    my $linestart_pos = $next_line_position;    ##  beginning of line  ##
    $next_line_position = index( $string_sref->$*, "\n", $linestart_pos );
    last if $next_line_position == -1;    ## no [further] linefeed found ##

    my $current_line_str = substr( $string_sref->$*, $linestart_pos,
        $next_line_position - $linestart_pos );    ## linefeed not included ##

    $next_line_position++;    ## include ignored linefeed ##

    ## keep not matching lines \ do not add to checksum ##
    if ( defined $line_prefix_str ) {    ## has prefix ##
        next if index( $current_line_str, $line_prefix_str, 0 ) == -1;

        $continuous_chksum       ## add line to continuous checksum ##
            = <[chk-sum.elf]>->( ## replace with 'chk-sum.elf-true' ## [ LLL ]
            substr(              ##  prefix not added to checksum  ##
                $current_line_str, $pfx_len,
                length($current_line_str) - $pfx_len
            )
            );

    } else {    ## full line, no prefix string ##

        $continuous_chksum    ## add line to continuous checksum ##
            = <[chk-sum.elf]>->( $string_sref, $continuous_chksum );
    }

    ##  collect for stripping should match occur  ##
    $strip_offset_list{$linestart_pos} = $next_line_position - $linestart_pos;

    ##  including next line [ '+' prefix ]  ##
    ##
    last if $checksum_match_occurred;

    if ( $continuous_chksum == abs($elf_chksum) ) {   ##  checksum matches  ##
        $checksum_match_occurred = 5;                 ## true ##

        say '< has match > ', $continuous_chksum, ' : ', $current_line_str
            if $print_lines_to_console;

        delete $strip_offset_list{$linestart_pos}       ## removing current ##
            if index( $elf_chksum, qw| - |, 0 ) == 0;   ## if not 'incl. next'

        ##  strip lines  ##
        if ( index( $elf_chksum, qw| + |, 0 ) == 0 ) { ##  + chksum prefix  ##
            ##  including next line mode  ##
        } else {
            last;    ## 'up to' or 'incl. match' modes ##
        }
    } elsif ($print_lines_to_console) {
        say ' < no match > ', $continuous_chksum, ' : ', $current_line_str;
    }
}

## return number of lines stripped [none] ##
return 0 if not $checksum_match_occurred or not keys %strip_offset_list;

my @lines;    ## collecting stripped lines to return ##

foreach       ##  stripping backwards to not need to recalculate offsets  ##
    my $strip_start_position ( sort { $b <=> $a } keys %strip_offset_list ) {

    push @lines,
        \substr( $string_sref->$*, $strip_start_position,
        $strip_offset_list{$strip_start_position}, '' );
    chomp( $lines[$#lines]->$* );                   ##  remove linefeed  ##
    substr( $lines[$#lines]->$*, 0, $pfx_len, '' )  ##  remove line prefix  ##
        if defined $line_prefix_str;
}

@lines = reverse @lines;    ##  correcting line order again  ##

return \@lines;    ##  return removed lines  ##  [ array ref to scalar refs ]

#,,,.,,..,..,,,,.,.,,,.,,,,.,,,.,,..,,...,.,,,.,.,...,...,.,.,,.,,.,.,...,.,,,
#F2BOOXACBU3E3IFIO5YG4ED7FPIAMHPVWSUZOH6ZLUGTEA5UPDB7QAYWIDPESCT7SXT27SKANKZ54
#\\\|FPJDGFDJF2IKJWLE27TABTI2DAMZ2S7UA5FQNHWZDCRUX7SDYRV \ / AMOS7 \ YOURUM ::
#\[7]EGCJIMDLN56ZDHTL3Z4MNZD5NAQ2ETU5E4ZWZA354QWPD2CCCWDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
