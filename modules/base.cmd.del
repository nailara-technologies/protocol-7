# >:]

# name     = base.cmd_del
# descr    = delete a %data key

my $del_key = $$call{'args'};
my $cid = $$call{'session_id'};

return { 'mode' => 'nack', 'data' => 'no key specified' }
  if not defined $del_key or !length($del_key);
return {'mode' => 'nack', 'data' => 'invalid key'}
  if $del_key =~ /^\.|\.$/ or $del_key !~ /^[\w\d\_\-\.]+$/;

my $del_key_ref = [base.resolve_key:$del_key];
if (not defined $del_key_ref) {
  [base.log:0,"\[$cid\] del: no such key '$del_key'"];
  return { 'mode' => 'nack', 'data' => 'no such key' }
}
my $deleted = 0;
$deleted = 1 if $del_key !~ /\./ and delete $data{$del_key};
if (!$deleted) {
  my $parent_key = $del_key;
  if ( $parent_key =~ s/\.([^\.]+)$// ) {
    my $parent_ref = [base.resolve_key:$parent_key];
    $deleted = 1 if defined $parent_ref and delete $$parent_ref->{$1};
  }
}
if ($deleted) {
  [base.log:1,"\[$cid\] del: key '$del_key' deleted"];
  return { 'mode' => 'ack', 'data' => 'deleted' }
} else {
  [base.log:0,"\[$cid\] del: failed to delete key '$del_key'"];
  return { 'mode' => 'nack', 'data' => 'failed' }
}
