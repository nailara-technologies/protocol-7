## [:< ##

# name  = base.parser.splice_out_data

my $data_carrier_ref   = shift;
my $carrier_bit_offset = shift;
my $carrier_bit_steps  = shift // 1;
my $splice_length      = shift;

my $carrier_data_bit_length = 8 * length $data_carrier_ref->$*;

my $bits_ref = <[base.vec.offset_read]>->(
    $data_carrier_ref,  $carrier_bit_offset,
    $carrier_bit_steps, $splice_length
);

if ( ref $bits_ref ne qw| SCALAR | or not length $bits_ref->$* ) {
    warn 'error during payload extraction <{C1}>';
    return undef;
}

my $payload_data = pack qw| B* |, $bits_ref->$*;

return \$payload_data;

#,,.,,,,,,,.,,...,,..,..,,.,,,.,.,.,,,,,,,.,,,..,,...,.,.,.,.,...,.,.,,,.,,,.,
#LJJBJOSERPTNC5POVE57BHNGYWYQTMAK2MLPB5JGGBLQV3WP6NN72IGQZWM6627PNFT5ZYP2CVVTE
#\\\|A3NJKG3AL4PFHMADTSWQZA7GKRMWAWOKDNX6DBP2XDI7I33JNBN \ / AMOS7 \ YOURUM ::
#\[7]A2EWW7LLTBV34MFCGKVLGTWUKVBPNLHF4XQUJT6MMNNPWMIOV6DI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
