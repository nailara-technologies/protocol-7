## [:< ##

# name  = v7.zenka.cmd.devmod-enable
# param = [instance|name]
# descr = notify zenka [instance] to load devmod module

my $params = $call->{'args'};

my $devmod_signal = 53;    ##  SIGNUM53  ##

return {
    'mode' => qw| false |,
    'data' => 'instance id[s] or name[s] expected'
    }
    if not defined $params or $params !~ m{\d+|\w+};

my $user_re        = <regex.base>->{'usr'};
my $user_substr_re = <regex.base>->{'usr_subn'};

my @instance_ids;

foreach my $param_str ( split( m| +|, $params ) ) {
    if ( $param_str =~ m|^\d+$| ) {
        return {
            'mode' => qw| false |,
            'data' =>
                sprintf( "instance %s not found [ use 'v7.list' to see IDs ]",
                $param_str )
            }
            if not exists <v7.zenka.instance>->{$param_str};
        push( @instance_ids, $param_str );    ## numerical instance id ##
    } else {
        return {
            'mode' => qw| false |,
            'data' =>
                sprintf( "zenka name '%s' not valid [syntax]", $param_str )
            }
            if $param_str !~ $user_re and $param_str !~ $user_substr_re;
        my @results = <[v7.zenka-instances.get-ids]>->($param_str);
        return {
            'mode' => qw| false |,
            'data' =>
                sprintf( "no instance matches for zenka '%s'", $param_str )
            }
            if not @results;

        push( @instance_ids, @results );  ## matching [resolved] zenka name ##
    }
}

my @pids;
my $total_count = 0;
foreach my $instance_id (@instance_ids) {

    my $instance      = <v7.zenka.instance>->{$instance_id};
    my $name_of_zenka = $instance->{'zenka_name'};
    my $zenka_pid     = $instance->{'process'}{'id'};

    $total_count += my $count = kill $devmod_signal, $zenka_pid;

    push( @pids, $zenka_pid ) if $count;
    <[base.logs]>->(
        0,            "< devmod-enable > notifying instance %d [ '%s' ]",
        $instance_id, $name_of_zenka
    );
}

return {
    'mode' => qw| true |,
    'data' => sprintf(
        'sent SIGNUM53 [load devmod module] to %d instance process%s [%s]',
        $total_count,
        <[base.cnt_s]>->( $total_count, qw| es | ),
        join( ',', @pids )
    )
    }
    if $total_count;

## else ##  [ kill command returned no matches ]

return {
    'mode' => qw| false |,
    'data' => 'no success sending a signal to any process'
};

#,,,,,,..,...,,,,,,,.,,.,,..,,.,,,,.,,...,.,,,..,,...,...,,..,,.,,,,,,.,,,.,,,
#BK3XCVSQBLAC7XTFPQB7NHYFRPAAVWOYNLISKULOKJNRCIV76PHTYKD32ILQRBUJYMGUG557CZAMA
#\\\|OIJUQS543J2CPC2AJBDZECF6YZPJKGZBXMT4TJDKIGB6VKN4XQZ \ / AMOS7 \ YOURUM ::
#\[7]DRPBLLA2GWDYBQE3HWIKALB333RXVA43R7GJSGXTUHB6UTAT2UDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
