## >:] ##

# name = base.X-11.iconify_window

my $id = shift;

my $user     = shift // 'cube';
my $cmd_path = shift // '';
$cmd_path .= '.'                   if length($cmd_path);
die "expected numerical window id" if not defined $id or $id !~ /^\d+$/;
my ($local_sid) = keys( %{ $data{'user'}{$user}{'session'} } );

<[base.log]>->( 1, "iconifying window '$id'.," );

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[base.net.send_to_socket]>->(
    $cube_fh, "($cmd_id)${cmd_path}X-11.iconify_window $id\n"
);

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$cube_fh>;
    die "cube handle had an exception!" if not defined $reply_string;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(TRUE|FALSE) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ /^\($cmd_id\)FALSE (.+)$/ ) {
    <[base.log]>->( 0, "iconify_window command failed with '$1'.," );
    return 0;
} else {
    return 1;
}

#,,,.,,,,,.,,,,,,,,.,,,.,,.,,,,.,,,..,,..,...,..,,...,...,.,.,.,,,,..,.,.,,,.,
#FT44ZGRFYHQ2KBAS22KE5EUQ5YB57M5PFT7GUWYHSQRZTWW5FHLAFZ3ILJZXMSPLTMTKQXEL6URKA
#\\\|RWTYGIU4JNY6IXIZHMQ447H5Q6BBLUQRV6RNTE3RPI426P4JWLV \ / AMOS7 \ YOURUM ::
#\[7]ZHNK5V427ASQT7HI6UJVL46ZO7BNILTHFXEBTOISMXGZ42LQWQCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
