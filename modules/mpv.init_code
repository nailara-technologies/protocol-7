## [:< ##

# name = mpv.init_code

<[base.perlmod.autoload]>->('JSON::XS');
<[base.perlmod.autoload]>->( 'IPC::Open3', qw | open3 | );
<[base.perlmod.load]>->( 'File::Path', qw| make_path | );

<mpv.json.parser> = JSON::XS->new->pretty(0);

<mpv.bin_path> //= <[base.required_bin_path]>->('mpv');

die "[!] mpv binary not found, aborting startup.,"
    if not defined <mpv.bin_path>
    or not length(<mpv.bin_path>)
    or not -x <mpv.bin_path>;

<[mpv.init_settings_map]>;

<list.settings> = {
    'var'      => qw| data |,
    'key'      => qw| mpv.map.settings |,
    'mask'     => '<key>:key_name key:mpv_setting_name',
    'defaults' => { 'key' => '<key>' },
    'align'    => { 'key' => 'center' },
    'descr'    => 'adjustable mpv set-up'
};

<mpv.current.volume>    //= 100;
<mpv.start_volume>      //= 100;      # <-- ./configuration/zenki/mpv
<mpv.fade_in>           //= FALSE;    # <-- video fade (in)
<mpv.fade_idle_volume>  //= TRUE;     # <-- audio zero-vol/fade-in on idle
<mpv.audio.fade_speed>  //= 24;       # <-- audio volume fade speed [ 0..100 ]
<mpv.reply_ids>         //= [];
<mpv.pause_next>        //= FALSE;
<mpv.autorescale>       //= FALSE;
<mpv.disable_reenc_msg> //= FALSE;
<mpv.file_map.rescaled> //= {};
<mpv.xmode.xephyr.vo>   //= qw| sdl |;
<mpv.xmode.xephyr.hwdec> //= qw| auto |;
<mpv.fade_start_geom>    //= qw| 1x1--0--0 |;
<system.zenka.mode>      //= qw| stand-alone |;
<mpv.zenka_title>
    = <system.zenka.mode> eq qw| universal-child |
    ? qw| universal.mpv |
    : <system.zenka.name>;
<mpv.current.load_iteration> //= 0;
<mpv.cleanup_rescaled_after> //= 0; # <-- 0 [days] means no cleanup [disabled]
<mpv.cleanup_check_delay>    //= 42 + int( rand(237) );     # first file check
<mpv.cleanup_check_interval> //= 3600 + int( rand(7200) );  # 1-3 hrs [repeat]
<mpv.reenc_refresh_interval> //= 3.3;                       # seconds
<mpv.rescaled_extension>     //= qw| mp4 |;
<mpv.current.volume>         //= 100;                       # will be set to 0

# eventually changed to audio ['audio' subname]
<mpv.playlist_type> //= qw| video |;

## overriding ## no audio fade in 'universal-child' mode ## [LLL] change later ?
<mpv.fade_idle_volume> = FALSE if <system.zenka.mode> eq qw|universal-child|;

if ( <mpv.autorescale> and defined <mpv.rescale_path> ) {
    <[mpv.check_rescale_path]>;
    if ( defined <mpv.rescale_path>
        and <mpv.cleanup_rescaled_after> ) {    # <-- 0 == cleanup disabled
        <[base.logs]>->(
            2, ": rescale path does exist ['%s']",
            <mpv.rescale_path>
        );
        <mpv.timer.rescaled_check> = <[event.add_timer]>->(
            {   'after'    => <mpv.cleanup_check_delay>,
                'interval' => <mpv.cleanup_check_interval>,
                'handler'  => qw| mpv.handler.scan_encoded_timer |
            }
        );
    }
}

0;

#,,.,,,,,,,,,,,,,,...,...,,.,,,,.,,.,,,,,,,.,,..,,...,...,..,,,..,.,,,,,,,,,,,
#SSHWTYZNPFK6JZETMA55Z3MMBHGYUCDKLK6CCPVRUCUNJ4DETMV5U4NPLZBCBV4YLIC2EDZGIXG7C
#\\\|RFW4OAJJ56YKL4GYE4PBWIGRBQRB3ROFUGEJY7BKQEQ36NSWCQG \ / AMOS7 \ YOURUM ::
#\[7]66TCFPUQECEUNYZZX4DLKAEITBWFDEWI2RVHQIKTWIGQ2UAOLQBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
