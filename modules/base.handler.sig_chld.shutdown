## [:< ##

# name  = base.handler.sig_chld.shutdown

<[base.log]>->( 0, 'SIGCHLD received. collecting children.,' );
my %died_pid;
local ( $OS_ERROR, $CHILD_ERROR );
while ( ( my $pid = <[base.waitpid]>->( -1, 0 ) ) > 0 ) {

    # determine exit status
    my $exit_val     = $CHILD_ERROR >> 8;
    my $exit_sig     = $CHILD_ERROR & 127;
    my $exit_sig_str = $exit_sig ? sprintf( ', signal %s', $exit_sig ) : '';
    my $e_core_dump  = $CHILD_ERROR & 128 ? ' < with a cube dump. >'   : '';

    my $log_level = 2;
    $log_level = 1 if $exit_val or $exit_sig == 9;
    $log_level = 0 if $CHILD_ERROR & 128;
    $log_level = 2
        if <zenka.shutdown>
        and not length $e_core_dump
        and $exit_sig == 11;

    <[base.logs]>->(
        $log_level, ': child pid=%d shut down [ exit code %s ]%s',
        $pid, $exit_val, $exit_sig_str, $e_core_dump
    );
    $died_pid{$pid} = 1;
}

<[base.logs]>->( 0, ': shutting down %s zenka ..,', <system.zenka.name> );

<[base.log]>->( 1, ': done.' );
exit(0);

#,,,,,,.,,,,.,...,...,,.,,,,,,,,.,,,.,...,...,..,,...,...,,.,,.,.,,..,,,.,..,,
#SHS4T3LSEKMLJ65DQCVF4GBQ3WMDHKCF7KQHOKSEFQVAGI4CFHQYK2HC4Z62GQHCQPISEK3OZ7F7C
#\\\|6M64LLDKZOGWYGCEGUYHSEGQOWSOQTJWJPMIPOA4K6GBXNAMP5Z \ / AMOS7 \ YOURUM ::
#\[7]A2QCJWOIEXCBRLHGFRTEFGXHRPWM76PCRNJPMW7G2XFMLSADHACQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
