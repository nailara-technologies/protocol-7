## [:< ##

# name = v7.compile_bin_p7

my $bin_p7_src_path
    = sprintf( '%s/%s', <system.root_path>, <system.bin_p7_src_path> );
my $strip_bin_p7_path = <[file.which]>->(qw| strip |);
my $compile_static    = <[base.cfg_bool]>->( <v7.cfg.bin_p7_static> // 1 );
my $gcc_timeout       = <v7.gcc_timeout> || 7;
my $p7_bin_path       = <v7.cfg.p7_bin_path>;
my $gcc_bin           = <v7.gcc_bin>;
die "<< 'gcc' binary not found >>"             if !-x $gcc_bin;
die "source file '$bin_p7_src_path' not found" if !-f $bin_p7_src_path;

( my $src_name = $bin_p7_src_path ) =~ s|^.+./||;

<[base.log]>->( 0, ":. compiling '$src_name' source onto '$p7_bin_path'..," );

## reading source., ##
<[file.slurp]>->( $bin_p7_src_path, \my $bin_p7_source )
    or die "cannot compile '$src_name' << ! >>";

my $p7_checksum = delete <v7.checksum.bin_p7_source>
    // <[chk-sum.bmw.filesum]>->( 224, $bin_p7_src_path );
$bin_p7_source =~ s|\[BMW_FILE_CHkSUM\]|$p7_checksum|g;

my $tmp_bin    = "$p7_bin_path.$p7_checksum";
my @gcc_params = $compile_static ? ('-static') : ();
push( @gcc_params, qw| -O3 -x c -o |, $tmp_bin, '-' );

unlink($tmp_bin) or die "< unlink > $tmp_bin [ \l$OS_ERROR ]" if -f $tmp_bin;

## compiling.., ###
my $gcc_in_fh  = IO::Handle->new();
my $gcc_err_fh = IO::Handle->new();
my $gcc_pid = open3( $gcc_in_fh, undef, $gcc_err_fh, $gcc_bin, @gcc_params )
    or die "<< ! >> compilation failed [ \l$OS_ERROR ] << ! >>\n";
print {$gcc_in_fh} $bin_p7_source if $gcc_in_fh->opened;
close($gcc_in_fh)                 if $gcc_in_fh->opened;

## timeout., ###
if ( defined $gcc_pid ) {
    local $SIG{'ALRM'} = sub {
        warn "'p7' compilation timed out after $gcc_timeout seconds.";
        kill( 9, $gcc_pid );
    };
    alarm($gcc_timeout);
    <[base.waitpid]>->( $gcc_pid, 0 );
    alarm(0);
}

qx| $strip_bin_p7_path -R .comment $tmp_bin |
    if length($strip_bin_p7_path);    # optional ##

## verify.., ##
if ( -f $tmp_bin ) {
    close($gcc_err_fh) if $gcc_err_fh->opened;
    rename( $tmp_bin, $p7_bin_path )
        or die "< rename > $tmp_bin --> $p7_bin_path [ \l$OS_ERROR ]";
    chmod( 0755, $p7_bin_path )
        or die "< chmod > $p7_bin_path [ \l$OS_ERROR ]";
    <[base.log]>->( 1, ":: :. successfully installed to '$p7_bin_path'. =)" )
        and return 1
        if <[v7.bin_p7_chksum_current]>->(2); # <-- silent chksum verification
} else {
    ( my $err_str = join( '', $gcc_err_fh->getlines ) )
        =~ s{gcc: (fatal )?error: |\n+}{ }g;
    $err_str =~ s|  +| \\ |g;
    $err_str =~ s{^ \\|\\? +$}{}g;
    $err_str = join( ' ', '', @gcc_params ) if not length $err_str;
    $err_str =~ s{^ +| +$}{}g;
    <[base.log]>->( 0, ":: : no success. << $gcc_bin $err_str >>" );
}
return 0;

#,,,,,,..,,,,,,,.,...,..,,..,,.,,,.,.,,..,...,..,,...,..,,,.,,...,,.,,.,,,,,,,
#R6LXJ72EVRBPVUYK47K6KMG76KEJTAZAL4K6TCX7WPPDSX4C6QYUP37HYGDFZQL7CPGG5MZVANBRC
#\\\|QCIFDRROT2JMCM7RINGNFN2FJHV6OFCPMJ4VDLSXZ6LBEI77LYC \ / AMOS7 \ YOURUM ::
#\[7]FKZZ7TKDCX6GJI2PRE43OGDIXE5HQQDTDWTVWP3TGZJKNR2XRCCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
