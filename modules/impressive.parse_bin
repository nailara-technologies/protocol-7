# >:]

# name = impressive.parse_bin

my $params = shift || {};

if ( defined $params->{'bg_col'} and $params->{'bg_col'} !~ /\#[0-9A-F]{6}$/i )
{
    <[base.log]>->(
        0,
        "WARNING: invalid background colour parameter"
            . " '$params->{bg_col}', resetting to default!"
    );
    undef $params->{'bg_col'};
}

$params->{'bg_col'} //= '#FFFFFF';
$params->{'lang'}   //= 'en';

my $file_content;

my $impr_src = <impressive.path.impressive_src>;
my $temp_dir = <impressive.path.impressive_tmp>;
my $tmp_bin  = "$temp_dir/impressive.$$";

<[file.slurp]>->( $impr_src, \$file_content );

my $error_img;
<[file.slurp]>->( <impressive.gfx.read_error>, \$error_img, ':raw' );
$error_img = encode_base64($error_img);

<impressive.version> = $1 if $file_content =~ /^__version__ *= *"([^"]+)"/m;
<impressive.version> //= 'unknown';

$file_content =~ s|\\\n\s*||sg;

if ([ stat($impr_src) ]->[7] == 244069  # check for problematic impressive vers.
    and qx(sha1sum $impr_src) =~ /^2d8ec79b611a0cdbc38c28787ad744c0a9af4dc1/
    ) {                                 # v_0.11.0b
    <[base.log]>->(
        0, "<!> please update impressive version! [donwload_impressive.pl]"
    );
    $file_content =~ s|tostring\(|tobytes\(|mg;  # workaround (impressive crash)
}

$file_content =~ s|Image.new\((.+)\)$|Image.new\($1, "$params->{bg_col}"\)|mg;
$file_content =~ s|LOGO = """[^"]+"""|LOGO = """$error_img"""|s;

<[impressive.check_tmp_dir]>;

<[file.put]>->( $tmp_bin, $file_content );
chmod( 0755, $tmp_bin ) or die "chmod failed: $!";
