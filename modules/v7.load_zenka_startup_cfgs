## >:] ##

# name  = v7.load_zenka_startup_cfgs
# descr = load zenka directory based start-up configurations into known setup

my $cfg_root_path  = <system.conf_path>;
my $zenka_cfg_path = "$cfg_root_path/zenki";
my $prepared_cfgs  = <v7.cfg_data.start_setup>->[0] // [];

my $s_cfg_data = <[base.code_section_ref]>->( $prepared_cfgs, qw| zenki | );

if ( my @start_cfgs
    = grep {m|/zenka-startup.v7$|}
    <[base.sort]>->( <[file.all_files]>->( $zenka_cfg_path, 'recursive' ) ) )
{
    my $file_count = @start_cfgs;
    my $s          = $file_count == 1 ? '' : 's';
    <[base.log]>->(
        1, ": loading $file_count zenka start-up configuration$s"
    );

    foreach my $cfg_path (@start_cfgs) {
        my $zenka_name = $1 if $cfg_path =~ m|/zenki/([^/]+)/[^/]+\.v7$|;
        next                if not defined $zenka_name;
        <[base.log]>->( 2, ": :. including '$zenka_name' zenka start-up" );
        my @ncfg_cfg_lines = ( " .: zenki :.\n\n", "  - $zenka_name\n\n" );
        <[file.slurp]>->( $cfg_path, \@ncfg_cfg_lines );
        chomp(@ncfg_cfg_lines);
        push( @$s_cfg_data,
            <[base.parse_ncfg_code]>
                ->( $zenka_name, @ncfg_cfg_lines )->[0]->{'zenki'}->[0] );
    }
} else {
    <[base.log]>->( 1, ": :.. no additional start-up configs .," );
}

#,,.,,,..,,,.,.,.,,..,,,,,...,,,.,..,,.,.,,.,,..,,...,...,,,,,,.,,.,.,,..,.,.,
#QWGPRAE4D4KBEP3C7BEIFSIMGZAW62QFDJOKG4L7B4QM4QL5UMD5PIZBZVRPZ5SWAJ7IR73NCLYAY
#\\\|VYXOAYWPRFQO2P43DUVZ4A2CQC3ROT2W65KQXSYIQVOZ7RMDHTL \ / AMOS7 \ YOURUM ::
#\[7]VM4MZP7OTUBHJ5AFDYBYH32PKYD53GBM3DHDFSZMDEVXT7R2A6AI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
