## >:] ##

# name  = system.process.post_init

<process.poll.interval> //= 7;
<system.path.perl_bin>  //= <[base.get_path.perl_exec]>;

( my $zenka_name = <system.zenka.name> ) =~ s|[^_\.\-\w]+||g;

if ( not defined <process.TERM_chld.w_fh> ) {
    <[base.log]>->( 1, 'starting term child..,' );
    my $child_code = <<~ "EOT";
    use strict; use warnings; use English;
    map { \$SIG{\$ARG} = qw| IGNORE | } qw| INT TERM QUIT |;
    \$PROGRAM_NAME = q|$zenka_name-<root>-'term'-child|;
    while( <STDIN> ){ kill( 9, \$1 ) if m|^(\\d+)\$| }
    EOT

    <process.TERM_chld.pid>
        = open2( <process.TERM_chld.r_fh>, <process.TERM_chld.w_fh>,
        <system.path.perl_bin>, qw| -e |, $child_code )
        || die "cannot start perl 'term' child process [ \l$OS_ERROR ]";

    <[base.logs]>->(
        ": child process started [PID=%d]",
        <process.TERM_chld.pid>
    );
}

<system.process.status_timer>->cancel if exists <process.status_timer>;
<system.process.status_timer> = <[event.add_timer]>->(
    {   'after'    => 0,
        'interval' => <process.poll.interval>,
        'handler'  => 'system.process.handler.collect_table',
        'repeat'   => 1
    }
);

0;

#,,,.,..,,...,,,.,..,,..,,,..,,,,,,,.,,.,,.,,,..,,...,...,.,.,,..,,,,,..,,.,.,
#5ZUBX37EAJQJ3ZALHUVEM6LARKIHZGQDUUFYSILQOR3NPLCS2IBCR46YKI7ZFKJQTUHYHCZ52TVUQ
#\\\|YHYYRDQJRECUVAUBLXUIXY7G7EVGLK2LB2L6CYQPNYQFQBYGLKA \ / AMOS7 \ YOURUM ::
#\[7]OTHVKD22EIQQJ3NAE23AD3P5R4H3U6TCMPNTBL2WX3SC4BFW54BA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
