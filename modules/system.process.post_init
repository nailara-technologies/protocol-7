# >:]

# name = system.process.post_init

<process.poll.interval> //= 5;
<system.path.perl_bin>  //= '/usr/bin/perl';

if ( not exists <process.kill_child.w_fh> ) {
    <[base.log]>->( 1, "spawning killer child..." );

    my $child_code
        = '$0 = "killer child "; while(<STDIN>){ kill( 9, $1 ) if /^(\d+)$/ }';

    <process.kill_child.pid>
        = open2( <process.kill_child.r_fh>, <process.kill_child.w_fh>,
        <system.path.perl_bin>, '-e', $child_code )
        || die "failed to spawn perl kill child process [$!]";

    <[base.log]>->(
        1, ": child process started [pid=" . <process.kill_child.pid> . "]"
    );
}

<system.process.status_timer>->cancel if exists <process.status_timer>;
<system.process.status_timer> = <[event.add_timer]>->(
    {   'after'    => 0,
        'interval' => <process.poll.interval>,
        'handler'  => 'system.process.handler.collect_table',
        'repeat'   => 1
    }
);

0;
