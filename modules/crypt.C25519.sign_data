## [:< ##

# name = crypt.C25519.sign_data

my $msg_ref        = shift;
my $requested_skey = shift;    ##  optional  ##

if ( ref $msg_ref ne qw| SCALAR | ) {
    warn 'expected scalar ref to message-data <{C1}>';
    return undef;
}

my $key_vars_ref = <[crypt.C25519.key_vars]>->($requested_skey);
my $skey_name    = $key_vars_ref->{'key_name'};

if ( not exists $keys{'C25519'}->{$skey_name} ) {
    <[base.s_warn]>->(
        "no key '%s' loaded [ cannot sign ] <{C1}>", $skey_name
    );
    return undef;
} elsif ( not exists $keys{'C25519'}->{$skey_name}
    or not exists $keys{'C25519'}->{$skey_name}->{'public'} ) {
    <[base.s_warn]>->(
        "found no public key named '%s' [ cannot sign data ] <{C1}>",
        $skey_name
    );
    return undef;
} elsif ( not exists $keys{'C25519'}->{$skey_name}->{'private'} ) {
    <[base.s_warn]>->(
        "private key '%s' not loaded [ cannot sign without ] <{C1}>",
        $skey_name
    );
    return undef;
}

return Crypt::Ed25519::sign(
    $msg_ref->$*,
    $keys{'C25519'}->{$skey_name}->{'public'},
    $keys{'C25519'}->{$skey_name}->{'private'}
);

#,,,.,,,.,,,.,,,.,...,,.,,,,.,...,...,,,.,..,,..,,...,.,.,..,,,,,,,..,,.,,,..,
#S3MHD3HW4S7FOEQEA62MVUBF4ZXZY3GBQ66NM64CNOJPAHKSZ74YJ43Q3NOW3772BCJRVCDXQEZRA
#\\\|5CWUWSGESVFA3HFVQ6JBIZQRDSBCUONR6DHY2V2WCKFZGEJECQD \ / AMOS7 \ YOURUM ::
#\[7]A62GZIB7EWE3LWDEUC2RALZ3L66NLAR6UJL6ALLSUYCOTKKVUGAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
