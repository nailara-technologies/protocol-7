## [:< ##

# name = crypt.C25519.sign_data

my $msg_ref        = shift;
my $key_name_param = shift;    ##  optional  ##

if ( ref $msg_ref ne qw| SCALAR | ) {
    warn 'expected scalar ref to message-data <{C1}>';
    return undef;
}

my $key_vars_ref = <[crypt.C25519.key_vars]>->($key_name_param);
my $key_name     = $key_vars_ref->{'key_name'};

<[base.s_warn]>->(
    "found no public key named '%s' [ cannot sign data ]", $key_name
    )
    if not exists $keys{'C25519'}{$key_name}
    or ref( $keys{'C25519'}{$key_name} ) ne qw| HASH |
    or ( keys( $keys{'C25519'}{$key_name}->%* ) < 2
    and exists $keys{'C25519'}{$key_name}{'root'} );

<[base.s_warn]>->(
    "there is no C25519 private key with name '%s' loaded", $key_name
) if not defined $keys{'C25519'}{$key_name}{'private'};

return Crypt::Ed25519::sign(
    $msg_ref->$*,
    $keys{'C25519'}{$key_name}{'public'},
    $keys{'C25519'}{$key_name}{'private'}
);

#,,..,,,.,.,,,.,,,,..,,.,,,.,,,..,.,,,,,.,...,..,,...,...,.,,,,,,,,,,,.,.,,.,,
#DE2GJPWCSE6DCNLMH3A7YTLZBEXA75DHXXSSX6CMN3BTCD6BJAIPEIE53WMPFRCXAJABK2K6ARA4G
#\\\|RQ73GTLD3E3EFGYJHOQSU4N4GTLJX3RMG6GEBOOWFFYU4TC4HYX \ / AMOS7 \ YOURUM ::
#\[7]NHKU7HM5RPGTKGLLMR2HJGKZCFGYYM4S3FK67PYFBBATJIHKHAAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
