## >:] ##

# name = crypt.C25519.sign_data

my $msg_ref        = shift;
my $key_name_param = shift;    ##  optional  ##

if ( ref $msg_ref ne qw| SCALAR | ) {
    warn 'expected scalar ref to message-data <{C1}>';
    return undef;
}

my $key_vars_ref = <[crypt.C25519.key_vars]>->($key_name_param);
my $key_name     = $key_vars_ref->{'key_name'};

<[base.s_warn]>->(
    "found no public key named '%s' [ cannot sign data ]", $key_name
    )
    if not exists $keys{'C25519'}{$key_name}
    or ref( $keys{'C25519'}{$key_name} ) ne qw| HASH |
    or ( keys( %{ $keys{'C25519'}{$key_name} } ) < 2
    and exists $keys{'C25519'}{$key_name}{'root'} );

<[base.s_warn]>->(
    "there is no C25519 private key with name '%s' loaded", $key_name
) if not defined $keys{'C25519'}{$key_name}{'private'};

return Crypt::Ed25519::sign(
    $msg_ref->$*,
    $keys{'C25519'}{$key_name}{'public'},
    $keys{'C25519'}{$key_name}{'private'}
);

#,,.,,,..,..,,..,,,..,,.,,,..,.,.,,,,,.,.,,.,,..,,...,...,,..,.,,,,..,,,,,,,,,
#ISM2O22DHQDAQ6S6RVU5NYQB3OZDL2I35CRTLPV54DENVMRFY6UQUTJHGYGNB2F5Y7GFADAZVGNGY
#\\\|DLM5ARGDGZD5WZZ6ELMOSIQLK6O6VMTLOQSKWWDG6ILFSD7VXUI \ / AMOS7 \ YOURUM ::
#\[7]BS7RSCNSUEP2DJINOJOSR33CLPBCUJMVJJC7UMB7E76C3CT62WBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
