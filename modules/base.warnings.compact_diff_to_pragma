## [:< ##

# name  = base.warnings.compact_diff_to_pragma

my $warnings_check_bits = shift;

if ( not defined $warnings_check_bits ) {
    warn 'expected warnings check bits input <{C1}>';
    return undef;
}

my $min_diff    ##  minimized state diff  ##
    = <[base.warnings.compact_diff_from_bits]>->($warnings_check_bits);

my $src_line;
my @use_warnings;
my @disable_warnings;

foreach my $type (qw| normal fatal |) {

    foreach my $key ( <[base.sort]>->( $min_diff->{$type} ) ) {
        if ( $min_diff->{$type}->{$key} ) {
            if ( $type eq qw| normal | ) {
                push @use_warnings, sprintf( 'qw| %s |', $key );
            } else {
                push @use_warnings, sprintf( 'FATAL => qw| %s |', $key );
            }
        } else {
            if ( $type eq qw| normal | ) {
                push @disable_warnings, sprintf( 'qw| %s |', $key );
            } else {
                push @disable_warnings, sprintf( 'FATAL => qw| %s |', $key );
            }
        }
    }
}

if (@disable_warnings) {
    $src_line = sprintf 'no warnings %s;', join( ', ', @disable_warnings );
    return $src_line;
}
if (@use_warnings) {
    $src_line = sprintf 'use warnings %s;', join( ', ', @use_warnings );
    return $src_line;
}

#,,,,,,.,,,,,,,,.,,.,,.,,,,,,,,..,.,.,,..,,,.,.,.,...,...,...,..,,...,..,,,..,
#MN62PPQPT256OSZFQW7ZWCPTIA3JL3Z45DUY23HXDSL3GGT2IPUBAIVHGUOBONI6B3Y4ERQO22WTK
#\\\|CECLZRU57W7ZBE3H4BJS74AC5LJVQKOCZ23YGUGPG2572B32BDZ \ / AMOS7 \ YOURUM ::
#\[7]YDFW4YJQOKD4DUX3IDYUCP7C4ZYZM347O7R3WXUO5CFF327HJ4AQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
