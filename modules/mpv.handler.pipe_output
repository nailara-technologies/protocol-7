# >:]

# name  = mpv.handler.pipe_output
# descr = reads and processes output from mpv control pipe

my $event   = shift->w;
my $read_fh = $event->fd;
my $process = $event->data;
my $pid     = $process->{'pid'};

<mpv.pipe_buffer> //= '';

if (sysread( $read_fh, <mpv.pipe_buffer>, 4096, length(<mpv.pipe_buffer>) )
    == 0 ) {
    $event->cancel;
    close($read_fh);
    <[base.log]>->( 0, "mpv control pipe closed unexpectedly!" );
    <[base.log]>->( 1, "killing mpv-process [PID:$pid].." );
    kill( 9, $pid );
    <[base.log]>->( 1, "shutting down " . <system.agent.name> . "-agent!" );
    CORE::exit(2);
}

while ( <mpv.pipe_buffer> =~ s|^([^\n]*)\n||s ) {
    my $output_line = $1;
    $output_line =~ s/\r//sg;
    <[base.log]>->( 1, "< mpv > " . $output_line );
}
