## >:] ##

# name = httpd.scan_site_dir

my $site_dir = <httpd.site_dir>;

my $dir_fh;
if ( not opendir( $dir_fh, $site_dir ) ) {
    <[base.s_warn]>->(
        "cannot open site dir '%s' [ %s ] <{C1}>",
        <[base.str.os_err]>
    );
    return undef;
}

<[base.logs]>->( "scanning httpd site dir '%s' ..,", $site_dir );

<httpd.cfg.hostnames> = {};
my @vhosts;
my @ext_dirs;
foreach my $dir_name ( <[base.sort]>->( readdir $dir_fh ) ) {
    ( my $dir_path = catdir( $site_dir, $dir_name ) ) =~ s|//|/|g;
    next
        if $dir_name =~ m|^\.|
        or (-l $dir_path
        and !-d $dir_path
        and !-d readlink($dir_path)
        and readlink($dir_path) !~ m|^\d{3}$| );   # <-- custom status codes.,
    if ( -l $dir_path ) {
        my $link_target = readlink( catdir( $site_dir, $dir_name ) );
        if (    <httpd.cfg.external_sitedirs>
            and $link_target =~ m|/|
            and -d $link_target ) {
            <httpd.cfg.hostnames>->{$dir_name} = abs_path($link_target);
            push( @ext_dirs, $dir_name, abs_path($link_target) );
        } else {
            push( @vhosts, $dir_name );
        }
    } else {
        <[base.logs]>->( ':   host : %s', $dir_name );
        <httpd.cfg.hostnames>->{$dir_name} = $dir_path;
    }
}

( undef, my $vh_max_len ) = minmax map {length} @vhosts;
while (@ext_dirs) {
    my $dir_name    = shift @ext_dirs;
    my $link_target = shift @ext_dirs;
    <[base.logs]>->(
        ": extdir : %-*s --> %s",
        $vh_max_len, $link_target, $dir_name
    );
}
foreach my $link_name (@vhosts) {
    ( my $link_target = readlink( catdir( $site_dir, $link_name ) ) )
        =~ s|//|/|g;
    if ( $link_target =~ m|^\d{3}$| ) {
        <[base.logs]>->(
            ":   code : %-*s --> %s",
            $vh_max_len, $link_target, $link_name
        );
        <httpd.cfg.hostnames>->{$link_name} = $link_target;
    } elsif ( exists <httpd.cfg.hostnames>->{$link_target} ) {
        <[base.logs]>->(
            ": v_host : %-*s --> %s",
            $vh_max_len, $link_target, $link_name
        );
        <httpd.cfg.hostnames>->{$link_name}
            = <httpd.cfg.hostnames>->{$link_target};
    } else {
        <[base.logs]>->(
            0,          "<< link '%s' target '%s' does not exist. >>",
            $link_name, $link_target
        );
    }
}

0;

#,,..,.,,,,,.,,,.,,.,,,,,,...,,,.,,.,,,.,,..,,..,,...,...,...,.,,,,..,,,,,..,,
#L23U62IFJ4QIAX4LVDTFJ4DV2WSQJ5KQG5LOUL6D5LHUKOPSLCKHNV66LCRTXBH4Y5D4IJRHK3XEC
#\\\|MCHBVWLK4BYKZKKZASLHG2UCUVL5KO2XGE3S73ATBSTYZECCZZC \ / AMOS7 \ YOURUM ::
#\[7]EG7TRRT7FC2K74AKQPW6K47PTR5QG6GAI6EPZHC7S2QVNGOSCWBY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
