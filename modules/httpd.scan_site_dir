## [:< ##

# name = httpd.scan_site_dir

my $site_dir = <httpd.site_dir>;

my $dir_fh;
if ( not opendir( $dir_fh, $site_dir ) ) {
    <[base.s_warn]>->(
        "cannot open site dir '%s' [ %s ] <{C1}>",
        <[base.str.os_err]>
    );
    return undef;
}

<[base.logs]>->( "scanning httpd site dir '%s' ..,", $site_dir );

<httpd.cfg.hostnames> = {};
my @vhosts;
my @ext_dirs;
foreach my $dir_name ( <[base.sort]>->( readdir $dir_fh ) ) {
    ( my $dir_path = catfile( $site_dir, $dir_name ) ) =~ s|//|/|g;
    next
        if $dir_name =~ m|^\.|
        or (-l $dir_path
        and not -d $dir_path
        and not -d readlink($dir_path)
        and readlink($dir_path) !~ m|^\d{3}$| );   # <-- custom status codes.,
    if ( -l $dir_path ) {
        my $link_target = readlink($dir_path);
        if (    <[base.cfg_bool]>->(<httpd.cfg.external_sitedirs>)
            and $link_target =~ m|/|
            and -d $link_target ) {
            <httpd.cfg.hostnames>->{$dir_name} = abs_path($link_target);
            push( @ext_dirs, $dir_name, abs_path($link_target) );
        } else {
            push @vhosts, $dir_name;
        }
    } else {
        <[base.logs]>->( ':   host : %s', $dir_name );
        <httpd.cfg.hostnames>->{$dir_name} = $dir_path;
    }
}

( undef, my $vh_max_len ) = minmax map {length} @vhosts;
while (@ext_dirs) {
    my $dir_name    = shift @ext_dirs;
    my $link_target = shift @ext_dirs;
    <[base.logs]>->(
        ": extdir : %-*s --> %s",
        $vh_max_len, $link_target, $dir_name
    );
}
foreach my $link_name (@vhosts) {
    my $link_path_abs = catfile( $site_dir, $link_name );
    ( my $link_target = readlink($link_path_abs) ) =~ s|//|/|g;
    if ( $link_target =~ m|^\d{3}$| ) {
        <[base.logs]>->(
            ":   code : %-*s --> %s",
            $vh_max_len, $link_target, $link_name
        );
        <httpd.cfg.hostnames>->{$link_name} = $link_target;
    } elsif ( exists <httpd.cfg.hostnames>->{$link_target} ) {
        <[base.logs]>->(
            ": v_host : %-*s --> %s",
            $vh_max_len, $link_target, $link_name
        );
        <httpd.cfg.hostnames>->{$link_name}
            = <httpd.cfg.hostnames>->{$link_target};
    } else {
        <[base.logs]>->(
            0,          "<< link '%s' target '%s' does not exist. >>",
            $link_name, $link_target
        );
    }
}

0;

#,,,,,,,,,,,.,,..,.,.,..,,..,,.,,,...,.,,,,,.,..,,...,...,.,,,...,..,,.,,,,,,,
#AOR2P3AD4SUP37WGP2SIZLKUXINWQMNE7E6G7PWTGUQA7CIVMNRELPDUEJ4RD2LI4ID7RI7EH7KBU
#\\\|JNID5GEWENIWXCVQU42GCQMTGJWBHABHJP24VKT6YZIUB3SHPDF \ / AMOS7 \ YOURUM ::
#\[7]K62M4PQ2GIV57QR6P6WOWKLIXJCHAJQ6LINGWJO45OK2E5DNFGCY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
