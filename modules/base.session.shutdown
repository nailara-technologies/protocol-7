## [:< ##

# name  = base.session.shutdown
# descr = terminate a specific client session

my $sid = shift;
my $msg = shift // 'session closed';

if ( not defined $sid or $sid !~ m|^\d+$| ) {
    <[base.log]>->( 0, "base.session.shutdown: expected session id" );
} elsif ( not defined $data{'session'}{$sid} ) {
    <[base.logs]>->(
        0, "base.session.shutdown: session '%s' does not exist", $sid
    );
} else {
    my $session = $data{'session'}{$sid};

    ##  server mode session [ no buffers ]  ##
    if ( $session->{'mode'} eq qw| server | ) {
        <[base.logs]>->( 0, '[%d] server-mode session shutdown', $sid );
        return;
    }

    my $user          = $session->{'user'};
    my $user_exit_cmd = $session->{'user-closing'} // 0;

    my $shutdown_msg = $user_exit_cmd ? "TRUE $msg" : "!TERM! $msg";

    if ( exists $data{'user'}{$user}{'shutdown_msg'} ) {
        $shutdown_msg = $data{'user'}{$user}{'shutdown_msg'};
        $shutdown_msg =~ s|__MSG__|$msg|;
    }
    my $lmsg = $msg eq 'session closed' ? '' : sprintf( ' [ %s ]', $msg );
    <[base.logs]>->( 1, "[%d] session shutdown%s", $sid, $lmsg );
    $session->{'buffer'}->{'output'} .= "$shutdown_msg\n";
    $session->{'flush_shutdown'} = 1;   ##  allow output write to complete  ##
}

#,,,,,.,,,.,,,,,.,,.,,,..,...,.,.,..,,.,.,,,.,..,,...,...,.,.,..,,.,.,.,,,,,,,
#XDREQ6VRASMCFEZXZVBBW4RDFP75CZE7IUT5BD5BGI3DGVU3ND6LTOVFAB5MZXRYJ7RNT3S6XQ6YK
#\\\|UMEE472XQCZVVSKUYVRDZVVZ7LGXT5M2NG64D3PUT3HASPDKAWA \ / AMOS7 \ YOURUM ::
#\[7]FIF4B3U6U5ZPCNRI2BEB5KYTA5XXTA5MRYNVO42L6AU7Z7SMMMCY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
