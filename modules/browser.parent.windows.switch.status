# >:]

# name = browser.parent.windows.switch.status

my $new_status = shift;
die "expected numerical status parameter"
    if not defined $new_status or $new_status !~ /^\d$/;

<browser.use_transparency> //= 1;

my $fg_window = <browser.fg_window>;
my $bg_window = <browser.bg_window>;

$new_status = 2 if !<browser.use_transparency> and $new_status == 1;

if ( $new_status == 1 ) {
    <[base.proto.nailara.command.send.local]>->(
        {   'command'   => "window-$fg_window.fade_out",
            'call_args' => {},
            'reply'     => {
                'handler' => 'browser.parent.windows.switch.answer',
                'params'  => { 'status' => $new_status }
            }
        }
    );
} elsif ( $new_status == 2 ) {
    <[base.proto.nailara.command.send.local]>->(
        {   'command'   => "core.xserver.lower_window",
            'call_args' => { 'args' => <browser.window.id>->{$fg_window} },
            'reply'     => {
                'handler' => 'browser.parent.windows.switch.answer',
                'params'  => { 'status' => $new_status }
            }
        }
    );
    <browser.fg_window> = $bg_window;
    <browser.bg_window> = $fg_window;
} elsif ( $new_status == 3 ) {
    <[base.proto.nailara.command.send.local]>->(
        {   'command'   => "window-$bg_window.opacity",
            'call_args' => { 'args' => 1 },
            'reply'     => {
                'handler' => 'browser.parent.windows.switch.answer',
                'params'  => { 'status' => $new_status }
            }
        }
    );
} elsif ( $new_status == 4 ) {

    <[base.callback.cmd_reply]>->(
        <browser.switch.reply_id>,
        {   'mode' => 'ack',
            'data' => "switch complete"
        }
    );
    delete <browser.switch.reply_id>;
    <browser.switch.status> = 0;
}
