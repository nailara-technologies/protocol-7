# >:]

# name  = root.agent.cmd.spawn
# param = <agent_id|name>
# descr = spawn a new agent instance

my $agent_id;
my $agent_name;
my $recursion
    = (     ref( $_[0] ) eq 'HASH'
        and exists $_[0]->{'recursion'}
        and defined $_[0]->{'recursion'} ) ? $_[0]->{'recursion'} : 0;

return { 'mode' => 'nack', 'data' => 'agent name or id expected' }
    if not defined $$call{'args'}
    or !length( $$call{'args'} );

if ( $$call{'args'} =~ /^\d+$/ ) {
    $agent_id   = $$call{'args'};
    $agent_name = <root.agent.setup>->{$agent_id}->{'name'}
        if exists <root.agent.setup>->{$agent_id};
    return {
        'mode' => 'nack',
        'data' => "found no agent with id $agent_id"
        }
        if not defined $agent_name;
} else {
    $agent_name = $$call{'args'};
}

my $agent_config = <root.spawn_config.agents.config>->{$agent_name};
return {
    'mode' => 'nack',
    'data' => "spawn config contains no agent named '$agent_name'!"
    }
    if not defined $agent_config;

return {
    'mode' => 'nack',
    'data' => 'agent is explicitly disabled in config!'
    }
    if <[agent.is_disabled]>->($agent_name);

<[base.log]>->( 1, "spawning agent '$agent_name'..." ) if !$recursion;

foreach
    my $dep_name ( split( / +/, <[agent.get_dependencies]>->($agent_name) ) ) {
    if ( !<[agent.is_enabled]>->($dep_name) ) {
        <[base.log]>->( 1, "agent enabled: '$dep_name' (dependency)" );
        my $reply = <[agent.cmd.spawn]>
            ->( { 'args' => $dep_name, 'recursion' => $recursion + 1 } );
    }
}

<root.spawn_config.globals.agents.enabled> .= ' ' . $agent_name
    if !<[agent.is_enabled]>->($agent_name);

if ( not defined $agent_id ) {
    foreach my $id ( keys %{<root.agent.setup>} ) {
        $agent_id = $id if <root.agent.setup>->{$id}->{'name'} eq $agent_name;
    }
    $agent_id = <[agent.setup.add]>->( { 'name' => $agent_name } )
        if not defined $agent_id;
}

my $obj_id = <[agent.get_object_id]>->($agent_id);

my $target_queue = <[dependency.ok]>->($obj_id) ? 'queued' : 'depending';

my $job_id = <[jobqueue.add_job]>->(
    {   'object_id'       => $obj_id,
        'job_callback'    => 'agent.spawn',
        'callback_params' => $agent_name,
        'target_queue'    => $target_queue
    }
);

return {
    'mode' => 'ack',
    'data' => "queued as job id $job_id"
    }
