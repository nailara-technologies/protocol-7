# >:]

# name  = root.handler.agent_output
# descr = reads agent console output and triggers commands on matching patterns

<root.patterns.agent_output> //= {};

my $event       = shift->w;
my $read_fh     = $event->fd;
my $instance_id = $event->data;
if ( not exists <root.agent.instance>->{$instance_id} ) {
    $event->cancel;
    close($read_fh);
    <[base.log]>->( 1, "instance $instance_id : output fh closed!" );
    return;
}
my $agent_instance = <root.agent.instance>->{$instance_id};
my $agent_id       = $agent_instance->{'agent_id'};
my $agent_name     = <root.agent.setup>->{$agent_id}->{'name'};

$agent_instance->{'output_buffer'} //= '';

if (sysread(
        $read_fh, $agent_instance->{'output_buffer'},
        4096,     length( $agent_instance->{'output_buffer'} )
    ) == 0    # ( filehandle has an exception )
    ) {
    $event->cancel;
    my $process = $agent_instance->{'process'};
    close($read_fh);
    my $pid = $process->{'id'};
    <[base.log]>->( 1, "( pid $pid ) output fh closed!" );

    undef $agent_instance->{'output_buffer'};
    if (   not exists <agent.instance.shutdown>
        or not exists <agent.instance.shutdown>->{$instance_id} ) {
        <[agent.change_status]>->( $instance_id, 'failed' )
            if $agent_instance->{'status'} eq 'online';
    } else {
        <[agent.change_status]>->( $instance_id, 'shutdown' );
    }
    return;
}

my @matched_names;
my $patterns_output = <root.patterns.agent_output>;
foreach my $a_name ( keys %{$patterns_output} ) {
    push( @matched_names, $a_name )
        if $a_name eq $agent_name    # agent name matches
        or $a_name =~ /^\!(.+)$/ and $1 ne $agent_name; # inverse match (!agent)
}

while ( $agent_instance->{'output_buffer'} =~ s|^([^\n]*)\n||s ) {
    my $output_line = $1;
    print $output_line. "\n" if <system.verbosity>;
    if (@matched_names) {    # matching pattern name exists
        $output_line =~ s/^ :[^\.]+\.$agent_name //;
        foreach my $pattern_name (@matched_names) {
            foreach my $pattern (
                keys %{ <root.patterns.agent_output>->{$pattern_name} } ) {
                if ( my @matches = $output_line =~ $pattern ) {
                    <root.patterns.agent_output>->{$pattern_name}->{$pattern}
                        ->( $instance_id, $agent_name, @matches );
                }
            }
        }
    } else {
        warn "no defined output patterns matching agent '$agent_name'"
            if not exists <root.status.warning>->{"pattern_$agent_name"};
        <root.status.warning>->{"pattern_$agent_name"} = 1;
    }
}
