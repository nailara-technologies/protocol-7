## [:< ##

# name  = base.net.send_to_all_initialized

my $message_string = shift;

if ( not defined $message_string or not length $message_string ) {
    warn 'expected message parameter <{C1}>';
    return undef;
} elsif ( index( $message_string, "\n", 0 ) >= 0
    or $message_string !~ m|^\![A-Z]+\! | ) {
    warn 'message parameter format not valid protocol-7 syntax <{C1}>';
    return undef;
}

my @send_sessions;
foreach my $id ( keys $data{'session'}->%* ) {
    next
        if not defined $data{'session'}{$id}{'initialized'}
        or not $data{'session'}{$id}{'initialized'};

    my $session = $data{'session'}{$id};

    next
        if not defined $session->{'buffer'}->{'output'}
        or not defined $session->{'read-mode'}
        or not defined $session->{'handle'};
    next
        if $session->{'protocol'} ne qw| protocol-7 |
        or $session->{'mode'} ne qw| client |
        or $session->{'read-mode'} ne qw| linewise |;

    my $fh = $session->{'handle'};

    next    ##  incoming connection ?  ##
        if not defined $data{'handle'}{$fh}
        or $data{'handle'}{$fh}{'mode'} ne qw| input |;

    ##  all criteria match [ incoming client connection ]  ##

    push @send_sessions, $id;
}

my $send_count = scalar @send_sessions;
return $send_count if $send_count == 0;

<[base.logs]>->(
    2,           'sending broadcast message to %d initialized session%s .,',
    $send_count, <[base.cnt_s]>->($send_count)
);

## sending broadcast message ##
foreach my $id ( keys $data{'session'}->%* ) {
    my $session = $data{'session'}{$id};
    $session->{'buffer'}->{'output'} .= sprintf "%s\n", $message_string;
}

return $send_count;

#,,..,.,,,.,.,,..,,..,,.,,,,.,..,,,..,.,,,,..,.,.,...,...,,.,,..,,..,,,,,,,.,,
#76IV5HIVTRDTN3APSTKNFQIO3NGS4DJ66W4Y3TJ747UWXIOSZZQD5XQAOYRLNIEOASE4FAXYUKJWO
#\\\|ZZY423T2I3IVATXSPKGYHNHHLUN267DPPOLAFB7TAFO4XXVS53C \ / AMOS7 \ YOURUM ::
#\[7]54TH43OYX4HNJZVYS3O2QLC5XPMZBWDX43WPFTC2MB4XCWOFIWBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
