## [:< ##

# name    = plugin.auth.pwd
# args    = int(session id)
# return  = str(user name) (success), undef [error]

my $id = $_[0]->w->data;
my $re = <regex.base>;

my $input  = \$data{'session'}{$id}{'buffer'}{'input'};
my $output = \$data{'session'}{$id}{'buffer'}{'output'};

if ( $input->$* =~ s|^auth ($re->{usr_str}) (\S+)\n|| ) {

    if ( <[auth.pwd.success]>->( $1, $2 ) ) {
        $output->$* .= "AUTH_TRUE =)\n";
        <[base.log]>->( 1, "[$id] user session authorized to '$1'" );
        return ( 0, $1 );
    } else {
        $output->$* .= "AUTH_ERROR `>:|\n";
        <[base.log]>->( 0, "[$id] [ auth pwd ] access denied to user '$1'" );
        return 2;
    }
} elsif ( $input->$* =~ m|\n| ) {
    $output->$* .= ">:[\n";
    <[base.log]>->( 0, "[$id] authentication protocol mismatch [ pwd ] >:[" );
} else {
    return 1;
}

return 2;

#,,.,,,,,,,,,,.,,,,.,,...,..,,,,.,...,..,,,,,,..,,...,...,,..,..,,.,.,,,.,...,
#CZLRSNKJ6NOH4P53Y5MV2CBWROEQBOHGDQNV7EURGB4VX24TG3L2Z6KE65MFCEKS2WXMFQWVKXMTA
#\\\|OB2O3IOH3QW3OW4HN5SZTCOIE6GP733PTEFMKQOVPSL6Y5I7DUW \ / AMOS7 \ YOURUM ::
#\[7]UOJMUICRVA5P3JOKMGIYZEX3IW3KPGGXH7ODAOFJM4RBBILMZMBY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
