## [:< ##

# name  = crypt.C25519.sig_fnames

my $name      = shift // '';    ## key name ##
my $rkey_name = shift // '';    ##  [optional] signature [base] key name  ##

my $rkey_fname_str
    = length $rkey_name
    ? <[crypt.C25519.key_name_to_skey]>->($rkey_name)
    : '';

if ( not length $name ) {
    warn 'expecting key name param <{C1}>';
    return undef;
} elsif ( $name !~ <crypt.C25519.regex.key_name> ) {
    warn 'key name param containing not valid characters <{C1}>';
    return undef;
} elsif ( $rkey_fname_str !~ <crypt.C25519.regex.signature_key_name> ) {
    warn 'signature key name param containing not valid characters <{C1}>';
    return undef;
}

##  returning .ks and .sk filenames when no base key name  ##
##
if ( not length $rkey_name ) {
    return map { sprintf qw| %s.%s |, $name, $ARG } qw| ks sk |;
}

##  returning .ks.<NAME> and .sk.<NAME> filenames  ##
##
return
    map { sprintf qw| %s.%s.%s |, $name, $ARG, $rkey_fname_str } qw| ks sk |;

#,,.,,,,,,...,..,,..,,,,,,,,.,...,...,,,.,..,,..,,...,...,.,,,...,.,.,,..,,..,
#375TLQONCVZ7JWBMX7VYQCE6ZE3ERIYXR3Q7D2ISD6MJ6IKBHCK4A44IWUQK5Q66KBHPONKWWXICS
#\\\|6HJR7CNK6ZGTLF735JAGUNTWYIS5OA54B2EI6PXMRFV7LD3E5VE \ / AMOS7 \ YOURUM ::
#\[7]Z5MKHUIPEF2OIC7FJY7ZQZ3JTLCSMWM4737EFCYKGVCNVGBSFOCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
