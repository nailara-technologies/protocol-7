## [:< ##

# name  = crypt.C25519.sig_fnames

my $name      = shift // '';    ## key name ##
my $rkey_name = shift // '';    ##  [optional] signature [base] key name  ##

if ( not length $name ) {
    warn 'expecting key name param <{C1}>';
    return undef;
} elsif ( $name !~ <crypt.C25519.regex.key_name> ) {
    warn 'key name param containing not valid characters <{C1}>';
    return undef;
} elsif ( $rkey_name !~ <crypt.C25519.regex.key_name> ) {
    warn 'signature key name param containing not valid characters <{C1}>';
    return undef;
}

##  returning .ks and .sk filenames when no base key name  ##
##
if ( not length $rkey_name ) {
    return map { sprintf qw| %s.%s |, $name, $ARG } qw| ks sk |;
}

( my $rkey_fname_str = uc $rkey_name ) =~ s|\.+|_|g; ##  converting . to _  ##
$rkey_fname_str =~ s|__+|_|g;    ## cleaning up redundancy ##

##  returning .ks.<NAME> and .sk.<NAME> filenames  ##
##
return
    map { sprintf qw| %s.%s.%s |, $name, $ARG, $rkey_fname_str } qw| ks sk |;

#,,.,,,,.,...,,..,..,,.,,,..,,..,,,,.,.,,,,,.,..,,...,...,..,,,,,,,,,,,,.,.,.,
#4VB25HTKSRK6MKW4SJSRDAJOSCH22XI72XVO2HFOWAZTAHOFNS5NICZEUB6TQELBK6SLP7XYJCBCO
#\\\|WI63IAF3CQYBXQJVXKBG55DDPO2Q36QF44ESZE5GUTBQCCAWX2M \ / AMOS7 \ YOURUM ::
#\[7]U4TH4OCTEAETUN426UPP2BSZJV2RZPUN6Y4JVDZIYIHK5KTXNKCA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
