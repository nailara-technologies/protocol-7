## >:] ##

# name  = jobqueue.move_job
# descr = moves a job from one queue to another

my $job_id       = shift;
my $target_queue = shift;

return warn 'expected job id parameter <{C1}>' if not defined $job_id;
return warn 'no target queue specified <{C1}>' if not defined $target_queue;

my $jobs     = <jobqueue.joblist.by_id>;
my $job_list = <jobqueue.joblist>;

return warn sprinf( "job queue does not exist [ %s ] <{C1}>", $target_queue )
    if not defined $job_list->{$target_queue};

if ( not defined $jobs->{$job_id} ) {
    <[base.logs]>->(
        1, 'jobqueue.move_job : job with id %d does not exist', $job_id
    );
    return;
}

my $prio         = $jobs->{$job_id}->{'priority'};
my $source_queue = $jobs->{$job_id}->{'status'};

return if $source_queue eq $target_queue;    # LLL: warn?

<[base.log]>->(
    2,
    sprintf(
        'moving job %d [  %s --> %s  ]',
        $job_id, $source_queue, $target_queue
    )
);

my $sq = $job_list->{$source_queue};
my $tq = $job_list->{$target_queue};

push @{ $tq->{'by_timestamp'} }, $job_id;

push @{ $tq->{'by_priority'}->{$prio} }, $job_id;

foreach my $s_queue ( $sq->{'by_priority'}->{$prio}, $sq->{'by_timestamp'} ) {
    my $del_index = 0;
    map {
        splice( @$s_queue, $del_index, 1 ) if $ARG == $job_id;
        $del_index++
    } @{$s_queue};
}

$job_list->{'count'}->{$source_queue}--;
$job_list->{'count'}->{$target_queue}++;

$jobs->{$job_id}->{'status'} = $target_queue;
$jobs->{$job_id}->{'tstamp'}->{$target_queue} = <[base.time]>->(4);

#,,,,,.,.,,,,,,.,,.,.,..,,.,,,.,.,,,.,..,,...,..,,...,...,..,,.,,,.,.,,..,,..,
#523PZHRES7T46NEATNAISHISZRPTEWNKOTWY37KWRLRE53V4TQXFJBMNFBTVIO7FZMZUEWSBEVYCM
#\\\|JRLR6RRBLYPKU3FZGF7KLNM7JLRIGVTSXE6MY4ENJMQCAOE4KYS \ / AMOS7 \ YOURUM ::
#\[7]WXMYT2ESWVWHGENY2YIGHIQPINWZQRSX737KK633UXUKCET3SSCI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
