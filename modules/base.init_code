# >:]

# name       = base.init_code
# descr      = initialize the base module

use POSIX;

# init some vars

$data{'system'}{'os'}{'name'} = $^O;
$data{'system'}{'process'} = {
    'start' => [base.time:5],
    'pid'   => $$,
    'pname' => $0,
    'uid'   => $<,
    'euid'  => $>,
    'gid'   => $(,
    'egid'  => $)
};

$data{'list'}{'users'} = {
    'var'   => 'data',
    'key'   => 'user',
    'mask'  => 'key:user',
    'descr' => 'connected users'
};

$data{'list'}{'sessions'} = {
    'var'   => 'data',
    'key'   => 'session',
    'mask'  => 'key:id mode proto user',
    'descr' => 'registered sessions'
};

$data{'list'}{'buffers'} = {
    'var'   => 'data',
    'key'   => 'buffer',
    'mask'  => 'key:name size',
    'descr' => 'available buffers'
};

# initialize signal handlers
undef %SIG;

&{ $code{'event.add_signal'} }
  ( { 'signal' => 'INT', 'handler' => 'base.sig_int' } );
&{ $code{'event.add_signal'} }
  ( { 'signal' => 'TERM', 'handler' => 'base.sig_term' } );
&{ $code{'event.add_signal'} }
  ( { 'signal' => 'HUP', 'handler' => 'base.sig_hup' } );
&{ $code{'event.add_signal'} }
  ( { 'signal' => 'ABRT', 'handler' => 'base.sig_abrt' } );

$SIG{__WARN__} = $SIG{__WARN__} = $code{'base.sig_warn'};

# initialize session list

if ( ref( $data{'session'} ) ne 'HASH' ) { $data{'session'} = {} }

$code{'base.list.init'}->(
  {
      'name'         => 'sessions',
      'key_ref'      => \$data{'session'},
      'max_elements' => $data{'limit'}{'max'}{'sessions'}
  }
);

&{ $code{'base.parser.access_conf'} };

# command aliases with source agent name prefixes
if ( defined <setup.aliases.source_agent> ) {
    my @alias_command_list = split /\s+/, <setup.aliases.source_agent>;
    foreach my $alias_cmd (@alias_command_list) {
        $data{'alias'}{$alias_cmd} = "$alias_cmd SOURCE_AGENT";
    }
}

return 0;
