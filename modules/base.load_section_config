# >:]

# name  = base.load_section_config
# args  = [<target_hashref>,] <file_name_pattern(s)>
# descr = load one or more 'section' config files, return hash_ref to values
# note: the way comments are stripped currently doesn't allow #'s in values!

my $conf_path = <system.conf_path>;
my $config_data = {};
$config_data = shift(@ARGV) if ref($ARGV[0]) eq 'HASH';
my @cfg_files = @_;

foreach my $file_path ([file.match_files:$conf_path,@cfg_files]) {
  (my $file_name = $file_path) =~ s/^.*\///g;
  [log.ok:"loading section config '$file_name'"];

  my @cfg_lines;
  [file.slurp:$file_path,\@cfg_lines];
  if ( !@cfg_lines ) {
    [log.failed:"failed to load config file '$file_name'"];
    return undef;
  }

  my $line_num = 0;
  my ($section, $sub_section, $sub_sub_section);
  foreach my $line (@cfg_lines) {
    $line_num++;
    $line =~ s/(\#.*|\s*)*\n$//g;
    $line =~ s/^\s+//;
    next if $line eq '';
    if ($line =~ /^\.:\s*([\w\_\.]+)\s*:\.$/) {
      $section = $1;
      $sub_section = undef;
      $sub_sub_section = undef;
    } elsif ( $line =~ /^-\s*([\w\_\.]+)$/ ) {
      $sub_section = $1;
      $sub_sub_section = undef;
    } elsif ( $line =~ /^:\s*([\w\_\.]+)\s*:$/ ) {
      $sub_sub_section = $1;
    } else {
      if ( $line =~ /^([\w\.\_]+)\s*=\s*([\w\.\_\-<>\[\]\:\,\s]+)+$/ ) {
        if ( defined $section and defined $sub_section
          and defined $sub_sub_section ) {
          $config_data->{$section}{$sub_section}{$sub_sub_section}{$1} = $2;
        } elsif ( defined $section and defined $sub_section ) {
          $config_data->{$section}{$sub_section}{$1} = $2;
        } elsif ( defined $section ) {
          $config_data->{$section}{$1} = $2;
        } else {
          [log.failed:"$file_name: "
            ."no section defined for '$line' (line $line_num)"];
        }
      } else {
        [log.failed:"syntax error in '$file_name' "
          ."at line $line_num ( \"$line\" )"];
      }
    }
  }
}
return $config_data;
