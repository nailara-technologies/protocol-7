## >:] ##

# name  = mod-test.update_blacklist_aref
# descr = removing duplicates from module reload blacklist array reference

my $add_modules = shift;

$add_modules = [$add_modules]
    if defined $add_modules and not length ref $add_modules;

<mod-test.list.blacklisted_modules> //= [];

<mod-test.list.blacklisted_modules> = [
    <[base.sort]>->(
        uniq map { <[base.perlmod.convert.name_to_pm]>->($ARG) }
            <[base.sort]>->(
            <mod-test.list.blacklisted_modules>, $add_modules
            )
    )
];

if (wantarray) {    ##  initializing hashes [ list context ]  ##

    return map { $ARG => 5 } <mod-test.list.blacklisted_modules>->@*;

} else {    ##  returning ARRAY reference in scalar context  ##

    return <mod-test.list.blacklisted_modules>;
}

#,,,,,..,,,,.,,,,,,,.,,,.,,.,,,,.,...,.,,,,..,..,,...,...,.,,,,,,,.,,,.,,,.,.,
#AHRV5ZMV5XVSS5DYG27UR2TNXLTHUUR4BHTGPNNKTKRCG7ZVYYU2QJ4ZYHWV54MY7VJBFFWHKALDW
#\\\|7UYHJZLK7SDQUU7GJM322UGABLBFEEQSI56I7D5L5BJ66YFPQ2I \ / AMOS7 \ YOURUM ::
#\[7]GT4NWRD47MKP43TL5PT5Z5DPSETRRFP6E27CDXO5AZ5TBT6HP4CA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
