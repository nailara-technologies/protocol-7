## [:< ##

# name  = v7.bin_p7_comp_chksum
# descr = parses the binary to find the checksum that is reported by `p7 -dq`

my $p7_bin_path     = shift;
my $checksum_string = shift;

( warn "expected 'p7' binary \\ executable path <{C1}>" and return 0 )
    if not defined $p7_bin_path;
( warn "expected source checksum parameter <{C1}>" and return 0 )
    if not defined $checksum_string;

return 0
    if not -e $p7_bin_path;    ## no binary present \ checksum not found.. ##

( <[base.log]>->( 0, "no read access to '$p7_bin_path'" ) and return 0 )
    if not -r $p7_bin_path;

my $binary_fh;
if ( !open( $binary_fh, join( ' ', '<', ':raw' ), $p7_bin_path ) ) {
    <[base.log]>->( 0, "unable to open '$p7_bin_path' ., [ \l$OS_ERROR ]" );
    return 0;
}

my $checksum_found = 0;
while (<$binary_fh>) {
    if ( index( $ARG, $checksum_string ) >= 0 ) {
        <[base.log]>->( 2, "checksum found in binary [ line $NR ]" );
        $checksum_found = 1;
        last;
    }
}

close($binary_fh);
return $checksum_found;

#,,..,...,,,.,...,..,,.,,,..,,...,.,.,.,.,.,,,..,,...,...,,,.,,,.,...,,.,,,,.,
#SIHRDWQCGMPXOFBDX4P5E3XCPJAEIIQZ33QXNBOOILBEEANIIZMBZELILV32FV37DN4KUM5ASGKGO
#\\\|L2XOUFT3M7LYVXZ2VYH4MGY7F234H3OHGQLK4DOAR2ZV44OAPLK \ / AMOS7 \ YOURUM ::
#\[7]CUN6YOWG6BFMQNNTSKZC2IUASXHLVKW2JMITLVXKW4ZBCMGYMSBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
