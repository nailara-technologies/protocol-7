## [:< ##

# name  = v7.zenka.cmd.register_child
# param = <child-pid>
# descr = associate process ID with its parent instance
# todo  = also extract and set process start_time in process->child->PID = ..,

my $instance_id;
my $child_pid  = $$call{'args'};
my $parent_pid = <[v7.sub-process.get_ppid]>->($child_pid);

foreach my $id (<[v7.instance_ids]>) {
    next if not defined <v7.zenka.instance>->{$id}->{'process'}{'id'};
    my $pid = <v7.zenka.instance>->{$id}->{'process'}{'id'};
    if ( defined $parent_pid and $pid == $parent_pid ) {
        $instance_id = $id;
        last;
    }
}

return { 'mode' => qw| false |, 'data' => 'found no matching parent' }
    if not defined $instance_id;

return { 'mode' => qw| true |, 'data' => 'was known' }
    if exists
    <v7.zenka.instance>->{$instance_id}->{'process'}->{'child'}->{$child_pid};

%{ <v7.child>->{$child_pid} } = %{ <v7.child>->{$parent_pid} };
<v7.child>->{$child_pid}->{'zenka_child'} = 1;

my $instance = <v7.zenka.instance>->{$instance_id};
$instance->{'process'}->{'child'}->{$child_pid} = 1;
<[base.logs]>->(
    '[instance:%d] child pid %d registered.',
    $instance_id, $child_pid
);

return { 'mode' => qw| true |, 'data' => 'registered' };

#,,..,,..,..,,,.,,,,,,,..,.,,,...,..,,...,..,,..,,...,...,..,,,.,,,.,,,..,..,,
#KKLC63IBGHAWOBCBY4GMNE2TVPAPHGK7PAS7MNL7Y2SMSRBMEY2JQJJCWK4ZNBAXP4SAZR75SIDVI
#\\\|YXBY3Z4SZOW2PD4QNHQGNBLYJTGQWF7MTCYFWQZASJE63WKFBGM \ / AMOS7 \ YOURUM ::
#\[7]OWETNV3QZEEKWWVOMRHWJYZGH4G4GO2DLFEF63JZWX3OUEDCXSBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
