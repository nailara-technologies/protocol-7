## [:< ##

# name  = base.cfg_bool
# descr = interprets boolean configuration options and returns TRUE \ FALSE

my $option_value = shift // FALSE;

##  '' | 'n' | 'no' | '0' | 'false'  ##                               <--[ 0 ]
##
return FALSE
    if not length $option_value or $option_value =~ m{^(0|\-1|no?|false)$}i;

##  'y' | 'yes' | '1' | '5' | 'true'  ##                              <--[ 5 ]
##
return TRUE if $option_value =~ m{^(y(es)?|1|5|true)$}i;    ##  5 == true  ##

## otherwise ##
##
<[base.s_warn]>->( "option '%s' not understood <{C1}>", $option_value );

return undef;

#,,.,,...,...,,,.,,,.,...,.,.,...,,,.,,,,,,,.,..,,...,...,...,.,,,,..,..,,,,,,
#G5BIF4I5X2DWDPNJWEBK3SHDQSEE6J64QHCKNSDPPNQWC76UFIHUS5EEHFGX5CWYA2FBD4TMJOZC2
#\\\|RIAUJDNBF735CL2KTLQYR3AN7OSDNCUDA2ULUEXIA5IYSQNN3Y7 \ / AMOS7 \ YOURUM ::
#\[7]KX42S647H7FJA2KNISNN6IXRQDUE5YIARI2VRKFASFCYSKNPQYCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
