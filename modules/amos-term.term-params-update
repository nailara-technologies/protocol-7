## [:< ##

# name  = amos-term.term-params-update
# descr = update <amos-term.term-param> with values from zenka config file

if ( defined <amos-term.term-param> and keys %{<amos-term.term-param>} ) {

    my %replaced;    ## replacing existing options ##
    foreach my $option ( @{<amos-term.xterm-params>} ) {
        if ( $option =~ m|\*(xterm\*)?([^:]{1,20}):(\S+)| ) {
            my $x_key_name = ${^CAPTURE}[1];
            my $c_val      = ${^CAPTURE}[2];
            my $a_key_name = $x_key_name;
            $a_key_name =~ s|(*plb:\w)([A-Z])|-\l$1|g;
            next if not defined <amos-term.term-param>->{$a_key_name};
            next if $c_val eq <amos-term.term-param>->{$a_key_name};
            my $set_value = <amos-term.term-param>->{$a_key_name};
            ## replace existing option ##
            $option =~ s|(*plb::).+$|$set_value|g;
            $replaced{$a_key_name}++;
        }
    }

    my $added = 0;    ## adding not yet defined options ##
    foreach my $a_key_name ( <[base.sort]>->(<amos-term.term-param>) ) {
        next if exists $replaced{$a_key_name};
        ( my $x_key_name = $a_key_name ) =~ s|-([a-z])|\u$1|g;
        push          ## append xterm option ##
            @{<amos-term.xterm-params>},
            sprintf( '%s:%s',
            $x_key_name, <amos-term.term-param>->{$a_key_name} );
        $added++;
    }
    @{<amos-term.xterm-params>} = <[base.sort]>->(<amos-term.xterm-params>)
        if $added;

    ##  return number of changes \ additions  ##
    return scalar( keys %replaced ) + $added;
}

return 0;    ## no changes ##

#,,.,,,..,.,.,,,,,.,.,...,,,,,,,.,..,,.,.,.,.,..,,...,...,...,,..,.,.,.,.,,.,,
#SHMTHD2YCD676QTMGTT3YFFRDJNOALB3LONOK23OBLHJHKSNOYV2YTWDXLVEQVYKFJZOBRBNSBJYS
#\\\|L3I2KEZPKWNGHGJ6GE57WKK7H4RJ2SLI2Z4S4ZK4YMMWH7Z236Q \ / AMOS7 \ YOURUM ::
#\[7]HGINR5JLPK6SKZAC3T5CUABMSMO6WEUVG4VVK747AWD6KMBLPCBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
