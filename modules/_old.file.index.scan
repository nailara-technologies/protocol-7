# >:]

# name       = file.index.scan

my $count_files = 0;
if ( %{ $data{'file'}{'id'} } ) {
    undef %{ $data{'file'}{'id'} };
    delete $data{'file'}{'id'};
}
if ( %{ $data{'file'}{'index'} } ) {
    undef %{ $data{'file'}{'index'} };
    delete $data{'file'}{'index'};
}
if ( -d $data{'file'}{'dir'} ) {
    foreach
        my $filename ( @{ &{$code{'file.tree'}}( $data{'file'}{'dir'} ) } )
    {
        next
            if -d $data{'file'}{'dir'}
                . $filename;    # XXX: add dir header later
        &{ $code{'base.log'} }( 2, "scanning file: $filename" );

        if ( $filename =~ /\/?([0-9a-f]+)-([0-9a-z]+)$/ ) {
            ( my $nf_header_hash, my $nf_payload_hash ) = ( $1, $2 );

            print "[HEADER] $nf_header_hash\n[PAYLOAD] $nf_payload_hash\n";

            if ( &{ $code{'file.index.header'} }($filename) ) {
                $count_files++;
            }

        }
        else {

            if ( &{ $code{'file.index.no_header'} }($filename) ) {
                $count_files++;
            }

        }
    }
    return $count_files;
}
else {
    &{ $code{'base.log'} }( 0,
        "invalid file storage path '" . $data{'file'}{'dir'} . "'" );
    return 0;
}
