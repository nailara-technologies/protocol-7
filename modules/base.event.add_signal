## [:< ##

# name  = base.event.add_signal
# descr = assigns new signal handler and cancels old one if it existed

my $params    = shift;
my $log_level = shift // 2;

my $signal  = $params->{'signal'};
my $handler = $params->{'handler'};

my $callback;

if ( defined $handler and defined $code{$handler} ) {

    ##  wrapped for reloading source code  ##
    $callback = sub { $code{$handler}->() };

} elsif ( not defined $handler and defined $params->{'cb'} ) {
    $callback = $params->{'cb'};
} elsif ( defined $handler ) {
    <[base.s_warn]>->( "nonexistent callback '%s' configured", $handler );
    return undef;
} elsif ( not defined $handler and not defined $params->{'cb'} ) {
    warn 'no handler \ callback for signal event defined <{C1}>';
    return undef;
}
<watcher.signal> //= {};

<watcher.signal>->{$signal}->cancel if exists <watcher.signal>->{$signal};

if ( defined $SIG{$signal} ) {
    <[base.logs]>->( $log_level, 'unregistering $SIG{%s} ..,', $signal );
    undef $SIG{$signal};
}
if ( defined $handler ) {
    <[base.logs]>->(
        $log_level, 'setting up handler %s for signal %s .,',
        $handler,   $signal
    );
} else {
    <[base.logs]>->(
        $log_level, 'setting up signal %s handler with custom cb .,', $signal
    );
}

eval {
    <watcher.signal>->{$signal} = Event->signal(
        'signal' => $signal,
        'cb'     => $callback,
        'desc'   => sprintf( 'signal handler [%s]', $signal ),
        'prio'   => 0
    );
};

if ( length $EVAL_ERROR ) {
    delete <watcher.signal>->{$signal};
    <[base.s_warn]>->( '%s <{C1}>', <[base.str.eval_error]> );
    return undef;
}

return <watcher.signal>->{$signal};

#,,,.,,..,,.,,,,,,.,,,,..,,,,,...,,..,,,,,...,..,,...,...,.,.,...,,,.,,,,,.,,,
#RU4FBFMUMWW62462KWQBWBWRXED3X5FHLX6UIJ3TFRNOQBXEGVIVCIZDHCMIIMPOWQIHZUSHQXCIG
#\\\|7ZS3RXLZBCDDBUWNBAZK3PRVBKAJ3PM3ZD4E4RZMV7YCFDSG3UZ \ / AMOS7 \ YOURUM ::
#\[7]OKO7UURTNPOYDXSU2B7A7FPRPRJ6N2NCS4F2RQNRKHEMBJ3KJGCA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
