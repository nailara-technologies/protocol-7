## [:< ##

# name  = X-11.cmd.get_geometry
# param = <w_id>
# descr = return window position, width and height

my $window_id = $$call{'args'};

return { 'mode' => qw| false |, 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => qw| false |, 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <X-11.WM>;
<[X-11.update_X11_WM]>;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => qw| false |, 'data' => 'no such window' }
    if not defined $window;

return { 'mode' => qw| true |, 'data' => join( ' ', $window->geometry ) };

#,,.,,,,.,..,,,.,,,.,,...,.,.,,,.,.,,,.,,,,..,..,,...,...,...,,,.,.,,,,,,,...,
#7QC57LLE72OVP3M3MXD4Q7MOY5QGERBHM7ROBMGFMOFKKNT6UKW7DO4SL4VHSXPS4U25VTNI6OZP6
#\\\|QFTP23A7FMHOQXW25M2HZWIXWQS24TOHYJEIRELEHKEQ6J7PFQD \ / AMOS7 \ YOURUM ::
#\[7]KHKU3EPVZU6C4EEUNEAQRQ2JQDGXSQE5XUYYHLVPM4FJK4P73YAY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
