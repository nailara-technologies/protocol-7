## [:< ##

# name  = screenshot.cmd.get_region_color
# param = <X1> <Y1> <X2> <Y2>
# descr = return average color for given region

my $param_str = shift->{'args'} // '';
return {
    'mode' => qw| false |,
    'data' => 'expected valid region coordinates'
    }
    if $param_str !~ /^(\d+ +){3}\d+$/;
my @coords = ( split( / +/, $param_str ) );

my $img     = <[screenshot.grab_region]>->(@coords);
my $err_str = $img if ref($img) ne 'Imager';

$img = <[screenshot.scale_image]>->( $img, 1, 1 ) if not defined $err_str;
my $err_str = $img if not defined $err_str and ref($img) ne 'Imager';

my @RGB     = <[screenshot.pixel_color]>->( $img, 0, 0 );
my $err_str = shift @RGB if @RGB == 1;

return {
    'mode' => qw| false |,
    'data' => "unable to acquire region color [ $err_str ]"
    }
    if defined $err_str;

pop(@RGB);    # removing alpha

return { 'mode' => qw| true |, 'data' => sprintf( '#%02X%02X%02X', @RGB ) };

#,,,,,,..,,,.,...,,,.,,,.,,,.,,.,,.,,,,.,,...,..,,...,...,,,.,.,.,,,,,,,,,,..,
#VKRG5WD4RZC3IYC7UNI654DKRUVCEK4X353T5YFIZ6ASP3NSLH37FT6CQK4EYGOQIV7F5UCCYQJAK
#\\\|UEYTUKGOBIEXCP46HKF4PYAU34D7FHZ42LJUHQAT3FY6I3SNPRR \ / AMOS7 \ YOURUM ::
#\[7]LBWQX6AUXRGRJJ3D45X5BZYWA5AZLTPOPV5Z5DBF5XQELNSKIOAQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
