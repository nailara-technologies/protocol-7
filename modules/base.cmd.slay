# >:]

# name    = base.cmd.slay
# descr   = close all sessions of specified user
# param   = <user> [message]

if ( $$call{'args'} =~ /^(\w+)\s?(.*)$/ ) {
    my $usr          = $1;
    my $slay_message = $2 || 'session terminated!';
    my $killed       = 0;
    my $killed_own   = 0;

    if ( $usr =~ /\s/ ) { ( $usr, $slay_message ) = split( /\s/, $usr, 2 ) }

    if ( exists $data{'user'}{$usr}{'session'} ) {
        my $msg_string = $slay_message;
        <[base.log]>->( 2, "slaying of user '$usr' requested!" );
        foreach my $sid ( keys %{ $data{'session'} } ) {
            if ( $data{'session'}{$sid}{'user'} eq $usr ) {
                if ( $call->{'session_id'} eq $sid ) {
                    $killed_own = 1;
                    $msg_string = "you've terminated your own session!"
                        if keys( %{ $data{'user'}{$usr}{'session'} } ) == 1;
                } else {
                    <[base.session.shutdown]>->( $sid, $msg_string );
                }
                <[base.log]>->( 0, "slaying session $sid ($usr)" );
                $killed++;
            }
        }
        my $s = $killed > 1 ? 's' : '';
        my $reply_string = "terminated $killed session$s";
        <[base.log]>->( 0, $reply_string ) if $killed;
        my $yours_str = 'yours included';
        $yours_str = 'yours' if $killed == 1;
        $reply_string .= " ($yours_str)" if $killed_own;
        $reply_string = $msg_string if $killed_own and $killed == 1;
        return {
            'mode' => $killed_own ? 'shutdown' : 'ack',
            'data' => $reply_string
        };
    } else {
        return { 'mode' => 'nack', 'data' => "found no such user ($usr)" };
    }
} else {
    $$reply{'data'} = 'invalid username';
}

