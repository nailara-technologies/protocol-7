# >:]

# name    = base.cmd.slay
# descr   = close all sessions of specified user
# param   = <user> [message]

if ( $$call{'args'} =~ /^(\w+)\s?(.*)$/ ) {
    my $usr          = $1;
    my $slay_message = $2 || 'session terminated!';
    my $killed       = 0;
    my $killed_own   = 0;

    if ( $usr =~ /\s/ ) { ( $usr, $slay_message ) = split( /\s/, $usr, 2 ) }

    if ( exists $data{'user'}{$usr}{'session'} ) {

        $code{'base.log'}->( 2, "slaying of user '$usr' requested!" );

        foreach my $sid ( keys %{ $data{'session'} } ) {
            if ( $data{'session'}{$sid}{'user'} eq $usr ) {
                my $msg = $slay_message;
                if ( $call->{'session_id'} eq $sid ) {
                    $killed_own = 1;
                    $msg        = "you've terminated your own session!";
                }
                $code{'base.session.shutdown'}->( $sid, $msg );
                $code{'base.log'}->( 0, "slayed session $sid ($usr)" );
                $killed++;
            }
        }
        my $s = $killed > 1 ? 's' : '';
        my $ack_msg = "terminated $killed session$s";
        $code{'base.log'}->( 0, $ack_msg ) if $killed;
        my $yours_str = 'yours included';
        $yours_str = 'yours' if $killed == 1;
        $ack_msg .= " ($yours_str)" if $killed_own;
        return { 'mode' => 'ack', 'data' => $ack_msg };
    } else {
        return { 'mode' => 'nack', 'data' => "found no such user ($usr)" };
    }
} else {
    $$reply{'data'} = 'invalid username';
}

