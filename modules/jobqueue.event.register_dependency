# >:]

# name  = jobqueue.event.register_dependency
# descr = installs event watcher for (current) job dependencies

my ( $job_id, $depends_on_job_ids ) = ( shift, join( ' ', @_ ) );
die "no job id specified"               if not defined $job_id;
die "no dependency job id[s] specified" if not defined $depends_on_job_ids;

<watcher.dependencies> //= {};
my $watchers = <watcher.dependencies>;

<jobqueue.depending.job_id> //= {};
my $status = <root.agent.status>;

$depends_on_job_ids =~ s/^\s+|\s+$//g;
my @dependency_jobs = split( /\s+/, $depends_on_job_ids );
$status->{$job_id} = join( ' ', @dependency_jobs );

foreach my $d_job_id (@dependency_jobs) {

    my $job = <jobqueue.joblist.by_id>->{$d_job_id};
    next if $job->{'name'} ne 'agent.spawn';
    my $agent = $job->{'callback_params'};

    if ( exists $watchers->{$job_id} ) {
        $watchers->{$job_id}->cancel;
    }

    $status->{$agent} = 'undefined' if not exists $status->{$agent};
    $watchers->{$job_id} = <[event.add_var]>->(
        {   'var'     => \$status->{$agent},
            'handler' => 'jobqueue.handler.dependencies',
            'poll'    => 'w',
            'data'    => [ $job_id, $agent, $depends_on_job_ids ],
            'prio'    => 0,
            'desc'    => "job '$job_id' dependencies"
        }
    );
    $watchers->{$job_id}->start;
}

print "PASS 1\n";
