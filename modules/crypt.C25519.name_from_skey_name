## [:< ##

# name  = crypt.C25519.name_from_skey_name
# descr = convert from [signature] key name [file suffix] format to key name

my $name      = shift // '';
my $name_copy = $name;         ##  keep copy for testing  ##

if ( not length $name ) {
    warn "expecting key name param <{C1}>";
    return undef;
}

$name = lc $name;              ## make lowercase ##

$name =~ s|\_|.|g;             ##  convert _ to .  ##

if ( $name !~ m|^<crypt.C25519.regex.key_name>$| ) {
    warn 'signature key name param containing not valid characters <{C1}>';
    return undef;
} elsif ( $name =~ m|__| or $name =~ m<^[\W\.]|[\W\.]$> ) {
    warn 'key name param contains not valid character sequence[s] <{C1}>';
    return undef;
}

if ( [ caller(0) ]->[1] ne qw| crypt.C25519.key_name_to_skey | ) {
    ##  reverse conversion check if new name is valid  ##
    if ( $name_copy =~ m|<crypt.C25519.regex.signature_key_name>|
        and <[crypt.C25519.key_name_to_skey]>->($name) ne $name_copy ) {
        warn 'signature key name not valid [ reverse conversion ] <{C1}>';
        return undef;
    }
}

return $name;    ##  returning converted name string  ##

#,,..,...,,..,.,.,.,,,...,,.,,,.,,...,,,.,.,,,..,,...,...,.,,,,,.,.,.,,,,,,.,,
#47XKTLN2R7EVMPQIY5YECS3WZD5E4P5OTTU7IOJHFM2NM52MRG5W5QZ4BQATTTKXE7G4ZWAT5I4PQ
#\\\|3GBBDKRQTQLWGEXDAXUOQXFEJRSJ4W4FH3IHFAC5FHKRZYIQMBX \ / AMOS7 \ YOURUM ::
#\[7]RVLKW6AQWYCNBVZLMZLNHWNGIBJJ32XY4HAPSVPUQWWXGKMYMEBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
