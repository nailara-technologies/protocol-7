# >:]

# name = layout.handler.fade_out

my $event  = shift->w;
my $params = $event->data;

$ENV{'DISPLAY'} = <x11.display> if exists <x11.display>;

my ( $layout_name, $agent_name, $opacity, $window_ids, $instance_ids ) = (
    $params->{'layout_name'}, $params->{'agent_name'},
    $params->{'opacity'},      $params->{'window_ids'},
    $params->{'instance_ids'}
);

<layout.opacity>->{$window_ids} //= $opacity;

#<layout.opacity>->{$window_ids}
#    = sprintf( "%.2f", <layout.opacity>->{$window_ids} - 0.02 );

<layout.opacity>->{$window_ids}
    -= ( 0.0135 + ( <layout.opacity>->{$window_ids} / 27.5 ) );
<layout.opacity>->{$window_ids}
    = sprintf( "%.3f", <layout.opacity>->{$window_ids} );

#print "[fade_and_remove] " . <layout.opacity>->{$window_ids} . "\n";

if ( <layout.opacity>->{$window_ids} > 0 ) {
    map {
        <[base.x11.set_window_opacity]>->(
            $_, int( <layout.opacity>->{$window_ids} * 100 )
            )
    } @{$window_ids};
} else {
    <[base.log]>->( 2, "fade out complete!" );
    $event->cancel;
    my $callback = delete $params->{'callback'};
    $code{$callback}->($params);
}
