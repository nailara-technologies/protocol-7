## >:] ##

# name  = crypt.C25519.get_keyname
# descr = return key name of given key filename

my $C25519_filename = shift // '';

if ( not length $C25519_filename ) {
    warn 'expected key filename parameter <{C1}>';
    return undef;
}

if ( $C25519_filename =~ m|^:\.virtual\.::(.+)$| )  ##[ description ]##
{
    return $LAST_PAREN_MATCH;
}

foreach my $type ( keys <crypt.C25519.regex.key_file>->%* ) {
    return $LAST_PAREN_MATCH
        if $C25519_filename =~ <crypt.C25519.regex.key_file>->{$type};
}

<[base.s_warn]>->(
    'key file %s does not match any defined type <{C1}>',
    $C25519_filename
);

return undef;

#,,.,,,,,,,.,,,,.,,,,,..,,,..,...,...,.,,,,,.,..,,...,...,.,,,..,,...,,,,,.,.,
#3ZW2FGDGQJMDT75A6LOTWZS7YCPH4AOLNXIOM6XEDTRBXCRFJSDQ6WVPMWLKWSDSQR73KARTOVXWY
#\\\|2XPVXW75GC7EKK4C4QDWOE2J52ELULKNZC6E7VZGWHLPAP5GJBA \ / AMOS7 \ YOURUM ::
#\[7]DQDRO4HDGCQBLPIREWFYLLCA56S34JVEAFC2WHYQUGFAOR2PE6CI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
