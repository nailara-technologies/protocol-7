## [:< ##

# name  = crypt.C25519.get_keyname
# descr = return key name of given key filename

my $C25519_filename = shift // '';

$C25519_filename =~ s|^.*/||;    ##  removing directory path compotent  ##

if ( not length $C25519_filename ) {
    warn 'expected key filename parameter <{C1}>';
    return undef;
}

if ( $C25519_filename =~ m|^:\.virtual\.::(.+)$| )    ##[ description ]##
{
    return $LAST_PAREN_MATCH;
}

foreach my $type ( keys <crypt.C25519.regex.key_file>->%* ) {
    return $LAST_PAREN_MATCH
        if $C25519_filename =~ <crypt.C25519.regex.key_file>->{$type};
}

<[base.s_warn]>->(
    'key file %s does not match any defined type <{C1}>',
    $C25519_filename
);

return undef;

#,,..,,,,,,.,,,,,,,.,,,,.,.,.,,,,,..,,,..,,,,,..,,...,...,.,,,...,..,,.,,,...,
#OFXD3KFNSL734VCZKVKECFHGNUN2DQXFL3OK2WCJ3AT3SGP434KKT6654MDOUZSBWR3ZSUZQOWEVM
#\\\|VYFIMXTUUHVQ5IKLHGDJ3LQKBJM7FPX6WDM4K3MWKGOLDD3N62A \ / AMOS7 \ YOURUM ::
#\[7]J33ROCO54PIXTSSLG2B6BBJ3FSB4GTP4KRZIUEVTIJRGFGQMY4CY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
