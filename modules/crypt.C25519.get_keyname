## [:< ##

# name  = crypt.C25519.get_keyname
# descr = return key name of given key filename

my $C25519_filename = shift // '';

if ( not length $C25519_filename ) {
    warn 'expected key filename parameter <{C1}>';
    return undef;
}

if ( $C25519_filename =~ m|^:\.virtual\.::(.+)$| )  ##[ description ]##
{
    return $LAST_PAREN_MATCH;
}

foreach my $type ( keys <crypt.C25519.regex.key_file>->%* ) {
    return $LAST_PAREN_MATCH
        if $C25519_filename =~ <crypt.C25519.regex.key_file>->{$type};
}

<[base.s_warn]>->(
    'key file %s does not match any defined type <{C1}>',
    $C25519_filename
);

return undef;

#,,.,,,,,,..,,,,.,...,..,,,,.,..,,.,,,,.,,..,,..,,...,...,.,.,,,.,,,.,.,.,..,,
#PET6ZYLHCE3J7CNQBL73VVHFU5UVMWCY27FABVUWM4ABTF7CJJSH3BV3JQKRFC4ACLEJ2JPA42CHW
#\\\|J52O6KPSMS67U553TMAC5XFNQ7VPUJHBO2XNKGDLAQQUT4GUNTR \ / AMOS7 \ YOURUM ::
#\[7]RE47YHEW463MUXF4STCNO4PPXDL6IGSIVFL3BDESIIF446CCEKBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
