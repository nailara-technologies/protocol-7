## [:< ##

# name  = keys.pack_format.user_key_archive

my $key_archive_str = "## [:< ##\n#.\n";
return undef if not my @k_files = @ARG ? @ARG : <[crypt.C25519.keyfiles]>;

foreach my $keyfile_abs_path (@k_files) {
    ( my $file = $keyfile_abs_path ) =~ s|^.+/||;
    my $keyfile_b32_ref = <[file.slurp]>->($keyfile_abs_path);
    if ( ref $keyfile_b32_ref ne qw| SCALAR |
        or not length $keyfile_b32_ref->$* ) {
        <[base.s_warn]>->( 'cannot read key %s', $file );
        return undef;
    }
    $keyfile_b32_ref->$* =~ s|\n|\\n|g;    ##  preserving linefeeds  ##

    $key_archive_str .= sprintf "['%s']%s\n", $file, $keyfile_b32_ref->$*;
}

$key_archive_str .= "#.\n#.::\n";

return \$key_archive_str;

#,,..,.,,,.,.,..,,,,,,,..,...,,.,,.,,,,..,...,..,,...,...,,,,,,,.,,,,,,,,,,,.,
#XZC23Y66ULTYFLHOYLWUK3HQQYQJ4I2P6F4BS4SSXQCCIMDNYOLWPTQVBU34EZDAP4XZRL43ZDRUK
#\\\|AGBJJZQULEDDURLEQSVOXF4AED2H6GHVQSH662V57WQKINUTVAW \ / AMOS7 \ YOURUM ::
#\[7]A73T33ILGZOX4JDT72LIBOEZHUQ7PGZRARNRT5ZDS2VJZCHLIWAA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
