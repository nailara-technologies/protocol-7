# >:]

# name = browser.gtk3.init_code

no warnings 'all';
use Gtk3;
use Gtk3::WebKit;
use warnings;

Gtk3::WebKit::set_cache_model('WEBKIT_CACHE_MODEL_DOCUMENT_VIEWER');

if (<browser.init_proxy>) {
    require HTTP::Soup;
    my $proxy_addr = <browser.cfg.proxy_addr>;
    my $proxy_port = <browser.cfg.proxy_port>;
    my $session    = Gtk3::WebKit::get_default_session();
    my $proxy_uri  = HTTP::Soup::URI->new("http://$proxy_addr:$proxy_port");
    $session->set( 'proxy-uri' => $proxy_uri );
}

<browser.zoom_level>     //= 1;
<browser.zoom_factor>    //= 1;    # adjusts configured or calculated zoom level
<browser.zoom_text_only> //= 0;

<browser.slideshow.no_scroll>   //= 0;
<browser.slideshow.no_switch>   //= 0;
<browser.cfg.links_clickable>   //= 0;
<browser.cfg.allow_text_edit>   //= 0;
<browser.cfg.allow_scrollbars>  //= 0;
<browser.cfg.overlay_scrolling> //= 1;

<[base.disable_command]>->('verify_instance');

if (defined <system.agent.subname>    # configurable per layout tile name
    and defined <browser.cfg.subname>->{<system.agent.subname>}
    ) {
    <browser.zoom_factor>
        = <browser.cfg.subname>->{<system.agent.subname>}->{'zoom_factor'}
        if defined
        <browser.cfg.subname>->{<system.agent.subname>}->{'zoom_factor'};
}

0;
