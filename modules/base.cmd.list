## [:< ##

# name  = base.cmd.list
# param = [list_name]
# descr = display named lists with content

my $list_name = $call->{'args'};

if ( not defined $list_name ) {    ## list overview [ no name specified ] ##
    return {
        qw| mode | => qw| size |,
        qw| data | => <[base.parser.list]>->(
            {   qw| var |   => qw| data |,
                qw| key |   => qw| list |,
                qw| mask |  => [qw| <key>:list_name descr:description |],
                qw| align | => { qw| list_name | => qw| right+5 | },
            }
        )
    };
}

my $list_nam_chars = qw| \w\d\- |; ## valid characters ## [ expand as needed ]

if ( $list_name =~ m|^[$list_nam_chars]+$|
    and defined $data{'list'}->{$list_name} ) {

    my $list = $data{'list'}->{$list_name};

    $list->{'mask'} //= sprintf qw| <key>:%s |, $list->{'key'};

    return {
        qw| mode | => qw| size |,
        qw| data | => <[base.parser.list]>->(
            {   qw| var      | => $list->{'var'},
                qw| key      | => $list->{'key'},
                qw| sub_key  | => $list->{'sub_key'},
                qw| sort_key | => $list->{'sort_key'},
                qw| defaults | => $list->{'defaults'},
                qw| filters  | => $list->{'filters'},
                qw| align    | => $list->{'align'},
                qw| mask     | => [ split( m| +|, $list->{'mask'} ) ]
            }
        )
    };
} elsif ( $list_name =~ m|([^$list_nam_chars])| ) {
    $reply->{'data'} = sprintf 'not valid character in list name [ %s ]',
        $LAST_PAREN_MATCH;
} else {
    $reply->{'data'} = "no such list [ see 'list' command ]";
}

#,,,.,..,,,,,,...,,,,,..,,,,.,.,.,.,.,,,.,.,.,..,,...,..,,.,.,.,.,..,,,.,,,,.,
#N2SIIWXKOS5DFCK2MVJOP3GNPYKF73NC2SE3PCKZ6LGDP25IMP5PZNHKQOGOU45S2IQ7BQO4ZKAIG
#\\\|EG4JV3IOQPA4VJPHWIU46OQR7AB2VKNSQLQNJLI2HOECJGS5KCZ \ / AMOS7 \ YOURUM ::
#\[7]4LJJGRQOBKSDQYX4VKLN3CBFWYIPFLTVTB4FZX5A75TNPRGVBUCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
