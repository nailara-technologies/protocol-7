## [:< ##

# name  = fs.cmd.unmount
# param = <mount-point>
# descr = mount the specified device / filesystem

my $mount_point = $$call{'args'};
return { 'mode' => qw| false |, 'data' => 'expected mount-point parameter' }
    if not defined $mount_point;
$mount_point =~ s|/+$|| if length($mount_point) > 1;
return {
    'mode' => qw| false |,
    'data' => 'specified mount-point does not exist'
    }
    if !-d $mount_point;

my $status = <[fs.is_mounted]>->($mount_point);

return {
    'mode' => qw| false |,
    'data' => "no filesystem mounted on $mount_point"
    }
    if $status != 1;

<[base.log]>->( 1, "unmounting '$mount_point'.." );
my $msg = 'unmounted';
if ( system( '/bin/umount', $mount_point ) != 0 ) {
    <[base.log]>->( 0, ": unable to unmount '$mount_point', using force!" );
    $msg = 'unmounted [forced!]';
    if ( system( '/bin/umount', '-f', '-l', $mount_point ) != 0
        or <[fs.is_mounted]>->($mount_point) ) {
        <[base.log]>->( 0, ": forced unmount of '$mount_point' failed!" );
        return { 'mode' => qw| false |, 'data' => 'unmount failed!' };
    } else {
        <[base.log]>->( 1, ": : forced unmount was successful" );
    }
}

return { 'mode' => qw| true |, 'data' => $msg };

#,,,.,...,.,,,...,,,.,..,,,..,.,,,,.,,.,.,,,,,..,,...,...,...,,,.,,,.,...,,.,,
#XEUUM242VKNG45JTVW4SRKCFOF32A6EIKXDWBYMAFM5RSS2RPVE4FGCEIHUPNADNFLAK57GE5XIE6
#\\\|7CPGTGOWSPSZEUGSEJNRUICCSNBIQ4B6QK7NLW3NTJER2HKFNOZ \ / AMOS7 \ YOURUM ::
#\[7]WCILAZTMUKESCWADTS5WDRUEYE7SZVRZT4KY24JQRCNGKU6OJYBQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
