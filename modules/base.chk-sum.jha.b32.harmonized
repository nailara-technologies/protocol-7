## [:< ##

# name  = base.chk-sum.jha.b32.harmonized
# descr = returns harmonized BASE32 encoded jhash value

my $num_sum = Digest::JHash::jhash( join '', @ARG );

my $sum_encoded;
my $recalc = FALSE;

RECALC_CSUM:

while ( $recalc or not AMOS7::Assert::Truth::true_int($num_sum) ) {
    $recalc = FALSE;
    my $template = sprintf qw| %%s:%s |, $num_sum;
    ##  make it a true value with entropy from previous checksum  ##
    $num_sum = Digest::JHash::jhash( sprintf( $template, join( '', @ARG ) ) );
}

$sum_encoded = Crypt::Misc::encode_b32r( pack( qw| N |, $num_sum ) );

if ( not AMOS7::Assert::Truth::is_true( $sum_encoded, 0, 1 ) ) {
    ##  also harmonize encoded string  ##
    $recalc = TRUE;
    goto RECALC_CSUM;
}

return $sum_encoded;    ## true ##

#,,,.,,,,,..,,,,.,,,,,..,,.,.,.,,,...,,,.,,,,,..,,...,...,..,,.,.,,..,,..,.,.,
#SOG2F3FVDONLUKMPJF2CNP2BBN55WRHDO6VZOOWYSH7QNDOBTUZGV6HWHMSUU5MCR7QBXRIULL2OG
#\\\|5PNAHXI6D4INFPENJ2MKVHTFAUNW3WBCAVYEV55ESAR7W6PUB4B \ / AMOS7 \ YOURUM ::
#\[7]RN3NYGFYFIIHF43D5YJXDPZLTQMIXAQ7PZWS2QSVIACPN3LXIYBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
