## >:] ##

# name  = X-11.cmd.unhide_window
# param = <w_id>
# descr = unhide specified window

my $X         = <X-11.obj>;
my $window_id = $$call{'args'};

return { 'mode' => qw| false |, 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => qw| false |, 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ m|^\d+$|;

return { 'mode' => qw| false |, 'data' => 'no such window' }
    if not <[X-11.window_id_found]>->($window_id);

<[base.log]>->( 2, "unhiding window $window_id" );
eval {
    for ( 0 .. 1 ) {    # <-- workaround [ ignored state requests ]
        X11::Protocol::WM::change_net_wm_state( $X, $window_id, 'remove',
            'HIDDEN' );
    }
};

return { 'mode' => qw| false |, 'data' => "unable to remove 'hidden' state" }
    if $EVAL_ERROR;
return { 'mode' => qw| true |, 'data' => "removed 'hidden' window state" };

#,,..,..,,...,.,,,..,,..,,.,.,.,.,.,,,,..,,,,,..,,...,...,..,,,,,,,..,,.,,,.,,
#JWDJJCUOQSR4TC46IAPE7XDB7XHW2GRDWTMHSWKY25EYKAH65CMME5YENYHYTIUHNGX7IZ64NG2BS
#\\\|ZJAKCNSHMB6O26WC65WTK4C6WHT6Y3QJPXDINDPJIT2JPCZHVLF \ / AMOS7 \ YOURUM ::
#\[7]MTVV7LKV6XYKHMGSKFC2SZYDBZ5CMMXAKQKW3SOQHZM62VTIOWCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
