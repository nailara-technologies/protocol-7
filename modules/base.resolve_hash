## >:] ##

# name  = base.resolve_hash
# descr = translate 'system.zenka.name' type key to \%data ref and return it

my $key_ref      = *data{HASH};
my $data_key_str = $ARG[0] // '';

my $quoted_key = 0;
if ( index( $data_key_str, qw| ' |, 0 ) >= 0 ) {    ## quoted '.' syntax ##
    $quoted_key = 5                                 ## true ##
        if $data_key_str =~ s{(^|\.)(*nlb:\\)'(.+)(*nlb:\\)'(\.|$)}{
                                my $k = $1; $k =~ s|\.|\0|g;
                             }e;
}

foreach my $sub_key ( split( '\.', $data_key_str ) ) {
    $data_key_str =~ s|\0|.|g if $quoted_key;
    next                      if not exists $key_ref->{$sub_key};

    if ( ref $key_ref->{$sub_key} eq qw| HASH | ) {
        ## hashref, continue ##
        $key_ref = \%{ $key_ref->{$sub_key} };

    } elsif ( length ref $key_ref->{$sub_key} ) {
        ## return reference if not hash ref ##
        return $key_ref->{$sub_key};

    } else {
        return \$key_ref->{$sub_key};    ## return scalar ref if a value ##
    }
}

return $key_ref;

#,,..,..,,,,,,...,,,,,...,.,.,.,,,.,,,,,,,..,,..,,...,...,,..,,,,,.,.,,,.,,,.,
#K5W44YGAA3MF2TXAFKMGTRKAYZVSSJP7G2UIJKVZHCZMHISNZC763YHWTH5GNZVSHXH32GNWI53AW
#\\\|PGAAGQMGZE3ZA6ORADEHYB4ODSI4ZDCZVFFAV3L6N57THFTCE36 \ / AMOS7 \ YOURUM ::
#\[7]RRA474IVBU4X4Z3K2NFG3UY46F4KWUEYQKC6EUNRY4YDHI53YGCI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
