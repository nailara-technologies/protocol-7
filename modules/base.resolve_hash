## [:< ##

# name  = base.resolve_hash
# descr = translate 'system.zenka.name' type key to \%data ref and return it

my $data_key_str = $ARG[0] // '';
my $key_ref      = $ARG[1] // *data{HASH};

my $quoted_key = FALSE;
if ( index( $data_key_str, qw| ' |, 0 ) >= 0 ) {    ## quoted '.' syntax ##
    $quoted_key = TRUE                              ## true ##
        if $data_key_str =~ s{(^|\.)(*nlb:\\)'(.+)(*nlb:\\)'(\.|$)}{
                                my $k = $1; $k =~ s|\.|\0|g;
                             }e;
}

foreach my $sub_key ( split( '\.', $data_key_str ) ) {
    $data_key_str =~ s|\0|.|g if $quoted_key;
    next                      if not exists $key_ref->{$sub_key};

    if ( ref $key_ref->{$sub_key} eq qw| HASH | ) {
        ## hashref, continue ##
        $key_ref = \%{ $key_ref->{$sub_key} };

    } elsif ( length ref $key_ref->{$sub_key} ) {
        ## return reference if not hash ref ##
        return $key_ref->{$sub_key};

    } else {
        return \$key_ref->{$sub_key};    ## return scalar ref if a value ##
    }
}

return $key_ref;                         ## recursion return value ##

#,,,.,,.,,,.,,.,.,.,,,,.,,,..,.,.,...,,,,,,,.,..,,...,..,,,..,...,.,.,,.,,,..,
#NAQUWCDFHORRFT6N6VLZ2SFXTRRFB33H4VW3DRGR6BQLGO5XPGBRGVIE5EKOD2BC5LATNIQWRTNDW
#\\\|UNQCQZMCBQFAENLH6RYFSERXF7ZJR6EX6X5EPKTRW75ETNVI3NI \ / AMOS7 \ YOURUM ::
#\[7]ORJWPHCKZT5QJ43IDBZ4XNC5VE25CW2QWXJNC4FSELQTANW6VECI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
