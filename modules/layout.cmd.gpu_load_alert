# >:]

# name  = layout.cmd.gpu_load_alert
# param = <secs> <percent>
# descr = activate GPU load countermeasures
# todo  = ask browser and ticker agent to slow down ...

return { 'mode' => 'nack', 'data' => 'expected <secs> <percent> parameters' }
    if not defined $$call{'args'}
    or $$call{'args'} !~ /^\d+ +\d+(\.\d+)?$/;

my ( $sec, $percent ) = split( / +/, $$call{'args'}, 2 );
my $perc_str = sprintf( "%.2f", $percent );
<[base.log]>->( 0, "<!> received GPU load alert [ ${sec}s at $perc_str% ]" );

my $restart_delay = 0;
<layout.warned.gpu_load_alert> //= 0;
if ( !<layout.warned.gpu_load_alert> ) {
    my $warn_txt = "'GPU Load Alert' 'activating countermeasures...'";
    <[base.proto.nailara.command.send.local]>->(
        {   'command'   => "core.notify.warn",
            'call_args' => { 'args' => $warn_txt }
        }
    );
    $restart_delay = 3;
    <layout.warned.gpu_load_alert>++;
}

<[event.add_timer]>->(
    {   'after'   => $restart_delay,
        'handler' => 'layout.impressive.increase_light_mode'
    }
);

map {
    <[base.proto.nailara.command.send.local]>
        ->( { 'command' => "core.$_.slow_down" } )
} ( 'browser', 'media.browser' );

return {
    'mode' => 'ack',
    'data' => 'countermeasures activated'
    }
