## >:] ##

# name  = mod-test.blacklist_perlcode

<[mod-test.update_blacklist_aref]>;

my $header_str = << 'EOC';
## >:] ##

# name  = base.perlmod.manual_reload_blacklist
# descr = modules not to be reloaded using 'reload p-mods' zenka command

\<base.perlmod.reload_blacklist> = [ qw[
EOC
my $code_footer_string = << 'EOC';

    ]
];

return \<base.perlmod.reload_blacklist>;

EOC

my $code_file_name = $LAST_PAREN_MATCH
    if $header_str =~ m|^# name *= *(\S+)$|m;

map {s|\\<|<|g} ( $header_str, $code_footer_string );

my @mod_name_checksums
    = <[base.sort]>->( map { scalar <[chk-sum.amos]>->( \$ARG ) }
        <mod-test.list.blacklisted_modules>->@* );

return {    ##  actual blacklist file contains amos chksums, not names  ##
    $code_file_name => join(
        "\n",
        $header_str,
        (   map { sprintf qw| %s%s |, scalar( ' ' x 8 ), $ARG }
                @mod_name_checksums
        ),
        $code_footer_string
    )
};

#,,.,,,..,.,.,,..,,,,,,,,,,,.,.,.,.,.,,.,,...,.,.,...,.,.,..,,,,.,...,,,,,.,.,
#QN43UHMPN7KYM5XR2L3V5XRJ4K5EETNE2JTIT5QDT7XEWODLGISLB6LOD3RTJXDWTDU6FZKVCOU2O
#\\\|ZHCEYIU55H3WERI45LFLKS6ZZRET3MQRU6ZLNHFYCOCWZWS3RKF \ / AMOS7 \ YOURUM ::
#\[7]TBPTFK4YSXKHS7TKWDCYYGNI647S6KDHL4JNFUQROSPVLVN3DSCI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
