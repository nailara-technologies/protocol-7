## [:< ##

# name  = base.chk-sum.bmw.strsum

my $input_string_sref = $ARG[0];
my $bits              = $ARG[1];    ## optional ##

warn 'data param not defined <{C1}>' and return undef
    if not defined $input_string_sref
    or ref $input_string_sref eq qw| SCALAR |
    and not defined $input_string_sref->$*;

$input_string_sref = \$ARG[0] if not length ref $input_string_sref;

<[base.s_warn]>->(
    "bit size parameter ['%s'] not valid "
        . "[ valid : 224, 256, 384, 512 ] <{C1}>",
    $bits
) if defined $bits and not exists <chk-sum.bmw>->{$bits};

##  get Digest::BMW context  ##
my $bmw = <[chk-sum.bmw.ctx]>->($bits);

$bmw->add( $input_string_sref->$* );

return encode_b32r( $bmw->digest );

#,,,,,,..,...,,,,,.,.,.,.,..,,..,,.,,,,,.,.,.,..,,...,..,,.,.,...,.,,,,.,,,.,,
#4V2VSAL2YFNBF5WIOPA5P5SK7YOHLEB6RXYU4FNJLMUTUUHZLCERCDM4JTXKAC6I4NTGJL7P54SWI
#\\\|QM46URFVZ2YPCLZJBGKHQ7RHDI3LOGCRPB7R3NCWZVDACTETNNN \ / AMOS7 \ YOURUM ::
#\[7]NP3BONORDFI7NVZM562JBJ63OWXF3JISUZ5HX2YD5E2GYAVQ6GDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
