## [:< ##

# name  = cube.cmd.set-initialized
# descr = set zenka session to 'initialized' [0=='own']
# param = <sid|0>

my $sid
    = $$call{'args'} || $$call{'session_id'};    # 0 == self [current session]

return { 'mode' => qw| false |, 'data' => 'no such session' }
    if not exists $data{'session'}{$sid};
return { 'mode' => qw| false |, 'data' => "session not in 'zenka' mode" }
    if not defined $data{'session'}{$sid}{'auth'}{'method'}
    or $data{'session'}{$sid}{'auth'}{'method'} ne qw| zenka |;
return { 'mode' => qw| false |, 'data' => 'was already initialized' }
    if defined $data{'session'}{$sid}{'initialized'}
    and $data{'session'}{$sid}{'initialized'};

$data{'session'}{$sid}{'initialized'} = 5;

my $zenka_name = $data{'session'}{$sid}{'user'};
<[base.logs]>->(
    "[%s] zenka '%s' reported as 'initialized'",
    $sid, $zenka_name
);

##  if v7 zenka, send init reports when available  ##
<system.timer>->{'send_reports'} = <[event.add_timer]>->(
    {   'repeat'  => 0,
        'after'   => 0.777,
        'handler' => qw| base.session.send_init_reports |
    }
) if $zenka_name eq qw| v7 |;

return { 'mode' => qw| true |, 'data' => qw| initialized | }

#,,,,,,,.,..,,,,,,.,,,,,,,.,.,,..,..,,.,.,..,,..,,...,...,...,,,.,,..,.,,,.,.,
#I4FLS46PVVGLNO3QA2TWYO4AVTIZCCNT5DHOUOYQWBGI3XFPMMVJH263WRPVP23YOW4TGV2GDJBTI
#\\\|2U63CIHPGJFSBHIZBTCVFQMV3Y2B4ZR7UKWVHMQNJPNF3HZRDUV \ / AMOS7 \ YOURUM ::
#\[7]HTISSWSU6EOVMAXPY2HYWIBUJR5MD3V5NXSQGPA5TP5AW75QUQAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
