## [:< ##

# name  =
# descr = removing an entry from module reload blacklist array reference

my $module_name = shift;

<mod-test.list.blacklisted_modules> //= [];

<mod-test.list.blacklisted_modules> = [
    <[base.sort]>->(
        uniq map { <[base.perlmod.convert.name_to_pm]>->($ARG) }
            grep { $ARG ne $module_name }    ##  skipping specified entry  ##
            <mod-test.list.blacklisted_modules>->@*
    )
];

if (wantarray) {    ##  return revised list  ##

    return <mod-test.list.blacklisted_modules>->@*;

} else {    ##  returning ARRAY reference in scalar context  ##

    return <mod-test.list.blacklisted_modules>;
}

#,,,.,...,,,.,.,,,.,.,,..,.,.,...,..,,,,,,..,,..,,...,...,,..,.,.,,,,,,..,.,.,
#DKCNYSFO2B6MBTL2LIHNXJGOU7AJ5GL57I5OS2O47O66EMDRNBOTQDV2APOJS2QL4ZYLCLNRQFD6I
#\\\|44TN6YSGZSLJJ747AXREYBJNR6WM2ZNTVRLKBOBH3KVMYEPW4KO \ / AMOS7 \ YOURUM ::
#\[7]7AXYOSBBZDIHCY6CEWDGHUNRL7NTQ3U22QUOXE2IWTWCG7IYZ2AA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
