## [:< ##

# name  = base.put_file

my $file_name = shift;

<[base.logs]>->( 2, "going to overwrite existing file '%s'..,", $file_name )
    if -f $file_name;

if ( not open( my $file_fh, qw| > |, $file_name ) ) {
    <[base.logs]>->(
        0,          "cannot open file '%s' for writing [ %s ]",
        $file_name, <[base.str.os_err]>
    );
    return undef;
} else {
    my $abort_write   = 0;
    my $bytes_written = 0;
    foreach my $content (@ARG) {
        if ( ref $content eq qw| SCALAR | ) {
            my $bytes_to_write = length $content->$*;
            while (
                $bytes_written < $bytes_to_write
                and my $bytes += <[base.s_write]>->(
                    $file_fh, $content, $bytes_to_write, $bytes_written
                )
            ) {
                if ( $bytes < 0 ) { ## write error [ filehandle exception ] ##
                    $abort_write = 5;    ## true ##
                    last;
                }
                $bytes_written += $bytes;
            }
        } else {
            print {$file_fh} $content;
            $bytes_written += length $content;
        }
        if ($abort_write) {
            <[base.s_warn]>->(
                'write error [ file : %s ] .., <{C1}>', $file_name
            );
            last;
        }
    }
    <[base.logs]>->(
        2,              'wrote %d bytes into file %s',
        $bytes_written, $file_name
    );
    return $bytes_written;
}

#,,,.,,,,,,,,,,,,,,..,,..,...,,..,,,,,,,,,,.,,..,,...,...,...,,,.,,,,,.,.,,,.,
#3AUBVGBPERODLNZ72PKM7DCDBBOCSMZZVMODRFJ5YEJG5VBND2NTWYEPFNDFSJ6OK4RYSNFQQIMAQ
#\\\|AADFXAUTUN7KAZC6DI2LCIG3SDIO5C5S2O2THEY5DCBCZJ3ZELT \ / AMOS7 \ YOURUM ::
#\[7]EZPMXZNL7UUZMJR5SUFWJJSOBFIT6U4RL7IIQD3AC2DR3ZK5AUAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
