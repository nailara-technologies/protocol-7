## [:< ##

# name  = base.file.zenka_dir.write
# descr = create file [entry] in /var/run/protocol-7/zenka/..,

my $filepath_rel  = shift // '';
my $content_sref  = shift;
my $open_mode_str = shift // qw| > |;
my $file_mode     = shift // 0600;
my $encoding_str  = shift // qw| :raw |;

my $global_config_path    = FALSE;
my $zenkaname_path_prefix = TRUE;

$global_config_path = TRUE if $filepath_rel =~ s|^cfg-dir:||;  ##  /etc/.., ##

$zenkaname_path_prefix = FALSE    ## /etc/<zenka> ? ##
    if $global_config_path and $filepath_rel !~ s|<zenka>/||;

if (   not length $filepath_rel
    or index( $filepath_rel, qw| / |,  0 ) == 0
    or index( $filepath_rel, qw| .. |, 0 ) != -1 ) {
    warn 'expected [relative] output path <{C1}>';
    return undef;
} elsif ( ref $content_sref ne qw| SCALAR | ) {
    warn 'expected scalar reference to data <{C1}>';
    return undef;
} elsif ( not defined $content_sref->$* ) {
    warn 'content sref points to undefined value <{C1}>';
    return undef;
}

my $zenka_dir_href = <system.path.zenka-dirs>;

my $zenka_write_dir = $global_config_path
    ? $zenka_dir_href->{'etc_P7'}     ##[  /etc/protocol-7/  ]##
    : $zenka_dir_href->{'run_p7'};    ##[  /var/run/protocol-7  ]##

if ($zenkaname_path_prefix) {    ## use zenka subdirectory ? ##
    my $zenkaname = <system.zenka.name>;
    $zenka_write_dir = catfile $zenka_write_dir, $zenkaname;
}

if ( not -d $zenka_write_dir ) {    ##  creating directory if missing  ##
    my @check_zenka_paths_options = ( TRUE, undef );
    unshift @check_zenka_paths_options, ( undef, undef )
        if $global_config_path and $zenkaname_path_prefix;
    if (not
        <[base.path-set-up.check-zenka-paths]>->(@check_zenka_paths_options)
        or not -d $zenka_write_dir ) {    ##  success creating dir ?  ##
        <[base.s_warn]>->(
            'cannot create temporary zenka output directory [ %s ]',
            $zenka_write_dir
        );
        return undef;
    }
}

if ( -d $zenka_write_dir and not -w $zenka_write_dir ) {
    <[base.s_warn]>->(
        'no write permission to zenka output directory [ %s ]',
        $zenka_write_dir
    );
    return undef;
}

##  zenka work directory  ##
$data{$zenkaname}{'path'}{'output_dir'} //= $zenka_write_dir;

my $file_abs_path = catfile( $zenka_write_dir, $filepath_rel );

if ( -d $file_abs_path ) {
    <[base.s_warn]>->(
        'file path is existing directory [ %s ] <{C1}>',
        $file_abs_path
    );
    return undef;
}

if ( $open_mode_str eq qw| > | and -f $file_abs_path ) {

    if ( not unlink($file_abs_path) ) { ## removing file [ overwrite mode ] ##
        <[base.s_warn]>->(
            'unlink[ %s ] : %s',
            $filepath_rel, <[base.str.os_err]>
        );
        <[base.s_warn]>->(
            "file write aborted [ %s ] <{C1}>",
            $file_abs_path
        );
        return undef;
    }
}

my $fh = <[file.open]>->(
    $file_abs_path, $encoding_str, $open_mode_str, TRUE, $file_mode
);
if ( not defined $fh or not length fileno($fh) ) {
    <[base.s_warn]>->( "file write aborted [ %s ] <{C1}>", $file_abs_path );
    return undef;
}

my $uname = <system.amos-zenka-user>;    ## <-- protocol-7 user ##
##
my ( undef, undef, $uid, $gid ) = getpwnam $uname;

if ( not chown( $uid, $gid, $file_abs_path ) ) {
    <[base.s_warn]>->(
        'chown [%d:%d] %s : [ %s ] <{C1}>',
        $uid, $gid, $filepath_rel, <[base.str.os_err]>
    );
    unlink($file_abs_path)    ## removing again [ not intended owner ] ##
        or <[base.s_warn]>->(
        'unlink[ %s ] : %s',
        $filepath_rel, <[base.str.os_err]>
        );
    <[base.s_warn]>->( "file write aborted [ %s ] <{C1}>", $file_abs_path );
    return undef;
}

print {$fh} $content_sref->$*;    ##  writing content to file  ##

if ( not close($fh) ) {
    <[base.s_warn]>->(
        "error on closing file [ %s ] <{C1}>",
        <[base.str.os_err]>
    );
    return undef;
}

##  returning ammount of characters written  ##
return length $content_sref->$*;

#,,,,,,,,,...,.,.,..,,,,,,..,,,,,,,..,.,.,,..,..,,...,...,...,,,.,.,,,,,.,,,.,
#T5DNTY54JXMGKRR4MSHXPPLGEIOJ7FLGTFBT74RXQEY5STV3C7NBEBGNFTGQCTAGDV53VCBGJZIP6
#\\\|GUI2P3UGJUYVAWYH4KZBFT74XE2CLMRXBFZHWI4RKN5RGACDCIV \ / AMOS7 \ YOURUM ::
#\[7]5ZOCOSSBBSP33B2BBAP3SCOXXUS6AZA3SASPZJ5VMTCKQ4HTA4BQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
