## >:] ##

# name = io.unix.socket.output.open

my $socket_file = shift;
return warn 'expected unix domain socket path <{C1}>'
    if not defined $socket_file;

if ( !-S $socket_file ) {
    <[base.logs]>->(
        0, "<< unix domain socket '%s' does not exist.,", $socket_file
    );
    return undef;
}

my $return_socket = IO::Socket::UNIX->new(
    qw| Type | => SOCK_STREAM(),
    qw| Peer | => $socket_file
    )
    or <[base.logs]>->(
    0,
    'io.unix.socket.output.open : %s [ %s ]',
    scalar <[base.format_error]>->( $OS_ERROR, -1 ), $socket_file
    );

if (    defined $return_socket
    and -S $return_socket
    and $return_socket->connected ) {
    <[base.logs]>->( "connected to unix socket [%s]", $socket_file );

    $data{'handle'}{$return_socket}->{'link'} = qw| unix |;
    $data{'handle'}{$return_socket}->{'mode'} = qw| output |;

    return $return_socket;
} else {
    <[base.logs]>->(
        0, '<< cannot connect to unix socket [ %s ] : %s >>',
        $socket_file,
        scalar <[base.format_error]>->( $OS_ERROR, -1 )

    );
    return 0;
}

#,,.,,,,.,,..,...,,.,,,.,,..,,,,.,..,,...,.,,,..,,...,..,,.,.,,..,,..,,..,,..,
#CTS3Y3WGCQBZKORPYMGFZC5HRWEPZUEUI4STLLMEQU33S2IEN2KLVXRSCMYAZELR7RDQOJNZFYGD6
#\\\|JN6QJRXGAM75RRWPUVCTNGVTKEGHJ2CTGZH3K3575SGCRI7XJEV \ / AMOS7 \ YOURUM ::
#\[7]4NGPAUEKMEJGD5HAJAOAJH3NI4DUKY32ESMA5NTEGMS4JYXTWABY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
