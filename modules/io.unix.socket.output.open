## [:< ##

# name = io.unix.socket.output.open

my $socket_file = shift;
return warn 'expected unix domain socket path <{C1}>'
    if not defined $socket_file;

if ( !-S $socket_file ) {
    <[base.logs]>->(
        0, "<< unix domain socket '%s' does not exist.,", $socket_file
    );
    return undef;
}

my $return_socket = IO::Socket::UNIX->new(
    qw| Type | => SOCK_STREAM(),
    qw| Peer | => $socket_file
    )
    or <[base.logs]>->(
    0,                   'io.unix.socket.output.open : %s [ %s ]',
    <[base.str.os_err]>, $socket_file
    );

if (    defined $return_socket
    and -S $return_socket
    and $return_socket->connected ) {
    <[base.logs]>->( "connected to unix socket [%s]", $socket_file );

    $data{'handle'}{$return_socket}->{'link'} = qw| unix |;
    $data{'handle'}{$return_socket}->{'mode'} = qw| output |;

    return $return_socket;
} else {
    <[base.logs]>->(
        0, '<< cannot connect to unix socket [ %s ] : %s >>',
        $socket_file,
        <[base.str.os_err]>

    );
    return 0;
}

#,,,,,..,,,..,.,.,,..,,..,..,,.,,,,,,,,,.,.,.,..,,...,...,...,,.,,.,.,,,,,.,,,
#SLBEN3DUK35EJ4EC3BWI5HJPPXCGF53QZZLH2JI3TDCGDVHFYXUGZT73BRW3ORSHOR7BGWBIOQ53K
#\\\|WDWTMUMWNHSPAWLKKF3RLNAVIDZ7M62BFLCSQKDSDLTV2SG2L7F \ / AMOS7 \ YOURUM ::
#\[7]V73VWHIMUSRQRSLMSUOPGZB6LBE2HQIBDR7LCDOQWJITW2VWXWDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
