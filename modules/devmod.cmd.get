## [:< ##

# name  = devmod.cmd.get
# param = <key>
# descr = return internal 'data' hash value
# note  = todo: implement access control filter and root namespace

my ( $cid, $requested_key ) = ( $ARG[0]->{'session_id'}, $ARG[0]->{'args'} );
my $key_href;
my ( $key_is_valid, $errmsg )
    = <[base.validate.data_key_syntax]>->($requested_key);
if ( not $key_is_valid ) {
    <[base.logs]>->( 0, '[%d] get: %s', $cid, $errmsg );
    return { 'mode' => qw| false |, 'data' => $errmsg };
}

if ( defined( $key_href = <[base.resolve_key]>->($requested_key) ) ) {

    if ( not length $key_href->{'r-type'} ) {    ## returning value ##

        return { 'mode' => qw| false |, 'data' => 'value is undef' }
            if not defined $key_href->{'r-data'};

        ##  single line value  ##
        return { 'mode' => qw| true |, 'data' => $key_href->{'r-data'} }
            if length $key_href->{'r-data'}
            and index( $key_href->{'r-data'}, "\n", 0 ) == -1;

        ##  empty string \ containing endline[s]  ##
        return { 'mode' => qw| size |, 'data' => $key_href->{'r-data'} };

    } elsif ( $key_href->{'r-type'} eq qw| HASH | ) {

        return {    ##  returning key list as size reply if hashref  ##
            'mode' => qw| size |,
            'data' => join( '',
                map { sprintf "%s\n", $ARG }
                    <[base.sort]>->( $key_href->{'r-data'} ) )
        };

    } else {
        return {
            'mode' => qw| false |,
            'data' => sprintf( '%s references not implemented',
                lc $key_href->{'r-type'} )
        };
    }
}

return { 'mode' => qw| false |, 'data' => 'requested key not found' };

#,,,.,.,,,,..,...,...,,..,,,.,,,,,.,,,,..,,.,,..,,...,...,..,,...,...,...,,..,
#3JSNFCQHSTPTL2MTDPOXOIFXD3DCTCB2Q73GDJB4IH3A4AO6LHDTZMIAH7KWCKMPLUM526HCHHZMS
#\\\|HPBXYUYGPAJ27WHNAZ2K2665Q6A3QP7MIAG4ELZ7B2C6NCYB7LS \ / AMOS7 \ YOURUM ::
#\[7]FBCZ7EFCVDRNEZZ2HPV4G3OSIS5DJSYOGS3YXGMSWG5ZOIYKNUAQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
