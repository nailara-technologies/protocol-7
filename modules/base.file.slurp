# >:]

# name  = base.file.slurp (file.slurp)
# args  = <filename>, <target_reference> (SCALAR|ARRAY) [optional]
# descr = loads a file into memory and return a reference to it

my $filename   = abs_path(shift);
my $target_ref = shift;             # optional scalar or array reference
if ( not defined $target_ref ) {
    my $buffer = '';
    $target_ref = \$buffer;
}
if ( !-f $filename ) {
    <[base.log]>->( 0, "file.slurp: file '$filename' not found." );
    return undef;
}
my $file_fh;
if ( !open( $file_fh, '<' . $filename ) ) {
    <[base.log]>->( 0, "file.slurp: failed to open '$filename' [$!]" );
    return undef;
}
my $ref_type = ref($target_ref);
if ( $ref_type eq 'SCALAR' ) {
    local $/ = undef;

    $$target_ref = <$file_fh>;

} elsif ( $ref_type eq 'ARRAY' ) {
    local $/ = "\n";

    chomp( @$target_ref = <$file_fh> );

} else {
    <[log.failed]>->("file.slurp: unsupported reference type '$ref_type'!");
    return undef;
}

return $target_ref;
