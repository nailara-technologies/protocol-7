# >:]

# name = openbox.start_wm

my $display  = <x11.display>;
my $cfg_name = <openbox.config_name>;

<[base.log]>->( 1, "starting openbox with $cfg_name-config..." );
my $cfg_path = <system.conf_path> . '/openbox.' . $cfg_name . '.xml';
if ( !-f $cfg_path ) {
    <[base.log]>->( 0, "openbox config file '$cfg_path' not found!" );
    <[base.log]>->( 1, " : aborting agent startup .." );
    exit(1);
}
$ENV{'DISPLAY'} = $display;
<child.openbox.pid> = open( my $out_fh,
    "/usr/bin/openbox --sm-disable --config-file $cfg_path 2>&1 |" );
if ( !<child.openbox.pid> ) {
    <[base.log]>->( 0, "[!] failed to start openbox [$!]" );
    <[base.log]>->( 1, " : aborting agent startup .." );
    exit(1);
}
<[base.log]>->(
    1,
    ": openbox started [pid=<child.openbox.pid>], registering output handler.."
);
my $max_wait = 70;    # wait no longer than 7 seconds..
<[base.log]>->( 1, "waiting for openbox log file creation.." );
while ( !-f <openbox.log_file> and $max_wait-- ) { <[base.sleep]>->(0.1) }
if ( -f <openbox.log_file> ) {<[openbox.cleanup_tmp_dir]>}
else {
    <[base.log]>->(
        0,
        "openbox log file '"
            . <openbox.log_file>
            . "' did not appear in time, skipping tmp dir cleanup!"
    );
}
<[event.add_io]>->(
    {   'fd'      => $out_fh,
        'handler' => 'base.handler.child_output.simple',
        'data'    => {
            'bin'           => 'openbox',
            'pid'           => <child.openbox.pid>,
            'log_whitelist' => ['Xinerama']
        }
    }
);
