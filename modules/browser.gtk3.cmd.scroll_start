# >:]

# name  = browser.gtk3.cmd.scroll_start
# descr = automatically scroll down web page

my $reply_id = $$call{'reply_id'};

<browser.loop_timer>->cancel;
Event->unloop_all();

<browser.adjust_scroll_delay> //= 0;
<browser.scroll_delay_limit>  //= 32;
<window.scrolling>            //= 0;

return { 'mode' => 'nack', 'data' => 'already scrolling' }
    if <window.scrolling>;

my $vadj = <browser.gtk3.obj.scr_win>->get_vadjustment();
<window.scroll.pos>      = 0;
<window.scroll.max>      = $vadj->get_upper() - $vadj->get_page_size();

<browser.gtk3.obj.vadj>  = $vadj;
<window.scroll.reply_id> = $reply_id;
<window.cfg.scroll_delay> //= 42;
<window.cfg.scroll_steps> //= 1;
<window.scroll.stop> = 0;

my $scroll_delay = <window.cfg.scroll_delay>;

if ( <browser.auto_zoom> and <browser.adjust_scroll_delay> ) {
    $scroll_delay = sprintf( "%.0f", $scroll_delay / <browser.zoom_level> );
    $scroll_delay = <browser.scroll_delay_limit>
        if $scroll_delay < <browser.scroll_delay_limit>;

}

return { 'mode' => 'ack', 'data' => 'already at end of page' }
    if <window.scroll.pos> >= <window.scroll.max>;

Glib::Timeout->add( $scroll_delay, $code{'browser.gtk3.handler.auto_scroll'},
    undef, -10 );

<window.scrolling> = 1;
return { 'mode' => 'later' };
