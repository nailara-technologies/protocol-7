# >:]

# name = base.set_privs
# todo = cleanup!!

if ( $_[0] eq '' ) {
    <[base.log]>->( 0, 'can not change priviledges [no username supplied]' );
    return -1;
} else {

    my ( $name, $pwd, $uid, $gid, $quota, $comment, $gcos, $home_dir, $shell )
        = getpwnam( $_[0] );

    my %_gid = map { $_ => 1 } split( / /, $( );
    my %egid = map { $_ => 1 } split( / /, $) );

    if (    defined $name
        and exists $_gid{$gid}
        and exists $egid{$gid}    # XXX: fix (secondary groups)!
        and $> == $uid and $< == $uid
        ) {
        <[base.log]>->( 1, "set_privs: already am '$_[0]', doing nothing." );
    } elsif ($<) {
        <[base.log]>->(
            0, "can not change privs to user '$_[0]' [i am not root]"
        );
        return -1;
    } else {
        if ( not defined $name or $name ne $_[0] ) {
            <[base.log]>->(
                0, "can not change priviledges to '$_[0]' [no such user]"
            );
            return -1;
        } else {
            my @rgids;
            while ( my ( $_name, $_pw, $_gid, $_members ) = getgrent ) {
                push( @rgids, $_gid )
                    if ( grep( $_ eq $_[0], split( /\s+/, $_members ) ) );
            }

            $) = join( ' ', $gid, @rgids );
            $( = $gid;
            $> = $uid;
            $< = $uid;

            $ENV{'HOME'} = $home_dir;

            <[base.log]>->( 1, "changed priviledges to user '$_[0]'" );
        }
    }
}
