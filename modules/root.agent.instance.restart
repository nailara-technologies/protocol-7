# >:]

# name = root.agent.instance.restart

my $instance_id = shift;
my $instance    = <root.agent.instance>->{$instance_id};
my $agent_name  = $instance->{'agent_name'};
my $job_id      = $instance->{'job_id'};

my $proc_table = new Proc::ProcessTable;

<[base.log]>->( 1, "restarting instance $instance_id ($agent_name)..." );

$instance->{'status_timer'}->cancel  if exists $instance->{'status_timer'};
$instance->{'timeout_timer'}->cancel if exists $instance->{'timeout_timer'};
delete <callback.session.close_last> if $instance->{'is_core'};

my @children;
foreach my $proc ( @{ $proc_table->table } ) {
    push( @children, $proc->{'pid'} )
        if $proc->{'ppid'} == $instance->{'process'}->{'id'};
}

<[base.log]>->(
    1, ": terminating instance pid " . $instance->{'process'}->{'id'}
);
kill( 9, $instance->{'process'}->{'id'} );    # XXX: 15 + timeout
my $ren = scalar @children == 1 ? '' : 'ren :';
<[base.log]>->(
    1, ": terminating instance child$ren " . join( ', ', @children )
) if @children;
kill( 9, @children );

<[agent.change_status]>->( $instance_id, 'queued' );
<[jobqueue.move_job]>->( $job_id, 'queued' );
