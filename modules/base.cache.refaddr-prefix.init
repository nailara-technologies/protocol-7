## >:] ##

# name  = base.cache.refaddr-prefix.init

my $cache_ref = <base.cache.perl.refaddr_prefix> //= {};

my $max_history_count = 13;

if ( not keys $cache_ref->%* ) {
    <[base.log]>->( 2, ': polulating refaddr prefix cache.,' );
}

$cache_ref->{'history'} //= [];

##  reducing prefix length by one digit  ##
( my $refaddr_prefix = <[base.p7refs.get_refaddr_prefix]> ) =~ s|(*pla:.).$||;

if ( defined $cache_ref->{'current'}
    and $refaddr_prefix eq $cache_ref->{'current'}->{'value_str'} ) {

    ##  no update, is current  ##
    ## returning current values ##

    <[base.log]>->( 2, ': updating refaddr prefix value is current.,' );

    return ( $refaddr_prefix, length($refaddr_prefix) ) if wantarray;
    ##  return only prefix string in scalar context  ##
    return $refaddr_prefix;

} elsif ( defined $cache_ref->{'current'} ) {
    <[base.log]>->( 2, ': updating refaddr prefix cache.,' );

    ##  move last value to cache history  ##
    push $cache_ref->{'history'}->@*, $cache_ref->{'current'}->{'value_str'};

    while ( scalar $cache_ref->{'history'}->@* > $max_history_count ) {
        my $removed_refaddr_prefix = shift $cache_ref->{'history'}->@*;
        <[base.logs]>->(
            2,
            ': :. removed entry [ %s ] from prefix cache history',
            uc($removed_refaddr_prefix)
        );
    }
}

$cache_ref->{'current'} = {    ##  update current refaddr prefix string  ##
    qw| value_str  | => $refaddr_prefix,
    qw| val_length | => length $refaddr_prefix
};

<[base.logs]>->( 2, ":. added entry ['%s']", $refaddr_prefix );

##  returning current value  ##

return ( $refaddr_prefix, length($refaddr_prefix) ) if wantarray;

return $refaddr_prefix;    ##  return only prefix string in scalar context  ##

#,,..,.,,,..,,,.,,,,,,..,,,,.,,,,,,,,,,,.,...,..,,...,...,...,,..,,,.,.,,,...,
#45SX5XDUZIEYFXNQCQJ3IMC2RDPVI3CTMKWBQEPBJEXVHCQIXYFQYWMIW7YQMD6GNGW3TKRVOG6NC
#\\\|7ED4DT5Z33JKPXJMUIMJARDSVYRJ5PAPVZ4ULT56B72QDL3IIBJ \ / AMOS7 \ YOURUM ::
#\[7]XPFVBLQWGGQNX6AQBD5HZCYD2XYRFZH7EJUMFKOT4ZY5S2YBXAAY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
