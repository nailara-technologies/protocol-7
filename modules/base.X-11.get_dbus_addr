## [:< ##

# name = base.X-11.get_dbus_addr

my ($local_sid) = keys( %{<user.cube.session>} );

<[base.log]>->( 1, "requesting socket address from dbus zenka.," );

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[base.net.send_to_socket]>->( $cube_fh, "($cmd_id)dbus.socket_address\n" );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string  = <$cube_fh>;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(TRUE|FALSE) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)TRUE ([^\n]+)\n$} ) {
    ( my $path_str = <x11.dbus_addr> = $1 ) =~ s/^[^=]+=|,.+$//g;
    <[base.log]>->( 1, "received dbus socket address ['$path_str']" );
    $ENV{'DBUS_SESSION_BUS_ADDRESS'} = <x11.dbus_addr>;
    return <x11.dbus_addr>;
} else {
    <[base.log]>->(
        0,
        "protocol mismatch (unexpected reply from dbus zenka) ['$reply_string']"
    );
    return undef;
}

#,,,.,,..,,,.,..,,,,,,.,,,.,,,...,.,.,.,,,..,,..,,...,...,,,,,.,.,,..,,..,...,
#JFNT5LVA3KCHKDBFQX6EJQMYGNRNPD34TJX4GF4CHMIRTK46C4SV6BU4LADOI6JW45O26HLUQ7HFO
#\\\|4ZF4N3K7XS2X5ZSCYE4NS2IY4OZKOWAPHE2VQ4QZELX62HHASSV \ / AMOS7 \ YOURUM ::
#\[7]BZM6W5UXQ5FQXCBH6HTQ766KGUYSMELMISNGP3UYLXJTP7FWCYCI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
