## [:< ##

# name  = base.s_warn
# descr = warn sprintf wrapper

return warn 'warn message [ not defined ] <{C1}>' if not defined $ARG[0];
return warn 'sprintf parameter expected <{C1}>'   if @ARG < 2;
my $param_cnt = 0;
foreach my $chk_param (@ARG) {
    if ( not defined $chk_param ) {
        <[base.s_warn]>->(
            'base.s_warn parameter %d not defined <{C1}>', $param_cnt
        );
        $ARG[$param_cnt] //= qw| [UNDEF] |;
    }
    $param_cnt++;
}

my $template = shift @ARG;

##  adjusting caller level for eval and base.s_warn  ##
if ( $template !~ s|<{C(\d+)}>$| my $c_l = $1; sprintf '<{C%d}>', $c_l + 2 |e
    and $template !~ m|<{NC}>| ) {
    $template .= '<{C2}>';    ##  caller of base.s_warn [ this parent ]  ##
}

eval {
    use warnings FATAL => qw| all |;    ##  catches all warnings  ##
    warn sprintf( $template, @ARG );
};

if ( length $EVAL_ERROR ) {
    my $sprintf_errmsg = <[base.format_error]>->( $EVAL_ERROR, -1 );
    $sprintf_errmsg =~ s|sprintf|base.s_warn|g;
    warn sprintf '%s <{C1}>', $sprintf_errmsg;
}

return TRUE;    ## true ##

#,,,,,...,.,.,.,,,..,,.,.,.,,,...,,,,,,,,,,,,,..,,...,..,,..,,..,,,.,,...,,,,,
#CYS6TU7EMN422Z333GTF7XLVUXQEWAMAMTJFBUFEZUAFSRANI4XTVPTZJRCVOK76OSM37FLCJERM6
#\\\|QFHFX7UAOY6TOXGMZ7BN4R2A6TZXWNZOB3XT5YXROQK7N5E43MJ \ / AMOS7 \ YOURUM ::
#\[7]45OWTWHNJNXHSUWOB7U37UYK77S6GMY4PNXF7PSZADX2J4NKBMDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
