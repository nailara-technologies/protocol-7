## [:< ##

# name  = crypt.C25519.create_signature_request

my $name             = shift // '';      ## key name ##
my $rkey_name        = shift // '';      ##  signature key name  ##
my $ask_for_password = shift // FALSE;
my $virt_key         = shift // <[crypt.C25519.key_is_virtual]>->($name);

my $rkey_fname_str = <[crypt.C25519.key_name_to_skey]>->($rkey_name);

if ( not length $name ) {
    warn 'expecting key name param <{C1}>';
    return undef;
} elsif ( $name !~ <crypt.C25519.regex.key_name> ) {
    warn 'key name param containing not valid characters <{C1}>';
    return undef;
} elsif ( $rkey_fname_str !~ <crypt.C25519.regex.signature_key_name> ) {
    warn 'signature key name param containing not valid characters <{C1}>';
    return undef;
}

my $key_dir = <[crypt.C25519.chk_key_dir]>;

my $rq_filename = sprintf qw| %s.rq.%s |, $name, $rkey_fname_str;
my $rq_path_abs = catfile( $key_dir, $rq_filename );

if ( not defined $key_dir or not -w $key_dir ) {
    warn 'no writable key dir , cannot create signature request file <{C1}>';
    return undef;
} elsif ( -f $rq_path_abs ) {
    <[base.s_warn]>->(
        "signature request file '%s' already exists <{C1}>", $rq_filename
    );
    return undef;
}

<[base.log]>->( 1, "creating key signature request.," );
<[base.logs]>->( ":. '%s' --> '%s'", $rkey_name, $name );

my $req_timestamp = <[base.ntime.b32]>->( 1, TRUE );

if ( not exists $keys{'C25519'}->{$rkey_name} ) {
    <[base.log]>->( 1, ': loading signature key [ to sign with ] .,' );
    <[crypt.C25519.load_keypair]>->(
        $rkey_name, undef, ($ask_for_password) x 2
    );
}

if (   not exists $keys{'C25519'}->{$rkey_name}
    or not exists $keys{'C25519'}->{$rkey_name}->{'public'}
    or not exists $keys{'C25519'}->{$rkey_name}->{'private'} ) {
    <[base.logs]>->(
        0, "signature key '%s' not loaded \\ complete..,", $rkey_name
    );
    <[base.log]>->( 0, ":, cannot create signature request.," );
    return undef;
}

my $rkey_chksum = <[crypt.C25519.key_bin_checksums]>
    ->( $keys{'C25519'}->{$rkey_name}->{'public'} );

if ( not exists $keys{'C25519'}->{$name} ) {
    <[base.log]>->( 1, ': loading target key [ to be signed ] .,' );
    <[crypt.C25519.load_keypair]>->( $name, undef, ($ask_for_password) x 2 );
}

if (   not exists $keys{'C25519'}->{$name}
    or not exists $keys{'C25519'}->{$name}->{'public'} ) {
    <[base.logs]>->( 0, "no public key for '%s' loaded..,", $name );
    <[base.log]>->( 0, ":, cannot create signature request.," );
    return undef;
}

my $pkey_chksum = <[crypt.C25519.key_bin_checksums]>
    ->( $keys{'C25519'}->{$name}->{'public'} );

$pkey_chksum =~ s,<:|:>,,g;
$rkey_chksum =~ s,<:|:>,,g;

my $signature_req_template = sprintf "<%s:%s:%s>%%s\n", $req_timestamp,
    $pkey_chksum,
    $rkey_chksum;
( my $signature_input_str = $signature_req_template ) =~ s|%s\n$||;

my $signature_str    ##  key that is to be signed also signs request  ##
    = <[crypt.C25519.sign_data]>->( \$signature_input_str, $name );

if ( not defined $signature_str ) {
    <[base.log]>->( 0, 'signing of request failed ..,' );
    <[base.log]>->( 0, ':, cannot create signature request.,' );
    return undef;
}

<[file.put]>->(
    $rq_path_abs,
    sprintf( $signature_req_template,
        Crypt::Misc::encode_b32r($signature_str) )
);

if ( not -f $rq_path_abs or -z $rq_path_abs ) {
    <[base.log]>->( 0, 'writing request file failed ..,' );
    <[base.log]>->( 0, ':, cannot create signature request.,' );
    return undef;
}

my $vp_filename = sprintf qw| %s.vp |, $name;
if ($virt_key) {    ##  store public key [ signed key virtual ]  ##
    my $vp_path_abs = catfile( $key_dir, $vp_filename );
    <[file.put]>->(
        $vp_path_abs,
        sprintf( "%s\n",
            Crypt::Misc::encode_b32r( $keys{'C25519'}->{$name}->{'public'} ) )
    );
    if ( not -f $vp_path_abs or -z $vp_path_abs ) {
        <[base.log]>->( 0, 'writing .vp file failed ..,' );
        <[base.log]>->( 0, ':, cannot complete signature request..,' );
        return undef;
    }
}

return ( $rq_filename, $vp_filename ) if $virt_key and wantarray;

return $rq_filename;    ##[ success ]##

#,,,.,...,,,.,..,,,.,,.,.,,..,,.,,.,.,,,,,,..,..,,...,...,.,,,..,,.,.,,,.,.,.,
#WAKMPCSH3KKQYIN64QB36MZOVGHKI3TBUB3P2WFNBTBIVYHG4RON3TQJBDMY65PCR47NW44KQD4S2
#\\\|S7FTKWMNI64GRH52ZOMEG2VYC3EDQTV2HZWCNZZAJXHPYV6IQAU \ / AMOS7 \ YOURUM ::
#\[7]BE5D3X7BDVRYZDV35TYDG2PZPUK6YPKDS2OQPYWPBG4AAWGZCQBY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
