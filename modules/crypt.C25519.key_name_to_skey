## [:< ##

# name  = crypt.C25519.key_name_to_skey
# descr = converts key name to [signature] key name file suffix format

my $name      = shift // '';
my $name_copy = $name;         ##  keep copy for testing  ##

if ( not length $name ) {
    warn 'expecting key name param <{C1}>';
    return undef;
}

$name = uc $name;              ## make all uppercase ##

$name =~ s|\.|_|g;             ##  converting . to _  ##

if ( $name !~ m|^<crypt.C25519.regex.signature_key_name>$| ) {
    warn 'signature key name param containing not valid characters <{C1}>';
    return undef;
} elsif ( $name =~ m|__| or $name =~ m<^[\W_]|[\W_]$> ) {
    warn 'key name param contains not valid character sequence[s] <{C1}>';
    return undef;
}

if ( [ caller(0) ]->[1] ne qw| crypt.C25519.name_from_skey_name | ) {
    ##  reverse conversion check if new name is valid  ##
    if ( $name_copy =~ m|<crypt.C25519.regex.key_name>|
        and <[crypt.C25519.name_from_skey_name]>->($name) ne $name_copy ) {
        warn 'signature key name not valid [ reverse conversion ] <{C1}>';
        return undef;
    }
}

return $name;    ##  returning converted name string  ##

#,,.,,.,,,,.,,,.,,,,.,,..,,.,,,,.,..,,.,,,,,,,..,,...,...,..,,,.,,,,,,..,,,,,,
#76IQCBPE3AAUVRYCGXD2YF6DE2YBU3OSKAPGC2RCWB4K6Y5HYX7ZE3WTVADABABH3STFLFRFX2PGG
#\\\|5I575POE42JPFWOH7YZUBLY2LUHQ4TRUL5MJQTZZ4ZW5LEBIGLS \ / AMOS7 \ YOURUM ::
#\[7]IWP2S5ZAIS6LZSR7C7GLJVVIVJKI5BELPXAA7MG63CXHDV53XMDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
