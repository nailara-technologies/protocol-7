# >:]

# name  = root.agent.cmd.get_instance_ids
# param = <agent_name[s]>
# descr = return instance ids for matching agent names

my $params = $$call{'args'} || '';
return { 'mode' => 'nack', 'data' => 'expected agent name[s]' }
    if !length($params);

my @instance_ids;
foreach my $param_str ( split / +/, $params ) {
    my $agent_name = $param_str;
    my $agent_subname;
    $agent_subname = $1 if $agent_name =~ s|\[([^\]]+)\]$||;
    my $agent_id = <[agent.get_id]>->($agent_name);
    return {
        'mode' => 'nack',
        'data' => "no agent '$agent_name' found in setup!"
            . " (see 'list agents')"
        }
        if not defined $agent_id;
    foreach my $iid ( keys %{<root.agent.instance>} ) {
        next
            if defined $agent_subname
            and not exists <root.agent.instance>->{$iid}->{'subname'}
            or defined $agent_subname
            and exists <root.agent.instance>->{$iid}->{'subname'}
            and <root.agent.instance>->{$iid}->{'subname'} ne $agent_subname;

        push( @instance_ids, $iid )
            if <root.agent.instance>->{$iid}->{'agent_id'} == $agent_id;
    }
}

if (@instance_ids) {
    return { 'mode' => 'ack', 'data' => join( ' ', @instance_ids ) };
} else {
    return {
        'mode' => 'nack',
        'data' => 'no matches found!'
    };
}
