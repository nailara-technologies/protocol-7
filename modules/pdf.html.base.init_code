## [:< ##

# name = pdf.html.base.init_code

<[base.perlmod.autoload]>->('Poppler');
<[base.perlmod.autoload]>->('File::Copy');
<[base.perlmod.autoload]>->('LWPx::ParanoidAgent');
<[base.perlmod.autoload]>->( 'File::Path', qw| make_path remove_tree | );

<pdf.html.converting> //= {};
<pdf.html.cache_dir>  //= '/var/cache/pdf2html';

<pdf.html.fail_template>
    = <system.root_path> . '/data/html/failed_to_load.html';

my $cache_dir = <pdf.html.cache_dir>;

my $perms = <pdf.html.cache_perm> // '0750';
if ( !-d $cache_dir ) {
    <[base.log]>->( 1, "creating cache directory '$cache_dir'.. [$perms]" );
    my ( undef, undef, $uid, $gid ) = getpwnam(<system.amos-zenka-user>)
        or die "user '" . <system.amos-zenka-user> . "' not in passwd file";
    make_path( $cache_dir,
        { mode => oct($perms), 'uid' => $uid, 'group' => $gid } )
        or die "make_path : \l$OS_ERROR";
} else {
    my $old_perms = <[base.path_perms]>->($cache_dir);
    if ( $old_perms ne $perms ) {
        <[base.log]>->(
            0,
            "<< ! >> fixing cache dir permissions [ $old_perms --> $perms ]"
        );
        chmod( oct($perms), $cache_dir )
            or warn("chmod($cache_dir) : \l$OS_ERROR");
    }
}

chdir($cache_dir) or die "chdir($cache_dir) : \l$OS_ERROR";

0;

#,,,,,...,,,,,..,,..,,,.,,,..,,.,,.,,,.,.,,..,..,,...,...,.,.,,,,,..,,.,.,...,
#3HQWV4DPNMDRPQYQJWZGASAVG4HO2LSOAYYZAI5AGLVQSPPPZ6UEXMM4O463UGPJPBRCTO45TC5JC
#\\\|VRBYLQPYPB7HYPP2RDP4JNZN7UNVSPAAUBDIUFP2KLKZ5IIQQA3 \ / AMOS7 \ YOURUM ::
#\[7]KXUTEH6GWLPSXV2HBK3PNXCIZFPVZHEBX6QKTV65N56LUO5M4IBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
