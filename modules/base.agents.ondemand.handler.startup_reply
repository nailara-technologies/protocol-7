# >:]

# name  = base.agents.ondemand.handler.startup_reply
# descr = handles 'root.notify_online' command replies

my $reply = shift;

my $v_id       = $reply->{'params'}->{'v_id'};
my $agent_name = <agents.virtual>->{$v_id}->{'name'};
delete <agents.virtual>->{$v_id}->{'starting'};

if ( $reply->{'cmd'} eq 'NACK' ) {
    my $reason = $reply->{'call_args'}->{'args'};
    <[base.log]>->(
        0, "on demand startup of agent '$agent_name' failed [$reason]"
    );
    while ( my $element = shift @{ <agents.virtual>->{$v_id}->{'queue'} } ) {
        my $sid    = $element->{'source_id'};
        my $cmd_id = $element->{'cmd_id'};
        next if not exists $data{'session'}{$sid};
        $data{'session'}{$sid}{'buffer'}{'output'}
            .= $cmd_id . "NACK unknown command\n";
    }
} else {
    <[base.log]>->( 1, "ondemand agent '$agent_name' now present.." );
    while ( my $element = shift @{ <agents.virtual>->{$v_id}->{'queue'} } ) {
        my $sid    = $element->{'source_id'};
        my $cmd_id = $element->{'cmd_id'};
        next if not exists $data{'session'}{$sid};

        my $output_str = "$cmd_id$agent_name." . $element->{'cmd_str'};
        $output_str .= ' ' . $element->{'cmd_args'}
            if defined $element->{'cmd_args'};
        $output_str .= "\n";    # XXX: add multiline command parameters..

        $data{'session'}{$sid}{'buffer'}{'input'} .= $output_str;
    }
}
