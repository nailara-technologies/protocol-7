## >:] ##

# name  = v7.calc_prefix_lengths
# descr = initialize zenki for automatic \ immediate startup

my $apw_href = <v7.zenka.prefix_width> //= {};

my @online_zenki = keys <v7.online-zenki>->%*;

my $max_len = 0;
foreach my $zenka_name ( uniq @ARG, @online_zenki, qw| v7 | ) {
    my $new_len = <[base.get_start_lpw]>->($zenka_name);
    $apw_href->{$zenka_name} //= $new_len;
    $max_len = $new_len if $new_len > $max_len;
}

foreach my $zenka_name ( <[base.sort]>->($apw_href) ) {    ## keys ##
    next if $apw_href->{$zenka_name} == $max_len;
    my @zenki_pid;
    map {
        push( @zenki_pid, <v7.zenka.instance>->{$ARG}->{'process'}->{'id'} )
            if $ARG =~ m|^\d+$|;
    } <[v7.zenka-instances.get-ids]>->($zenka_name)
        if $zenka_name ne qw| v7 |;

    ## distance between signals [ increase when required ] ##
    my $timer_inc   = 0.13;
    my $timer_delay = 0;      ## start delay ##

    if ( $apw_href->{$zenka_name} < $max_len ) {
        my $delta_len = $max_len - $apw_href->{$zenka_name};

        while ( $delta_len-- ) {
            if ( $zenka_name ne qw| v7 | ) {

                ##  async dispatch  ##
                <[event.add_timer]>->(
                    {   'after'  => $timer_delay += $timer_inc,
                        'repeat' => 0,
                        'prio'   => 7,
                        'cb'     => sub { kill qw| SIGUSR1 |, @zenki_pid },
                        'desc'   => 'SIGUSR1 send-timer'
                    }
                );

            } else {
                <[base.sig_NUM55]>;    ## own [ v7 zenka ] process ##
            }
        }

    } elsif ( $apw_href->{$zenka_name} > $max_len ) {
        my $delta_len = $apw_href->{$zenka_name} - $max_len;
        while ( $delta_len-- ) {
            if ( $zenka_name ne qw| v7 | ) {

                ##  async dispatch  ##
                <[event.add_timer]>->(
                    {   'after'  => $timer_delay += $timer_inc,
                        'repeat' => 0,
                        'prio'   => 7,
                        'cb'     => sub { kill qw| SIGUSR2 |, @zenki_pid },
                        'desc'   => 'SIGUSR2 send-timer'

                    }
                );

            } else {
                <[base.sig_NUM41]>;    ## own [ v7 zenka ] process ##
            }
        }
    }
}

map { $apw_href->{$ARG} = $max_len if $apw_href->{$ARG} != $max_len }
    ( keys $apw_href->%* );

#,,.,,...,,,.,.,,,.,,,.,,,...,..,,,,.,,,,,..,,..,,...,...,,..,,..,,.,,,..,,..,
#SKVJZWHOJ2GTEJQLX4Q7GMVBYYFK7X5RVLHLSA74HDGZ3NI4YKKVVVCC5MW5KLP5IUEGGDHV6Q5XE
#\\\|2ZRKI3LD6IHIMFLDS6MD4V6ONEPLXSRJODR7FWPWL6327MZSJ6G \ / AMOS7 \ YOURUM ::
#\[7]3PMU7JMFRGPCTKFUNOOTEGFNQJQ2XY6UQHXHHKH3LCKQFZ752MCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
