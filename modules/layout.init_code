# >:]

# name = layout.init_code

use FreezeThaw qw(cmpStr);

<list.layouts> = {
    'var'   => 'data',
    'key'   => 'layout.config.layouts',
    'mask'  => '<key>:name',
    'align' => { 'name' => 'left+1' },
    'descr' => 'configured layouts'
};

<layout.config_name>            //= 'default';
<layout.hash_file>              //= '/tmp/.layout.sha1';
<layout.transition_in_progress> //= 0;

delete <layout.config.ticker_agent_type>
    if defined <layout.config.ticker_agent_type>
    and <layout.config.ticker_agent_type> !~ /^gtk|sdl$/;
<layout.config.ticker_agent_type> //= 'gtk';

goto skip_load if defined <layout.config.layouts>;

my $config_name     = <layout.config_name>;
my $config_filename = "config.layout.$config_name";
my $config_file_path;
$config_file_path = <layout.import_path> if defined <layout.import_path>;
$config_file_path //= <system.conf_path>;
$config_file_path .= "/$config_filename";

die "layout config file '$config_filename' not found!"
    if !-f $config_file_path;

<[base.log]>->( 1, ": loading layout configuration '$config_name'" );

<[file.put]>->(
    <layout.hash_file>, <[digest.sha.file_hex]>->($config_file_path) . "\n"
);
<layout.config> = <[base.load_section_config]>->($config_filename);

skip_load:    # <- jumping here if layout has already been imported as json!

<[base.log]>->( 0, "no default layout configured!" )
    if not exists <layout.default_layout>
    or not defined <layout.default_layout>
    or !length(<layout.default_layout>);

my $layout_name = <layout.default_layout>;
my $log_level    = 1;
my $default_str  = ' default ';
if ( not exists <layout.config.layouts>->{$layout_name} ) {
    my $cfg_name_str = defined $config_name ? " '$config_name'" : '';
    <[base.log]>->(
        0,
        "default layout '$layout_name' "
            . "does not exist in layout config$cfg_name_str!"
    );
    ($layout_name) = sort keys %{<layout.config.layouts>};
    $default_str = ' _fallback_ ';
    $log_level   = 0;
}

$default_str  //= ' default ';
$layout_name //= <layout.default_layout>;
<layout.current_layout> = $layout_name;

<[base.log]>->( $log_level, "selected${default_str}layout '$layout_name'" );

0;
