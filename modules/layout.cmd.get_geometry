# >:]

# name  = layout.cmd.get_geometry
# param = <agent_name>
# descr = return window geometry for current layout

return { 'mode' => 'nack', 'data' => "expected valid agent name" }
    if not defined $$call{'args'}
    or $$call{'args'} !~ /^(\S+)( +(\S+))?$/;

my ( $source_agent, $agent_name ) = ( $1, $3 );
$source_agent =~ s|^.+\.||g;
$agent_name = $source_agent if not defined $agent_name;

return return {
    'mode' => 'nack',
    'data' => "no coordinates found for agent '$agent_name'"
    }
    if not exists <layout.coordinates>->{$agent_name}
    or not defined <layout.coordinates>->{$agent_name}
    or ref( <layout.coordinates>->{$agent_name} ) ne 'HASH';

my $coordinates_data = <layout.coordinates>->{$agent_name};

my @coordinates;
my @borders = ( 'left', 'top', 'right', 'bottom' );
foreach my $border_name (@borders) {
    return {
        'mode' => 'nack',
        'data' => "coordinates for $border_name border are missing"
        }
        if not exists $coordinates_data->{$border_name};
    push( @coordinates, $coordinates_data->{$border_name} );
}

return {
    'mode' => 'ack',
    'data' => <[base.x11.coordinates_to_geometry]>->(@coordinates)
    }
