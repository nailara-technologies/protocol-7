## >:] ##

# name  = v7.zenka.change_status
# descr = wrapper function for zenka status change handler

my ( $instance_id, $new_status ) = @ARG;

return warn 'no instance id specified <{C1}>'   if not defined $instance_id;
return warn 'no status string submitted <{C1}>' if not defined $new_status;
return warn 'no such instance defined <{C1}>'
    if not defined <v7.zenka.instance>->{$instance_id};

map {    ## validity check ##
    if ( not defined <v7.zenka.instance>->{$instance_id}->{$ARG} ) {
        delete <v7.zenka.instance>->{$instance_id};    ## cleaning up ##
        return warn sprintf "instance entry %d had undefined '%s' <{C1}>",
            $instance_id, $ARG;
    }
} qw| status zenka_name |;

<v7.online-zenki> //= {};

my $zenka_name = <v7.zenka.instance>->{$instance_id}->{'zenka_name'};

my $online_count = scalar keys <v7.online-zenki>->%*;

if ( $new_status eq qw| online | ) {
    <v7.online-zenki>->{$zenka_name}++;
} elsif ( $new_status ne qw| starting |
    and defined <v7.online-zenki>->{$zenka_name} ) {
    delete <v7.online-zenki>->{$zenka_name}
        if --<v7.online-zenki>->{$zenka_name} == 0;
}
<[v7.calc_prefix_lengths]>->( keys <v7.online-zenki>->%* )
    if $online_count != scalar keys <v7.online-zenki>->%*;

<[v7.handler.zenka_status]>->( $instance_id, $new_status );

#,,..,.,,,...,,,.,...,...,,,,,.,.,,.,,,..,,,,,..,,...,...,,..,,,,,,..,.,,,.,.,
#EHK6WI5BZHOMOJSJLVBI2FA2RPV7DZCPNABLUOURHHHTJ7UNO2ZBH2KGY6A2WSPN3K2EEKZ2ICQ4U
#\\\|YE4AYWX7XI4KNYQJH5JVSRV6F4UAIBVNTIJXSTTAYE5Q7MNTG3T \ / AMOS7 \ YOURUM ::
#\[7]7LPC3IMZKCWFXIDD54KZS3TSWAMAND5H5WXLAUABFPULCN3X36BQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
