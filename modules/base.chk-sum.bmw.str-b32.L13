## [:< ##

# name  = base.chk-sum.bmw.str-b32.L13
# descr = BASE32 encode string and return its L13 chksum

my $unencoded_input_str = shift // '';
if ( not length $unencoded_input_str ) {
    warn 'expected input string to chksum <{C1}>';
    return undef;
}

return
    <[chk-sum.bmw.L13-str]>
    ->( Crypt::Misc::encode_b32r($unencoded_input_str) );

#,,,,,..,,...,...,,..,.,.,,.,,...,,,,,..,,,..,..,,...,..,,,.,,..,,,,,,..,,,,.,
#OPFKIEFKVXSYNGFM33I3XJSDHVTPDMX54JOAGWXKPKC4G4H3VLQP35SF62L5WJW7OSPX7KUUDTTMM
#\\\|DYXMCJDHKYIBZFTTEJH3THVUKNAJB52Q6JHG2JF2J35BX35CZUK \ / AMOS7 \ YOURUM ::
#\[7]TPHVZ4L4N3VQV5LJXT73WJOCR2X54LD7JKN6ET33QL7KGOUQXQDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
