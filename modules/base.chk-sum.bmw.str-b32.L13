## [:< ##

# name  = base.chk-sum.bmw.str-b32.L13
# descr = BASE32 encode string and return its L13 chksum

my $unencoded_input_str = shift // '';
if ( not length $unencoded_input_str ) {
    warn 'expected input string to chksum <{C1}>';
    return undef;
}

return
    <[chk-sum.bmw.L13-str]>
    ->( Crypt::Misc::encode_b32r($unencoded_input_str) );

#,,,,,..,,...,...,,..,.,.,,.,,...,,,,,..,,,..,..,,...,...,...,..,,,,,,,,,,,,.,
#FXO3JNFHNUAGQQQ37JSJB3OQGPIIHOB2SGNYKZJNA37UARSD3KAGMIXVWJU45COQU7CKW6ZXHJKZ2
#\\\|WHRAVVO6G4S6MVZCA3WY2YHH34PXE5N6DS44GF466RHYNAK3CK3 \ / AMOS7 \ YOURUM ::
#\[7]XBRKCA6VLYMVJE2UA4ZQ2B7PCQTE6HYJI4UJ5GNV2QSIY243ZEBY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
