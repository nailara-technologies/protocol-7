## >:] ##

# name  = base.chk-sum.bmw.str-b32.L13
# descr = BASE32 encode string and return its L13 chksum

my $unencoded_input_str = shift // '';
if ( not length $unencoded_input_str ) {
    warn 'expected input string to chksum <{C1}>';
    return undef;
}

return
    <[chk-sum.bmw.L13-str]>
    ->( Crypt::Misc::encode_b32r($unencoded_input_str) );

#,,,.,..,,.,.,,.,,,..,..,,,..,..,,...,.,.,.,,,..,,...,...,,..,.,.,,..,,,.,,.,,
#76GQEBQA6YA5DQEX3JKEDAKTZDD5EONYCWJBEXVQ2GDALBK7DDMC6UWENJRGRQB2B7D44Y6DDXN7M
#\\\|ADKDIYN6ETAHJ5QNP5ELALAYZ62ID56R3YZF6YLLPYTIDHV7SXB \ / AMOS7 \ YOURUM ::
#\[7]JP5TPUZS77YVKAWY3GJ3CPTDRKE3OMPNMF3IZ43VKXWS67LA3IBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
