## [:< ##

# name  = mpv.cmd.is_idle
# descr = return if player cube is idle or not

my $reply_id = $call->{'reply_id'};
push <mpv.reply_ids>->@*, $reply_id;

my $mpv_property = qw| core-idle |;

##  storing value for error messages  ##
<mpv.request.property>->{$reply_id} = $mpv_property;

push <mpv.command.reply>->@*,
    { 'handler' => qw| mpv.handler.pipe.single_line | };

<[mpv.send_command]>->( qw| get_property_string |, $mpv_property );

return { 'mode' => qw| deferred | };

#,,,,,.,.,,.,,...,...,,,.,...,,.,,,..,..,,,,.,..,,...,...,..,,.,.,,,.,,.,,.,,,
#5DBLDTTVJD5AHQINV6RQCVQKIB7IBBM2JXKQP7FFYZSXE2B64ESIBT2UVVY3IRXY5UHIOBP4WMNCK
#\\\|ZV5AY2JDBLQUMQ7KSZ4UPFYJGP4ZLAAIYRATHOFECUWQ47PZ4FB \ / AMOS7 \ YOURUM ::
#\[7]UWLRGRQT2MAEJSDYUCYMG6ZBERTHJY3X4VJUJZGYBJBIBU2AYSCY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
