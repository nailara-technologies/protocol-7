## [:< ##

# name  = sourcecode.console.update-sub-list
# descr = update list of official protocol-7 subroutines

my $subfile_header_str = sprintf "## [:< ##\n\n# name  = %s\n\n",
    my $sub_list_filename = qw| base.list.subroutines |;

<[file.all_files]>->( <source.path.modules>, my $subroutine_files //= [] );

my $subroutine_count = scalar $subroutine_files->@*;

if ( $subroutine_count == 0 ) {
    <[base.logs]>->(
        0, "no files found in '%s' directory, aborting update ..,"
    );
    <[base.exit]>->(qw| 0110 |);
}

<[base.log]>->( 1, 'updating protocol-7 subroutine list ..,' );
<[base.logs]>->( ": target '%s' :.", $sub_list_filename );

my $sub_file_fh = <[file.open]>->(
    sprintf( qw| %s/%s |, <source.path.modules>, $sub_list_filename ),
    qw| :raw > |
);

<[base.exit]>->(qw| 0110 |) if not fileno($sub_file_fh);

say {$sub_file_fh} sprintf "%sreturn [ qw[\n", $subfile_header_str;

foreach my $file ( <[base.sort]>->($subroutine_files) ) {
    $file =~ s|^.*/||;
    say {$sub_file_fh} sprintf qw| %s%s |, ' ' x 8, $file;
    <[base.logs]>->( 2, ': :. %s', $file );
}

say {$sub_file_fh} sprintf "\n    ]\n];\n";
close($sub_file_fh);

<[base.logs]>->( ': : wrote %05d entries..,', $subroutine_count );

return 0;

#,,,.,...,...,...,.,.,.,,,,..,,,.,,,.,,,.,..,,..,,...,...,,.,,,.,,,.,,,..,,,.,
#A4OFNTDE2NBF22P2VE2VSA6RVDJYMVVGMFBOQIOVRYC5WAYSLXEYD77VVVE4WQINOY624JGXXU22S
#\\\|RPSUITW466SZLHDWA55ZCGJWJOA77Z72KORGIYFKKE2IKAVDN2L \ / AMOS7 \ YOURUM ::
#\[7]YGWF57NSTD7NEP25HHBIL3G5MG7Z2ZLRCK56OAIR7PNRUNJXZYBQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
