## [:< ##

# name  = base.cmd.buffer-erase
# descr = remove [ in-memory ] log buffer content
# param = <name>

my $param = shift;
my $id    = $param->{'session_id'};
my $name  = $param->{'args'};

return { 'mode' => qw| false |, 'data' => 'buffer name expected' }
    if not defined $name;

return { 'mode' => qw| false |, 'data' => 'no such buffer' }
    if not defined $data{'buffer'}{$name};

my $bytes = $data{'buffer'}{$name}{'size'};
return { 'mode' => qw| false |, 'data' => 'buffer was empty' } if $bytes == 0;

undef $data{'buffer'}{$name}{'data'}->@*;
$data{'buffer'}{$name}{'data'} = [];
$data{'buffer'}{$name}{'size'} = 0;
<log.file>->{$name}->{'next_index'}  = 0;
<log.file>->{$name}->{'start_index'} = 0;

<[base.logs]>->(
    "[%d] << cleared log buffer '%s' [ %d b ] >>",
    $id, $name, $bytes
);

return {
    'mode' => qw| true |,
    'data' => sprintf( "buffer '%s' cleared [ %d bytes ]", $name, $bytes )
};

#,,,.,,,,,..,,,.,,,,,,..,,,.,,..,,...,,,.,,..,..,,...,...,,,.,.,,,..,,,..,.,.,
#AV5SDGY7IM3YFS2EN27KGNFV22QQRKP76O7RIK2CWPZJZ26ZXYCS5PFFYNCIIFUNAYYSWKAY4YJ4W
#\\\|RRHO7ZDRTKGDE4HNXHMKB276J2WOJYIFDPUCNORH232ZR6IFJGT \ / AMOS7 \ YOURUM ::
#\[7]KUVAUA62APCKQFN3PDFK32GBMALVMVIYHJMUE6DRIY7DGRKEZUBY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
