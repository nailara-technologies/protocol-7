## [:< ##

# name  = base.cmd.buffer-erase
# descr = remove [ in-memory ] log buffer content
# param = <name>

my $param = shift;
my $id    = $param->{'session_id'};
my $name  = $param->{'args'};

return { 'mode' => qw| false |, 'data' => 'buffer name expected' }
    if not defined $name;

return { 'mode' => qw| false |, 'data' => 'no such buffer' }
    if not defined $data{'buffer'}{$name};

my $bytes = $data{'buffer'}{$name}{'size'};
return { 'mode' => qw| false |, 'data' => 'buffer was empty' } if $bytes == 0;

undef $data{'buffer'}{$name}{'data'}->@*;

$data{'buffer'}{$name}{'data'} = [];
$data{'buffer'}{$name}{'size'} = 0;

<[base.logs]>->(
    "[%d] << cleared log buffer '%s' [ %d b ] >>",
    $id, $name, $bytes
);

return {
    'mode' => qw| true |,
    'data' => sprintf( "buffer '%s' cleared [ %d bytes ]", $name, $bytes )
};

#,,..,..,,,.,,,,.,,.,,..,,,,.,,..,,,.,,,,,.,,,..,,...,...,,,.,,..,.,,,.,.,,..,
#2PAJKBQLQ36FQLEHVXAAVXQLWWYYU57HMVIR6FBQO55HWSCDYE3MQ3YX2FTJAEJGLXKVRSKZH4JA6
#\\\|RPHSHD5JSCXR7VZN3PVYRVD5JDRVYAS23CTS65IVNUNAT3NEUTB \ / AMOS7 \ YOURUM ::
#\[7]RRRIJA3FW4KFVR4Z47Q6QHWZF5T6VKT2ERMN6QJD2CFEGTCWROAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
