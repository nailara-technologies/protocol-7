## [:< ##

# name  = base.log.handler.log_reply
# descr = handle responses from log zenka [ 'append' command ]

my $reply        = shift;
my $name         = $reply->{'params'}->{'name'};
my $buffer_count = $data{'buffer'}{$name}{'data'}->@*;
my $log_data     = <log.file>->{$name};
my $retry
    = (     $reply->{'cmd'} eq qw| FALSE |
        and defined $reply->{'call_args'}->{'args'}
        and $reply->{'call_args'}->{'args'} =~ m|^command | ) ? TRUE : FALSE;

if ( $reply->{'cmd'} eq qw| TRUE | ) {    # success =)

    ## advance log buffer index ##
    $log_data->{'start_index'}  = ++$log_data->{'next_index'};
    $log_data->{'resend_delay'} = 0.113;    ##  resetting  ##

    if ( $log_data->{'next_index'} <= $buffer_count ) {    # more to send .,

        ## schedule sending next line using event management ##
        $log_data->{'retry_timer'} = <[event.add_timer]>->(
            {   qw| handler | => qw| base.log.handler.send_timer |,
                qw| after   | => 0,      ## no delay, as being successful ##
                qw| data    | => $name
            }
        );
    } else {
        $log_data->{'complete'} = TRUE;    ##  mark as complete \ current  ##
    }
} elsif ($retry) {    ##  was not written  ##  <--  use notify_online  [LLL]

    $log_data->{'resend_delay'} *= $log_data->{'resend_slowdown'};

    $log_data->{'retry_timer'} = <[event.add_timer]>->(
        {   qw| handler | => qw| base.log.handler.send_timer |,
            qw| after   | => $log_data->{'resend_delay'},
            qw| data    | => $name
        }
    );

} else {    # giving up \ parameter mismatch
    ## <[base.log]>->( 0, "[ '$name' buffer ] log line $buffer_count lost" );
}

#,,,,,,..,..,,...,,..,.,.,..,,.,.,.,.,,.,,.,,,..,,...,...,,,,,,.,,...,,,.,...,
#PVT4UNJCK5IAPZT4YHZDTENINN5BX4X3VJJK4DTI43EEZVWWGWRH62NRMNVNNC7KZRYOTNZL7ZWRK
#\\\|DSOFHLQUXG6QZEOWBHZ5UTCYYZKPAGKD7S6WYZR5KXDTFQZ3N3V \ / AMOS7 \ YOURUM ::
#\[7]GMALCI3H665FISITSBB34GEVMJMUAWHF53KTC5HME6I7XTWA6OAA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
