# >:]

# name = jobqueue.remove_job

my $job_id   = shift;
my $jobs     = <jobqueue.joblist.by_id>;
my $job_list = <jobqueue.joblist>;
my $prio     = $jobs->{$job_id}->{'priority'};
die "expected numerical job id" if not defined $job_id or $job_id !~ /^\d+$/;
die "a job with id $job_id does not exist"
    if not exists $jobs->{$job_id} or not defined $prio;

<[base.log]>->( 2, "removing job $job_id" );

my $queue_name = $jobs->{$job_id}->{'status'};
my $job_queue  = $job_list->{$queue_name};

foreach my $del_queue ( $job_queue->{'by_priority'}->{$prio},
    $job_queue->{'by_timestamp'} ) {
    my $del_index = 0;
    map { splice( @$del_queue, $del_index, 1 ) if $_ == $job_id; $del_index++ }
        @$del_queue;
}

delete $jobs->{$job_id};
