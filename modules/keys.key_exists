## >:] ##

# name  = keys.key_exists

my $key_name = shift;

if ( not defined $key_name ) {
    warn 'expected key name or filename parameter <{C1}>';
    return undef;
}

my $re_kfiles = <keys.regex.key_files>;

if ( $key_name =~ m|\.$re_kfiles$| ) {    ## key filename syntax ##

    my $key_dir = <[crypt.C25519.key_vars]>->{'key_dir'};

    my $key_found = grep { $ARG eq $key_name }    ##  match for key name  ##
        grep {s|^.*/||} <[file.get-non-dirs]>->($key_dir)->@*;

    return $key_found ? TRUE : FALSE;

} else {    ## key name syntax ##

    my $key_vars_ref = <[crypt.C25519.key_vars]>->($key_name);
    my $key_dir      = $key_vars_ref->{'key_dir'};
    my $match_re     = qr|^(\Q$key_name\E\.$re_kfiles)$|;

    my @keys_found = grep {m|$match_re|}    ##  match for key name  ##
        grep {s|^.*/||} <[file.get-non-dirs]>->($key_dir)->@*;

    return TRUE if scalar @keys_found;      ##  true \ key found  ##

    return FALSE;    ##  key with that name not present  ##
}

#,,.,,.,.,,,.,.,.,,,.,,..,..,,,.,,...,,,.,...,..,,...,...,...,,,.,,.,,,,.,,,,,
#EYNNL67YLPUQUNFEQGFZT5JQO2UYCQS3HZCA7FJWWTOFE3MTOA2CKBTXMGDLJI7AAABHVYNICC5XM
#\\\|LN4VQ7ZVI3VLCNDAIJWZ3JEQNUW43W3E4VI5XTNC67WFUWDPGR5 \ / AMOS7 \ YOURUM ::
#\[7]YMQP6KHZUWYN7J3HGJZ54EDLB5GRWXKFJIVGUU5NL2NNIP2FJABI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
