## [:< ##

# name  = v7.zenka.get_id
# descr = return zenka id for given name from setup
# note  = doesn't deal with multiple zenka setups for same name yet!

my $zenka_subname;
my $zenka_name = shift;

$zenka_subname = $1 if $zenka_name =~ s|\[([^\]]+)]$||;

die 'expected zenka name' if not defined $zenka_name or !length($zenka_name);

foreach my $id ( keys %{<v7.zenka.setup>} ) {
    my $setup_zenka = <v7.zenka.setup>->{$id}->{'name'};
    return $id if defined $setup_zenka and $setup_zenka eq $zenka_name;
}

<[base.log]>->( 2, "v7.zenka.get_id: no zenka '$zenka_name' found in setup" );
return undef;    # no such zenka

#,,.,,.,,,,.,,,,,,,.,,..,,,.,,,.,,.,,,,,.,,.,,..,,...,...,.,,,,.,,.,,,,,.,,,,,
#EP2SH4FHGM4N3RVTQVEJHGT43GE2OHRLRT6HTGQFXOOLYSIKFX5D7XLCDW4NBU3EY5KUQXT5CHYD6
#\\\|VYNZPCNWQRAORYKECSF6EL5DI4IAGZIJ5YD6SSK32UNLMVILUX4 \ / AMOS7 \ YOURUM ::
#\[7]QD3WTEXRIO4QRIDU4UK4LTFNQM6DFDNTBXNIAZIM22AQL34JMODQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
