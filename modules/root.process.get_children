# >:]

# name = root.process.get_children

my $chk_pid = shift;
die "expected parent process id" if not defined $chk_pid or $chk_pid !~ /^\d+$/;

my $proc_table = new Proc::ProcessTable;

my %ppids;
foreach my $proc ( @{ $proc_table->table } ) {
    $ppids{ $proc->{'pid'} } = $proc->{'ppid'};
}

my %children;
my $found = 0;
foreach my $pid ( keys(%ppids) ) {
    if ( $ppids{$pid} == $chk_pid ) {
        $children{$pid}->{'checked'} = 0;
        $found++;
    }
}

while ($found) {
    $found = 0;
    foreach my $child_pid ( keys(%children) ) {
        next if $children{$child_pid}->{'checked'} == 1;
        foreach my $pid ( keys(%ppids) ) {
            if ( $ppids{$pid} == $child_pid ) {
                $children{$pid}->{'checked'} = 0;
                $found++;
            }
        }
        $children{$child_pid}->{'checked'} = 1;
    }
}

return [ sort keys %children ];
