## >:] ##

# name  = debug.cmd.exec-sub
# param = <sub_name>
# descr = run subroutine and return output

my $support_params = <debug.exec-sub.allow-params> // 0;    ##  config  ##
( my $sub_name, my @params )
    = split( m| +|, $call->{'args'} );    ## quotes not supported ##

return {
    'mode' => qw| false |,
    'data' => 'expected subroutine name parameter'
    }
    if not length $sub_name;
return {
    'mode' => qw| false |,
    'data' => 'subroutine parameters are not supported'
    }
    if @params and not $support_params;

return { 'mode' => qw| false |, 'data' => 'no such subroutine' }
    if not exists $code{$sub_name};

my @sub_output = eval { $code{$sub_name}->(@params) };

my $err_str;
if ( length $EVAL_ERROR ) {
    $err_str = <[base.format_error]>->($EVAL_ERROR);
    $err_str = 'undefined error' if not length $err_str;
}

my $err_msg;
$err_msg = 'errors during subroutine execution' if $EVAL_ERROR;
$err_msg = 'undefined subroutine output'
    if not defined $err_msg and @sub_output == 0
    or @sub_output == 1 and not defined $sub_output[0];
return { 'mode' => qw| false |, 'data' => $err_msg } if defined $err_msg;

map { $ARG //= qw| UNDEF | } @sub_output if @sub_output > 1;

map { ( $ARG = Dumper($ARG) . "\n" ) =~ s|^\$VAR1 =|| if length ref $ARG }
    @sub_output;

my $rep_mode = qw| true |;

foreach my $sub_output_str (@sub_output) {
    $sub_output_str =~ s|\n$|| if $sub_output_str =~ m|\n| == 1;
    $sub_output_str =~ s|^ {2,}\};\n| \}\n|sm;
    $rep_mode = qw| size | if $sub_output_str =~ m|\n|;
}

return {
    'mode' => $rep_mode,
    'data' => join( $rep_mode eq qw| true | ? ', ' : "   ,\n", @sub_output )
};

#,,,,,,,,,,,,,,..,,,,,...,.,.,...,.,,,,.,,,,.,..,,...,...,,,.,,,,,,.,,.,.,...,
#EKTCSACA3H73GYPYSWRZXPB5D75VIYRCVDA7TO35MQQXLV6NF4PPLERFSDVOHF7UYOIPWBWCKISUA
#\\\|V5MVBBP27MQ66HJLSXLQPL64HXDRMQGZIXPV3XARNCPGTSPTITJ \ / AMOS7 \ YOURUM ::
#\[7]GVMHIGRSYW6GDPNRQZYRBQNRZI4HJ2EWL2HJRIFSK3QAYSHQB2CI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
