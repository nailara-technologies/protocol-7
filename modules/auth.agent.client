# >:]

# name  = auth.agent.client
# descr = authenticate to core in agent mode

my ( $filehandle, $agent, $key_str ) = @_;

if ( defined $key_str
    or %key
    and exists $key{'agent'}{'session_key'}
    and $key{'agent'}{'session_key'} ne '' ) {
    $key_str //= $key{'agent'}{'session_key'};
    my $smiley;
    if ( sysread( $filehandle, $smiley, 4 ) ) {
        if ( $smiley =~ />:\]\n/ ) {
            <[base.log]>->( 1, "[*] protocol banner detected.." );
        } else {
            <[base.log]>->( 0, "[#] some strange backendserver found!" );
            exit(1);
        }
    }

    <[net.out]>->( $filehandle, "select agent\n" );
    my $answer = readline($filehandle);

    if ( not defined $answer ) {
        <[base.log]>->( 0, "[X] connection lost :/" );
        return undef;
    } elsif ( $answer !~ /^ACK continue$/ ) {
        <[base.log]>->( 0, "[#] protocol error :(" );
        return undef;
    }

    <[net.out]>->( $filehandle, "$agent $key_str\n" );
    delete $key{'agent'}{'session_key'} if exists $key{'agent'}{'session_key'};

    $answer = readline($filehandle);

    if ( not defined $answer ) {
        <[base.log]>->( 0, "[X] connection lost :/" );
        return undef;
    } elsif ( $answer =~ /^YEAH / ) {
        <[base.log]>->( 1, "[*] successfully authenticated :)" );
        return $filehandle;
    } elsif ( $answer =~ /^FAIL / ) {
        <[base.log]>->( 0, "[#] access denied :(" );
        return undef;
    } elsif ( $answer =~ /^>:\|$/ ) {
        <[base.log]>->( 0, "[#] authentication timeout :|" );
        return undef;
    } else {
        <[base.log]>->( 0, "[#] protocol error :(" );
        return undef;
    }

} else {
    <[base.log]>->(
        0, "auth.agent.client: session_key not defined. authentication failed."
    );
    return undef;
}
