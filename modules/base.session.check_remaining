## [:< ##

# name  = base.session.check_remaining
# descr = exit zenka in no more sessions

my $exit_count    = shift // 0;
my $session_count = 0;

$session_count = scalar keys $data{'session'}->%* if defined $data{'session'};
if ($session_count) {
    my $single_server_session = 0;
    if ( $session_count == 1 ) {
        ( my $session_id ) = keys $data{'session'}->%*;
        $single_server_session = 5
            if $data{'session'}{$session_id}{'mode'} eq qw| server |;
    }
    if ($single_server_session) {
        <[base.log]>->( 2, 'one active server session ..,' );
    } else {
        <[base.logs]>->(
            2,              '%s session%s remaining.,',
            $session_count, <[base.cnt_s]>->($session_count)
        );
    }
} else {
    <[base.log]>->( 2, 'no sessions remaining..,' );
}

if (    ( $session_count + $exit_count ) == 0
    and exists $data{'callback'}
    and exists <callback.session>
    and exists <callback.session.closing_last> ) {

    if ( <system.zenka.type> eq qw| v7 | ) {
        <v7.check_remaining.fail_count> //= 0;
        <v7.check_remaining.fail_count>++;
        return if <v7.check_remaining.fail_count> < 2;
    }

    <[base.log]>->( 2, "executing 'closing_last' callback..," );
    $code{<callback.session.closing_last.name>}
        ->( @{<callback.session.closing_last.params>} );
}

<[v7.teardown]>
    if !$session_count
    and <system.zenka.name> eq qw| v7 |
    and <[v7.zenka.cmd.get-instance-ids]>->('cube')->{'mode'} eq qw| false |;

#,,.,,,.,,,,,,,,,,..,,,,.,,..,,..,,.,,,,,,,,.,..,,...,..,,,,,,,,,,,.,,..,,...,
#C2NFSEVSIOSE6X5MDSXCRNWGGG75MTLIWRNCQ3OQ6SS5MRIMOHQD7HJ5NJCOP2PVFEPSKP7PLWM3E
#\\\|Z5T4FJ7LCNZAEEGILM6QIU2V6FI5VMS75GTK4W5AWF2HX4XTXQA \ / AMOS7 \ YOURUM ::
#\[7]R533D6BCNJ352HUGTVYUCYGG6Y2ZUMFMI4ZE4J6LLSIUCVPWTECA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
