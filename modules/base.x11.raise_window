# >:]

# name = base.x11.raise_window

my $id = shift;

my $user     = shift || 'core';
my $cmd_path = shift || '';
$cmd_path .= '.' if length($cmd_path);
die "expected numerical window id" if not defined $id or $id !~ /^\d+$/;
my ($local_session_id) = keys( %{ $data{'user'}{$user}{'session'} } );

<[base.log]>->( 1, "raising window '$id'.." );

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $core_fh = $data{'session'}{$local_session_id}{'handle'};
<[net.out]>->( $core_fh, "($cmd_id)${cmd_path}xserver.raise_window $id\n" );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$core_fh>;
    die "core handle had an exception!" if not defined $reply_string;
    $matched_reply = 1 if $reply_string =~ /^\($cmd_id\)(N?ACK) /;
    if ( !$matched_reply ) {
        my $reply_cmd_id = $reply_string =~ /^\((\d+)\)(\S+)/ ? "($1)" : '';
        <[net.out]>->( $core_fh, "${reply_cmd_id}NACK not initialized yet!\n" )
            if uc($2) ne $2;
    }
}

if ( $reply_string =~ /^\($cmd_id\)NACK (.+)$/ ) {
    <[base.log]>->( 0, "raise_window command failed with '$1'.." );
    return 0;
} else {
    return 1;
}
