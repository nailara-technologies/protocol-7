## [:< ##

# name  = crypt.C25519.cmd.get-public-key
# descr = return public C25519 zenka-key [B32]

my $name = <crypt.C25519.key_vars.key_name>;

return {
    'mode' => qw| false |,
    'data' => sprintf( "session key '%s' not loaded", $name )
    }
    if not exists $keys{'C25519'}{$name}
    or not exists $keys{'C25519'}{$name}{'public'};

return {
    'mode' => qw| true |,
    'data' => sprintf( '[%s] %s',
        $name, encode_b32r( $keys{'C25519'}{$name}{'public'} ) )
};

#,,,,,,..,.,,,...,,.,,,.,,..,,,..,,,.,.,.,,,.,..,,...,...,,..,,,,,,,,,,,.,,,.,
#Q6DGDAQDIP4QV5TC5BMVYYUY2ULXR23V55YYROP6UVQW62ITXT7Q2NV6PUH3RSKHDLKTZRCZUXIXI
#\\\|ZQDG5CLUTRYFVNUCSNLQZPD6GHIFGSAKSIBSIYLT76MJQNAO6M6 \ / AMOS7 \ YOURUM ::
#\[7]RKRIE2EBZ2N65TOLA6BZVXWIJQUPOMWXAN26U6MTA47YZTGBBMBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
