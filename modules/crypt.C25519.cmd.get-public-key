## >:] ##

# name  = crypt.C25519.cmd.get-public-key
# descr = return public C25519 zenka key [B32]

my $key_name = <crypt.C25519.key_vars.key_name>;

return { 'mode' => qw| false |, 'data' => 'C25519 key name is not defined' }
    if not defined $key_name;
return {
    'mode' => qw| false |,
    'data' => "C25519 key '$key_name' is not loaded"
    }
    if not defined $keys{'C25519'}{$key_name}{'public'};

return {
    'mode' => qw| true |,
    'data' => sprintf( '[%s] %s',
        $key_name, encode_b32r( $keys{'C25519'}{$key_name}{'public'} ) )
};

#,,..,,,.,..,,,,.,,,.,.,,,.,,,..,,,,,,,.,,...,..,,...,..,,...,...,,.,,,,.,,..,
#DXLAVFJTFOYH6IU5LFBWQP6ZDRNRQPYEM2HVP6J7IBBNOLXCHJCIR7E35DY6VUEQZPF5CI26Y5DSO
#\\\|D3JUEFHRIKV4PMGEE2GZII6SP5EMQPB644EFPN35BV7FRHWVAJF \ / AMOS7 \ YOURUM ::
#\[7]SQMADBXQGJNPJCPFZB22MLAXOCRACXPMFBIBNL6OZPGI2S62CIBQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
