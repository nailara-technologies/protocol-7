## [:< ##

# name  = base.zenka.loop

my $ev_loop_timeout = shift;    ## loop duration [secs] \ not updated ##

<zenka.init_return> //= FALSE;  ## init-done status code ##

if ( <zenka.init_return> == 0 ) {    ## init-done not called yet ##
    ## declare initialization completed ##
    if ( <[base.init-done]> <= 0 ) {
        <[base.log]>->(
            0, 'init-done not successful, skipping zenka event-loop..,'
        );
        return <zenka.init_return> = -1;
    }
}

if ( <system.zenka.type> eq qw| cube | ) {
    <[base.session.check_remaining]>;    ## check if has server session ##
    <[base.log]>->( 1, ':. ready to process connections..,' );
}

##  output prompt line in background mode and still open STDOUT  ##
##
<[base.cube-zenka.output_prompt]> if <system.zenka.name> eq qw| cube |;

if ( defined $ev_loop_timeout ) {

    ## loop for exactly <timeout> seconds ##
    ##
    <[event.loop]>->($ev_loop_timeout);

} else {
    <[event.loop]>;    ## loop forever [ or unloop was called ] ##
}

return <zenka.init_return> = TRUE;

#,,,,,...,,.,,...,...,,..,...,,,,,,..,..,,...,..,,...,...,,.,,,.,,,,,,,.,,..,,
#CNXWBAMQ4BSGFFICV755CXFHTHE6XJJODJCSTXOOEMGK7T6RHICGYWGDX756JTE7DYDPIEZ32QFOU
#\\\|KCJG7TITCZXWDGHXCEEP5ISZZDF2MAPPSDXKG67T5LH7PXP4BAY \ / AMOS7 \ YOURUM ::
#\[7]MDU4KAFCKV6V7IJSNKW2WFZL54TKUH34DJWWXUVHQUHCKUFLLCDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
