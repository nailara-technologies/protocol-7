## [:< ##

# name  = fs.cmd.re-mount
# param = <mount-point>
# descr = forced re-mounting of specified mount-point

my $mount_point = $$call{'args'};
return { 'mode' => qw| false |, 'data' => 'expected mount-point parameter' }
    if not defined $mount_point;
$mount_point =~ s|/+$|| if length($mount_point) > 1;

<[base.log]>->( 1, "re-mount of '$mount_point' requested.." );

my $status = <[fs.is_mounted]>->($mount_point);

return {
    'mode' => qw| false |,
    'data' => 'specified mount-point does not exist'
    }
    if $status == -1;

my $success_msg = 'mounted now';

if ( $status == 1 ) {
    $success_msg = 're-mount successful';
    <[base.log]>->( 2, ": unmounting '$mount_point'.." );
    if ( system( '/bin/umount', $mount_point ) != 0 ) {
        $success_msg = 're-mount forced (successfully)!';
        <[base.log]>->(
            0, ": unable to unmount '$mount_point', using force!"
        );
        if ( system( '/bin/umount', '-f', '-l', $mount_point ) != 0
            or <[fs.is_mounted]>->($mount_point) ) {
            <[base.log]>->( 0, ": forced unmount of '$mount_point' failed!" );
            return {
                'mode' => qw| false |,
                'data' => "unable to unmount $mount_point"
            };
        }
    }
}

<[base.log]>->( 2, ": mounting '$mount_point'.." );
if ( system( '/bin/mount', $mount_point ) != 0
    or !<[fs.is_mounted]>->($mount_point) ) {
    <[base.log]>->( 0, ": mounting of '$mount_point' failed!" );
    return {
        'mode' => qw| false |,
        'data' => "unable to mount '$mount_point'"
    };
}

return { 'mode' => qw| true |, 'data' => $success_msg };

#,,.,,,..,...,,,,,,,.,,,,,..,,...,,..,,.,,.,,,..,,...,...,,..,,,.,...,,,,,,,,,
#64CP4QN63FQVAUIY3NQ4AACGD3OKNCHAG7XH4W3P2FLLNEU6WAMYIQM6XYLM5CRAXSGIBMSIFDLGK
#\\\|Q7LIVBAZRVHNS74USIUZRWZQZZXBOYOEDNYDLDXE74BVFGG3IOS \ / AMOS7 \ YOURUM ::
#\[7]RE4Z3C3VCIOBWV2Q4SCWDVO77GMLUUXL4AGEHC2PWASELX4PFYDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
