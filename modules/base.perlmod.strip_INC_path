## [:< ##

# name  = base.perlmod.strip_INC_path
# descr = remove matching @INC path component and return rel path .pm

my $module_path_abs = shift // '';    ##  found in %INC values  ##

if ( not length $module_path_abs
    or index( $module_path_abs, qw| / |, 0 ) != 0 ) {
    warn 'expected absolute perl module path <{C1}>';
    <[base.logs]>->( 1, ':. [  %s  ]', $module_path_abs );
    return undef;
}

my $match = 0;
foreach my $inc_path ( <[base.reverse-sort]>->( \@INC ) ) {
    $inc_path .= qw| / |;

    if ( index( $module_path_abs, $inc_path, 0 ) == 0 ) {
        substr( $module_path_abs, 0, length($inc_path), '' );
        $match = 5;    ## true ##
        last;
    }
}

return $module_path_abs if $match;    ##  return truncated path  ##

return undef;                         ##  undef \ no match  ##

#,,,.,,,.,,.,,.,,,...,...,.,,,..,,.,,,.,.,..,,..,,...,...,...,,,.,.,.,.,,,,.,,
#57AK2IH6AB46TY5VJII3CKALNQXDSNLJ4IZXM33S3KDWZSKAQKSPDU5JYEQM6JT5RFXGA2CHVXKR6
#\\\|26UD2U2HYX3DWNBHI4HN6W434GKSF5MCM62QLYCPT7DZTU7NCWN \ / AMOS7 \ YOURUM ::
#\[7]FUB5GBSQPDFJM2MJO2TPDYQGODQMNTUURMC3ISGBCBWSI5IUWOBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
