# >:]

# name = base.x11.wait_for_window

my $timeout  = <x11.window_timeout> || 10;
my $name     = shift;
my $user     = shift || 'core';
my $cmd_path = shift || '';
$cmd_path .= '.' if length($cmd_path);
if ( not defined $name ) {
    $name = <system.agent.name>;
    $name .= '[' . <system.agent.subname> . ']'
        if defined <system.agent.subname>;
    $name =~ s|([\(\)\[\]\{\}\\])|\\$1|g;
}
die "expected window name parameter" if not defined $name or !length($name);
my ($local_session_id) = keys( %{ $data{'user'}{$user}{'session'} } );

<[base.log]>->( 2, "waiting for window '$name'.." );

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $core_fh = $data{'session'}{$local_session_id}{'handle'};

<[net.out]>->(
    $core_fh, "($cmd_id)${cmd_path}xserver.wait_visible $timeout $name\n"
);

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$core_fh>;
    die "core handle had an exception!"
        if not defined $reply_string or !length($reply_string);

    $matched_reply = 1 if $reply_string =~ /^\($cmd_id\)(N?ACK) /;
    if ( !$matched_reply ) {
        my $reply_cmd_id = $reply_string =~ /^\((\d+)\)(\S+)/ ? "($1)" : '';
        <[net.out]>->( $core_fh, "${reply_cmd_id}NACK not initialized yet!\n" )
            if uc($2) ne $2;
    }
}

if ( $reply_string =~ /^\($cmd_id\)ACK (\d+)\n$/ and <x11.id> = $1 ) {
    <[base.log]>->( 1, ": received X window id '" . <x11.id> . "'.." );
    return <x11.id>;
} elsif ( $reply_string =~ /^\($cmd_id\)NACK window startup timed out!\n$/ ) {
    <[base.log]>->( 0, ": window startup timed out after $timeout seconds!" );
    return undef;
} else {
    <[base.log]>->(
        0,
        "protocol error (unexpected reply from xserver agent)"
            . " ['$reply_string' ] "
    );
    return undef;
}
