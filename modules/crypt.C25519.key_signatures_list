## [:< ##

# name  = crypt.C25519.key_signatures_list
# descr = retrieve signatures + pub keys for key from global %signatures hash

my $name          = shift;             ## C25519 key name ##
my $only_base_sig = shift // FALSE;    ##  optional  ##

return [] if not exists $signatures{$name}; ## no signatures stored for key ##

if ($only_base_sig) {    ##  only base signature requested  ##
    return [] if not exists $signatures{$name}->{'base'};
    return [ $signatures{$name}->{'base'} ];
}

my @signatures;
if ( not exists $signatures{'base'} ) {   ## no preference when no base sig ##

    foreach my $skey_name ( <[base.sort]>->( $signatures{$name} ) ) {
        push @signatures, $signatures{$name};
    }

} else {    ##  'base' signature entry and named matches first  ##

    push @signatures, $signatures{'base'};

    foreach my $skey_name ( <[base.sort]>->( $signatures{$name} ) ) {
        next if $skey_name eq qw| base |;    ##[ skip already added entry ]##
        next if $signatures{$name}->{'ks'} ne $signatures{'base'}->{'ks'};
        push @signatures, $signatures{$name};
    }
    foreach my $skey_name ( <[base.sort]>->( $signatures{$name} ) ) {
        next if $skey_name eq qw| base |;    ##[ skip already added entry ]##
        next if $signatures{$name}->{'sk'} eq $signatures{'base'}->{'sk'};
        push @signatures, $signatures{$name};
    }
}

return \@signatures;

#,,.,,,.,,..,,,..,,,.,,,.,.,,,,.,,,..,,.,,,,.,..,,...,...,.,.,.,,,..,,..,,..,,
#VKJTAVHIKUAZGAZ4BUBJL4FEOI5JPRLBBQEGWLGFNRX7MWLLPUKSD7MGMACKXIHFQVSEQYNNX4236
#\\\|3V3IZQVK4PXKLDW4PEUG3H7LREGT6K6T3RJCWJY3CZRJZAOPZV7 \ / AMOS7 \ YOURUM ::
#\[7]YTEXJIU7XHHSXWFCTIEVU64NRMYCSZRB23SD5GVYHVQ6BBJPC2DQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
