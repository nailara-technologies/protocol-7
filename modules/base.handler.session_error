## [:< ##

# name  = base.handler.session_error
# descr = socket exception handler [ terminates session ]

my $fd = $_[0]->w->fd;
my $id = $_[0]->w->data;

<[base.logs]>->( 2, '[%d] socket exception, stopping input ..,', $id );

if ( defined $data{'session'}->{$id} ) {
    my $session = $data{'session'}->{$id};
    $session->{'shutdown'} = 1;
    map { $session->{'watcher'}->{$ARG}->cancel } ## halting input-watchers ##
        grep {m|input(*nla:_buffer)|} ## input buffer allowed to keep state ##
        <[base.reverse-sort]>->( $session->{'watcher'} );
} else {
    shutdown( $fd, 2 );
    close($fd);
}

#,,,,,,,.,,,,,,,.,..,,,,.,,,,,.,,,,,.,.,.,..,,..,,...,..,,.,,,..,,..,,,.,,,,.,
#CQ7G3TKUWQ3PHWABQ3QYWMNQPD23NFLEW32AZ7THE6RUMLFCS3G3PJJPOF47UP3UI5C66IE2NUR4O
#\\\|BSZA5GLKTJVPXGW7I36YNY6VUPTV2CNWTR5C43M4G5Q7QTE3SLA \ / AMOS7 \ YOURUM ::
#\[7]T5WF7JEANJYVDA74Z5VM5OMMH6PQU2BPFGTRBKL7QDIZEQTY7SAQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
