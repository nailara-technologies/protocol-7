## [:< ##

# name  = discover.log_mcast_packet
# descr = add string to packet log buffer

my $type       = shift // '';
my $packet_str = shift // '';

if ( not length $type ) {
    warn 'expected packet type parameter <{C1}>';
    return undef;
} elsif ( $type !~ m{^(incoming|outgoing)$} ) {
    warn 'packet type parameter not valid [incoming|outgoing] <{C1}>';
    return undef;
} elsif ( not length $packet_str ) {
    warn 'expected packet string param <{C1}>';
    return undef;
}

my @packet;
push @packet, ( '=' x 77, '' )
    if not defined $data{'buffer'}{$type}{'data'}
    or $data{'buffer'}{$type}{'data'}->@* == 3;

chomp $packet_str;
push @packet, split "\n", $packet_str;
push @packet, ( '', '=' x 77, '' );

foreach my $line (@packet) {
    <[base.buffer.add_line]>->( $type, $line );
}

return TRUE;

#,,,.,,..,...,.,.,,..,.,,,.,.,,,,,.,,,,,.,.,,,..,,...,...,..,,.,.,,,.,,.,,...,
#2ZLFMTC5JYN7UXV5WCVW5PGT75LBIZGQE2XEJ2USIAJHP6QVZXWCN6DEL3RDUEWAXBGUIUVCHHCSE
#\\\|O5CUSXW6TNOCGDXTN6U4RLA6TUA6BDTUOXKVFCJUI2JG5QR5V76 \ / AMOS7 \ YOURUM ::
#\[7]XZB5MTIWBAZX7B6ZYD5IWEZDEXY7ZDJ2XYRLERD65RGZWHP6XKDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
