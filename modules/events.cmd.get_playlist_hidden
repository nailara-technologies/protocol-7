## [:< ##

# name  = events.cmd.get_playlist_hidden
# descr = hidden entry list from playlist event stack

my $reply_str = '';

my %hidden;

map {    # SHOW\HIDE
    $hidden{$ARG} = 5    ## true ##
        if ( not defined <events.stack.playlist>->{$ARG}->{'action'}->{'type'}
        or <events.stack.playlist>->{$ARG}->{'action'}->{'type'} ne
        qw| playlist-exclusive-entry | )
        and <events.stack.playlist>->{$ARG}->{'visibility'} < 1;
    }
    keys <events.stack.playlist>->%*;

map {    # EXCLUSIVE
    my $action = <events.setup>->{$ARG}->{'action'};
    if (    defined $action
        and defined $action->{'type'}
        and $action->{'type'} eq qw| playlist-exclusive-entry | ) {
        my $b32id = $action->{'b32id'};
        $hidden{$b32id} = 5    ## true ##
            if not defined <events.stack.exclusive>->{$b32id}
            and ( not defined <events.stack.playlist>->{$b32id}
            or <events.stack.playlist>->{$b32id}->{'visibility'} < 1 );
    }
    }
    keys <events.setup>->%*;

map { $reply_str .= sprintf "%s\n", $ARG } keys %hidden;

return { 'mode' => qw| size |, 'data' => $reply_str }

#,,..,.,,,,.,,.,,,.,.,.,,,,,.,..,,..,,..,,,,,,..,,...,..,,..,,,.,,,,.,,,,,.,,,
#HZVI5C6XTV5PDSQ2CDDX32VG7VLYD33OSZ3QHLANHMZVXF3Q3MGDMIDKW2NTCZJBS4JIK4YGEWZRW
#\\\|RHGN5E7MQ474RLG7UUNI67ML4NONJ5VORTVBMLULHUSDURPIUVD \ / AMOS7 \ YOURUM ::
#\[7]T33K42QKGUDLLG7IRDNDB3BKFEVURBJCSGANV5MQCZE2SQEYZCAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
