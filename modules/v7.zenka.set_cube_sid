## [:< ##

# name = v7.zenka.set_cube_sid

my ( $instance_id, $cube_sid ) = @ARG;
my $instance_data = <v7.zenka.instance>->{$instance_id};

if ( not defined $cube_sid or exists $instance_data->{'cube_sid'} ) {
    my $error_msg
        = defined $cube_sid
        ? '<< cube sid for instance %d was already set, no verification >>'
        : '<< no cube session id, skipping instance %d verification >>';

    <[base.logs]>->( 0, $error_msg, $instance_id );

    <[zenka.change_status]>->( $instance_id, qw| error | );
    return;    ##  compromisation attempt ?  ## [ when set ]
}

<[base.log]>->( 2, "instance $instance_id : cube sid = $cube_sid" );
$instance_data->{'cube_sid'} = $cube_sid;

## LLL: unclear if will be required \ used later ##
my $inst_pid = $instance_data->{'process'}->{'id'};
<v7.process.instance_cache>->{$inst_pid} = $instance_id
    if defined $inst_pid;
##

# acquire local cube sid [ get first and only sid for now ]
my ($root_sid) = keys %{ $data{'session'} };

$instance_data->{'root_sid'} = $root_sid;

# send instance verification request
<v7.timeout.verify_instance> //= 13;
my $verification_str = uc( <[base.prng.chars-anum]>->(13) );
$instance_data->{'instance_verification'} = $verification_str;
$instance_data->{'timer'}->{'verify_instance'} = <[event.add_timer]>->(
    {   'after'   => <v7.timeout.verify_instance>,
        'handler' => qw| v7.handler.verify_instance_timeout |,
        'data'    => { 'instance_id' => $instance_id }
    }
);

<[base.log]>->( 1, "[$instance_id] verification request <$cube_sid>" );

<[base.protocol-7.command.send.local]>->(
    {   'command'   => "$root_sid.$cube_sid.verify-instance",
        'call_args' => { 'args' => $verification_str }
    }
);

#,,,,,...,,.,,.,,,,,.,...,,,.,,..,.,.,.,,,.,,,..,,...,..,,.,,,,,,,...,,..,,..,
#7QGZSTL4UD75VD3KQ354BJIK433YBG3INQPMSGHE7OLVAAEZ4THNZWTG7HYLOS32CWM5SU37KZFHQ
#\\\|V32CQGT7GSDI3RH4LRR53AJZDE3GYDRGLRKHKCYO7HDNUCQ5J5X \ / AMOS7 \ YOURUM ::
#\[7]EEO2W6NUQBT3YFU5GN56KFGPGMBT242EVFGXP35UT6PWRDTWFSDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
