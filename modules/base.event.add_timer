## [:< ##

# name  = base.event.add_timer
# descr = install a timer watcher

my $params = shift;

return undef
    if ref($params) ne qw| HASH |
    and warn 'base.event.add_timer: expected hash reference <{C1}>';

my $cb_name;
my $callback_cref;

if ( defined $params->{'handler'} ) {
    $cb_name = $params->{'handler'};
    if ( defined $params->{'cb'} ) {
        warn "redundant callback definition [ 'handler' and 'cb' ] <{C1}>";
        return undef;
    } elsif ( not defined $code{$cb_name} ) {
        <[base.s_warn]>->(
            'callback handler [ %s ] not defined <{C1}>', $cb_name
        );
        return undef;
    } else {    ## callback [ handler ] by name ##

        ##  wrapper making sure the callback survives source code reload  ##

        $callback_cref = sub { $code{$cb_name}->(@ARG) };

        ##  callback gets updated,                   ##
        ## be careful with outdated parameter lists  ##
    }
} elsif ( defined $params->{'cb'} and ref $params->{'cb'} eq qw| CODE | ) {

    ##  wrapped for code updates  ##
    $callback_cref = sub { $params->{'cb'}->(@ARG) };    ## as code ref ##

} elsif ( defined $params->{'cb'} ) {
    warn 'callback [cb] param not a code ref <{C1}>';
    return undef;
} else {
    warn 'callback \ handler parameter missing <{C1}>';
    return undef;
}

my @event_time;
map {
    push( @event_time, ( $ARG => $params->{$ARG} ) )
        if defined $params->{$ARG}
} qw| at after |;

my $repeat
    = ( defined $params->{'interval'} and $params->{'interval'} ) ? 1 : 0;

my $timer;
eval {
    $timer = Event->timer(
        'reentrant' => $params->{'reentrant'} // 1,
        'repeat'    => $params->{'repeat'}    // $repeat,
        'prio'      => $params->{'prio'}      // 1,
        'async'     => $params->{'async'}     // 0,
        'desc'      => $params->{'desc'}      // $cb_name,
        'cb'        => $callback_cref,
        'time'      => $params->{'time'},
        'interval'  => $params->{'interval'},
        'hard'      => $params->{'hard'},
        'data'      => $params->{'data'},
        @event_time
    );
};

<[base.s_warn]>->( '%s <{C1}>', <[base.str.eval_error]> )
    if length $EVAL_ERROR or not defined $timer;

return $timer;

#,,..,,,.,,.,,,..,,.,,,,.,.,,,..,,..,,,.,,,,,,..,,...,...,..,,,,,,,,,,..,,.,,,
#GZA3ZIMBA5OLAZ2VK2WNXUITVWXEZYEILABDWNVU24H726G4LBALMXG2PE4F46ADKVXRIFAK3WSXC
#\\\|SLP5FZ6CWXUMQI7XTOUZ6A5VFRFCIALBWWUXBEMXSOFZJKMHWAI \ / AMOS7 \ YOURUM ::
#\[7]VHS7EVKGSJAGGWAQ54X4JDXAKMYWOU6RXUIPVOUEHXRAUR7NUKDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
