## >:] ##

# name = web-browser.init_code

<system.zenka.mode> //= qw| stand-alone |;

<[base.perlmod.autoload]>->('Gtk3');
<[base.perlmod.autoload]>->('Glib');
<[base.perlmod.autoload]>->('HTTP::Soup');
<[base.perlmod.autoload]>->('Gtk3::WebKit2');
<[base.perlmod.autoload]>->('Glib::Object::Introspection');
<[base.perlmod.load]>->( 'Crypt::Misc', qw| encode_b32r | );

my $opt_mod_name = qw| Glib::Event |;

eval { <[base.perlmod.autoload]>->($opt_mod_name) };   ## may fail,optional ##

my $log_level = length $EVAL_ERROR ? 0 : 1;

<[base.logs]>->(
    $log_level, ":.. will run without '%s', at performance cost ..,",
    $opt_mod_name
) if not <[base.perlmod.loaded]>->($opt_mod_name);

$ENV{'NO_AT_BRIDGE'} = 1;
$ENV{'GTK_DEBUG'}    = qw| no |;
$ENV{'GDK_DEBUG'}    = qw| no |;

<web-browser.title_prefix> = qw| amos-desktop |;

<web-browser.path> = {
    qw| icon-file | => catfile(
        <system.root_path>, qw| data/gfx/icons/protocol-7/nailara.64x64.png |
    )
};

## setting <web-browser.window.title_str> ##
<[web-browser.start-up.init_window_title]>;

<[base.stderr_redir]>;    ## redirect STDERR ##

<web-browser.status.fade_view> //= 0;
<web-browser.fg_opacity>       //= 1;

<web-browser.bg_color> //= '#000013';    ##  <--  dark blue background ###

<web-browser.zoom_level>  //= 1;
<web-browser.zoom_factor> //= 1; # adjusts configured or calculated zoom level
<web-browser.zoom_text_only> //= 0;

<web-browser.slideshow.no_scroll>        //= 0;
<web-browser.slideshow.no_switch>        //= 0;
<web-browser.cfg.user_can_scroll>        //= 0;
<web-browser.cfg.links_clickable>        //= 0;
<web-browser.cfg.allow_text_edit>        //= 0;
<web-browser.cfg.allow_scrollbars>       //= 0;
<web-browser.cfg.overlay_scrolling>      //= 1;
<web-browser.cfg.force_overlay>          //= 0;
<web-browser.cfg.show_progress_bar>      //= 1;
<web-browser.cfg.javascript_enabled>     //= 1;
<web-browser.cfg.plugins_enabled>        //= 0;
<web-browser.cfg.load_timeout>           //= 13;
<web-browser.cfg.use_transparency>       //= 1;
<web-browser.cfg.autospeed_notrans>      //= 1;
<web-browser.slideshow.swap_delay>       //= 2;
<web-browser.slideshow.err_delay>        //= 2;
<web-browser.slideshow.iteration>        //= 0;
<web-browser.slideshow.paused>           //= 0;
<web-browser.scroll.fail.timeout>        //= 2.7;
<web-browser.scroll.fail.js_disabled>    //= 0;
<web-browser.cfg.no_memory_cache>        //= 0;
<web-browser.redraw_fps.slowdown>        //= 0;
<web-browser.redraw_fps.slowdown_target> //= 0;
<web-browser.cfg.max_gpu_load> //= 67;    # % [ auto-speed mode load target ]

<[web-browser.calc_scroll_speed]>
    if not defined <web-browser.subcfg>
    or ref(<web-browser.subcfg>) eq qw| HASH |
    and not defined <web-browser.subcfg.scroll_speed>;

$ENV{'GTK_OVERLAY_SCROLLING'}
    = (
           <web-browser.cfg.force_overlay>
        or <web-browser.cfg.allow_scrollbars>
        && <web-browser.cfg.overlay_scrolling>
    )
    ? 1
    : 0;

<web-browser.html_ref.loading_page>
    = <[file.slurp]>->(<web-browser.loading_page>);

# [ workaround to suppress weird\untraceable Event.pm warnings on load timeout ]
<sig_warn_blacklist.package> = qw| Carp |;
<sig_warn_blacklist.pattern>
    = qr{Source ID \d+ was not found when attempting to remove it
        |GLib-LOG \*\*: posix_start avoided}x;

<web-browser.open_gtk_inspector> //= 0;
if (<web-browser.open_gtk_inspector>) {
    <[base.log]>->(
        0, "<<< 'Gtk Inspector' enabled.., >>>  [ open_gtk_inspector=1 ]"
    );
    $ENV{'GTK_DEBUG'} = qw| interactive |;
}

package Browser::ScrolledWindow;

use Glib::Object::Subclass qw| Gtk3::ScrolledWindow |;

sub INIT_INSTANCE {
    my $self = shift;
    $self->set_policy(qw|  never  never  |);
}

package Browser::WebView;

#[ AUTOSCROLL WITHOUT JS ]######################################################
# web extension to access DOM coming later: needs webkit2/webkit-web-extension.h
#        ( ... see https://github.com/tlby/webkit2gtk-webextension-example.git )
################################################################################

Glib::Object::Introspection->setup(
    qw| basename WebKit2 version 4.0 package Gtk3::WebKit2 |);

use Glib::Object::Subclass qw| Gtk3::WebKit2::WebView |,
    properties => [
    Glib::ParamSpec->boolean(
        qw|  self-scrolling  undefined  undefined  |, 0,
        [qw| readable writable |]
    ),
    ];

sub INIT_INSTANCE {
    my $self = shift;
    $self->set_property( qw| self-scrolling |, 0 );
}

$code{'base.handler.end_code'} = sub {
    <[base.log]>->( 1, ': closing window ..,' );
    <[event.once]>;
    <web-browser.gtk_obj.window>->close;
    Gtk3->main_iteration_do;
    <[base.log]>->( 2, ': gtk3 shutdown ..,' );
    <[event.once]>;
    eval { Gtk->main_quit() };
    <[base.exit]>->( ':. [ shutdown complete ].', 2, qw| 00000 | );
};

0;

#,,.,,,,,,,,.,..,,...,,..,,,.,...,,.,,,,.,,,.,..,,...,...,,,,,...,.,,,,,,,.,.,
#G43JZDZI2GCJ6SINHLOO2KJKMXBOEP6HPXHWROSANCAZ5S2QY4IKMN2WDBF2PJWOSAMYDVOORQGNK
#\\\|Y53FTWBW4L3PAVQAYYA2J3LHS5IGM3RTUSAU2KRH2M4SVFGV62H \ / AMOS7 \ YOURUM ::
#\[7]35DAT24C45WYIARZEAKTITVMU5PK3VEQ3FWDZOQEEJHIRGOSMICQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
