## >:] ##

# name = web-browser.init_code

<system.zenka.mode> //= 'stand-alone';

<[base.perlmod.autoload]>->('Gtk3');
<[base.perlmod.autoload]>->('Glib');
<[base.perlmod.autoload]>->('HTTP::Soup');
<[base.perlmod.autoload]>->('Gtk3::WebKit2');
<[base.perlmod.autoload]>->('Glib::Object::Introspection');
<[base.perlmod.load]>->( 'Crypt::Misc', qw| encode_b32r | );

eval { <[base.perlmod.autoload]>->('Glib::Event') }; # may fail, not mandatory #

my $l = $EVAL_ERROR ? 0 : 1;
<[base.log]>->( $l, ":.. will run without 'Glib::Event', less efficient ..," )
    if not defined <base.perlmod.loaded>->{'Glib::Event'}
    or <base.perlmod.loaded>->{'Glib::Event'} == 0;

$ENV{'NO_AT_BRIDGE'} = 1;
$ENV{'GTK_DEBUG'}    = 'no';
$ENV{'GDK_DEBUG'}    = 'no';

<web-browser.title_prefix> = 'amos-desktop';

<web-browser.path> = {
    'icon-file' => join( '',
        <system.root_path>,
        qw| /data/gfx/icons/protocol-7/nailara.64x64.png | )
};

## setting <web-browser.window.title_str> ##
<[web-browser.start-up.init_window_title]>;

<[base.stderr_redir]>;    ## redirect STDERR ##

<web-browser.status.fade_view> //= 0;
<web-browser.fg_opacity>       //= 1;

<web-browser.bg_color> //= '#000013';    ##  <--  dark blue background ###

<web-browser.zoom_level>  //= 1;
<web-browser.zoom_factor> //= 1; # adjusts configured or calculated zoom level
<web-browser.zoom_text_only> //= 0;

<web-browser.slideshow.no_scroll>        //= 0;
<web-browser.slideshow.no_switch>        //= 0;
<web-browser.cfg.user_can_scroll>        //= 0;
<web-browser.cfg.links_clickable>        //= 0;
<web-browser.cfg.allow_text_edit>        //= 0;
<web-browser.cfg.allow_scrollbars>       //= 0;
<web-browser.cfg.overlay_scrolling>      //= 1;
<web-browser.cfg.force_overlay>          //= 0;
<web-browser.cfg.show_progress_bar>      //= 1;
<web-browser.cfg.javascript_enabled>     //= 1;
<web-browser.cfg.plugins_enabled>        //= 0;
<web-browser.cfg.load_timeout>           //= 13;
<web-browser.cfg.use_transparency>       //= 1;
<web-browser.cfg.autospeed_notrans>      //= 1;
<web-browser.slideshow.swap_delay>       //= 2;
<web-browser.slideshow.err_delay>        //= 2;
<web-browser.slideshow.iteration>        //= 0;
<web-browser.slideshow.paused>           //= 0;
<web-browser.scroll.fail.timeout>        //= 2.7;
<web-browser.scroll.fail.js_disabled>    //= 0;
<web-browser.cfg.no_memory_cache>        //= 0;
<web-browser.redraw_fps.slowdown>        //= 0;
<web-browser.redraw_fps.slowdown_target> //= 0;
<web-browser.cfg.max_gpu_load> //= 67;    # % [ auto-speed mode load target ]

<[web-browser.calc_scroll_speed]>
    if not defined <web-browser.subcfg>
    or ref(<web-browser.subcfg>) eq 'HASH'
    and not defined <web-browser.subcfg.scroll_speed>;

$ENV{'GTK_OVERLAY_SCROLLING'}
    = (
           <web-browser.cfg.force_overlay>
        or <web-browser.cfg.allow_scrollbars>
        && <web-browser.cfg.overlay_scrolling>
    )
    ? 1
    : 0;

<web-browser.html_ref.loading_page>
    = <[file.slurp]>->(<web-browser.loading_page>);

# [ workaround to suppress weird\untraceable Event.pm warnings on load timeout ]
<sig_warn_blacklist.package> = 'Carp';
<sig_warn_blacklist.pattern>
    = qr{Source ID \d+ was not found when attempting to remove it
        |GLib-LOG \*\*: posix_start avoided}x;

<web-browser.open_gtk_inspector> //= 0;
if (<web-browser.open_gtk_inspector>) {
    <[base.log]>->(
        0, "<<< 'Gtk Inspector' enabled.., >>>  [ open_gtk_inspector=1 ]"
    );
    $ENV{'GTK_DEBUG'} = 'interactive';
}

package Browser::ScrolledWindow;

use Glib::Object::Subclass 'Gtk3::ScrolledWindow';

sub INIT_INSTANCE {
    my $self = shift;
    $self->set_policy( 'never', 'never' );
}

package Browser::WebView;

#[ AUTOSCROLL WITHOUT JS ]######################################################
# web extension to access DOM coming later: needs webkit2/webkit-web-extension.h
#        ( ... see https://github.com/tlby/webkit2gtk-webextension-example.git )
################################################################################

Glib::Object::Introspection->setup(
    qw| basename WebKit2 version 4.0 package Gtk3::WebKit2 |);

use Glib::Object::Subclass 'Gtk3::WebKit2::WebView',
    properties => [
    Glib::ParamSpec->boolean(
        'self-scrolling', 'undefined',
        'undefined',      0,
        [qw| readable writable |]
    ),
    ];

sub INIT_INSTANCE {
    my $self = shift;
    $self->set_property( 'self-scrolling', 0 );
}

0;

#,,,.,.,,,,..,.,,,,.,,..,,..,,,.,,,..,.,.,.,.,..,,...,..,,,,,,,..,..,,..,,..,,
#OLASLHRLPJAWCHO6W6RFEMQPYRXLLWEO4BJUGBFIAJ22RDYQQ6AM4A2PGQ74UWBVS4CKXIHIYZAEY
#\\\|AO5265JWZEUZ33TTIOAR7PC4TP4RX5JPKNHI7LULMIDCICN2A7L \ / AMOS7 \ YOURUM ::
#\[7]E5D4EG6AQMQMLO76A67V73T67BWJAIGIF6ONETP57LJMHRM4HABI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
