## [:< ##

# name = discover.init_code

<[base.perlmod.autoload]>->('IO::Interface::Simple');

my $key_path_owner = <crypt.C25519.usr_name> // <system.amos-zenka-user>;
<discover.crypt.key_user> //= $key_path_owner;
<discover.crypt.key_name> = <[crypt.C25519.key_vars]>->{'key_name'};

my $max_nodes_entries = <discover.cfg.max_entries.nodes> //= 4200;

##  disable in zenki/discover/start when required  ##
##
<discover.cfg.log-packets.incoming> //= TRUE;
<discover.cfg.log-packets.outgoing> //= TRUE;

$data{'hosts'} //= {};

<list.nodes> = {
    'var'      => qw| data |,
    'key'      => qw| hosts |,
    'sort_key' => qw| alpha:pkey |,
    'mask'     => 'host pkey:host_key ip_addr hwaddr iface',
    'align'    => {
        qw| pkey  |   => qw|  left+2  |,
        qw| host  |   => qw|  right-2 |,
        qw| ip_addr | => qw|  left+2  |,
        qw| hwaddr |  => qw|  center  |,
        qw| iface  |  => qw|  left+3  |
    },
    'filters' => {
        qw| pkey |   => qw| base.parser.key_mem_chksum |,
        qw| hwaddr | => qw| discover.parser.hwaddr |,
    },
    'descr' => 'protocol 7 nodes [ hosts ] seen online'
};

<[base.list.init]>->(
    {   qw| name |     => qw| nodes |,
        'key_ref'      => \$data{'hosts'},
        'max_elements' => $max_nodes_entries    ## <-- implement limit [LLL]
    }
);

##  initialize packet log buffers  ##
<[discover.init_packet_buffer]>;

<discover.cache.hosts> //= {};    # ->{..name..}->{..mac..} = ipaddr

<[discover.callback.resend_interval_reset]>;

<[event.add_signal]>->( { 'signal' => 'CHLD', 'handler' => qw| dev.null | } );

0;

#,,,.,.,.,.,,,,,,,..,,,,,,.,.,,,.,.,,,,.,,..,,..,,...,...,.,,,,,,,.,.,,,.,...,
#G6UDA7QKFMH4J7NNCLVFMY4QJGY72YEHUWZYGWAB2EYRY42FXR4YXYUDZQNXB5PSEEV37UVWKFOGE
#\\\|4GZPSIK7TZAOMK63WAZ5HW7C73IS7RVLLTBMNSUPMKUZ7DWYNRH \ / AMOS7 \ YOURUM ::
#\[7]WTJLIHI47MDW2QCESG7FN6EXZR37C4BAXONLJ4XQ6LCT7MC46YBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
