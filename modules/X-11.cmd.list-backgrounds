## >:] ##

# name  = X-11.cmd.list-backgrounds
# descr = list available X-11 desktop backgrounds

my $bg_gfx_path = <X-11.bg_gfx_directory>;

my $err_reason_mesg;
$err_reason_mesg = 'background-gfx directory is undefined'
    if not defined $bg_gfx_path;
$err_reason_mesg = 'background-gfx directory cannot be found'
    if not defined $err_reason_mesg and not -d $bg_gfx_path;
$err_reason_mesg = 'background-gfx directory not readable'
    if not defined $err_reason_mesg and not -r $bg_gfx_path;
return { 'mode' => qw| false |, 'data' => $err_reason_mesg }
    if defined $err_reason_mesg;

my $amos7_checksum_cache = <[X-11.background-image-list]>;    ##[ updated ]##

return { 'mode' => qw| false |, 'data' => 'error while reading image list' }
    if ref $amos7_checksum_cache ne qw| HASH |;

return { 'mode' => qw| false |, 'data' => 'no image files found' }
    if not keys $amos7_checksum_cache->%*;

my @bg_img_files;    ##  amos7 image path chksums \ filename  ##
my %bg_image_pathmap = reverse $amos7_checksum_cache->%*;

foreach my $bg_gfx_path ( <[base.sort]>->( \%bg_image_pathmap ) ) {
    ( my $image_path_rel = $bg_gfx_path ) =~ s|^.*/||;
    push @bg_img_files, sprintf ":. %s .: %s\n",
        $bg_image_pathmap{$bg_gfx_path}, $image_path_rel;
}

return { 'mode' => qw| size |, 'data' => join '', @bg_img_files }

#,,,,,,,,,,,,,,,.,,.,,,,,,,,.,..,,..,,,,,,.,,,..,,...,...,...,...,.,,,.,.,,,.,
#DI3PBCWNSMFNNI3A7WCLNGOCMQSWKBXJDBERRGHLZ6FR2OZYTFKZYESJL32MHH4QB75QMAKEYN7MO
#\\\|BNKHMWCOULEANRERN6IS72KHFOOHKVH4BBWUEOVITLMV7MGF7ZF \ / AMOS7 \ YOURUM ::
#\[7]ECREEG7LJSLYUU2CVUPNXIXOAIJ6WM7M6HARRC5X5NDLZYJV2WBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
