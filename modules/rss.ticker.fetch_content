# >:]

# name = rss.ticker.fetch_content

my $update_command = shift;
my $rss_url        = <rss.ticker.content_url>;
die "no content url set up" if not defined $rss_url or !length($rss_url);

<[base.log]>->( 2, "checking RSS ticker for new data..." );

my $response = <rss.browser>->get($rss_url);

if ( $response->code == 200 ) {

    <[base.log]>->( 2, ": got fresh RSS content..." );
    my $feed
        = <rss.parser>
        ->parse_string( encode( 'utf-8', $response->decoded_content ) );
    die <rss.parser>->errstr if not defined $feed;

    my @txt_data;
    foreach my $item ( $feed->query('//item') ) {
        my $node = $item->query('title');
        my $line = $node->text_content;
        push( @txt_data, $line );
    }

    open( my $txt_fh, '>' . <rss.ticker.txt_data_path> )
        or die "can't write to TXT data file [$!]";
    print {$txt_fh} join( ' .:. ', @txt_data );
    close($txt_fh);

    <[base.log]>->(
        2, ": : wrote txt data to '" . <rss.ticker.txt_data_path> . "'"
    );

    <[base.proto.nailara.command.send.local]>->(
        {   'command'   => 'core.' . <rss.ticker.update_command>,
            'call_args' => { 'args' => <rss.ticker.txt_data_path> },
            'reply'     => {
                'handler' => 'dev.null',
                'params'  => {}
            }
        }
    );

    <rss.browser>->commit;

} elsif ( $response->code == 304 ) {
    <[base.log]>->( 2, ": no new content since last request" );
} else {
    <[base.log]>->(
        0, "failed to access RSS url '$rss_url' (",
        $response->status_line, ")"
    );
}
