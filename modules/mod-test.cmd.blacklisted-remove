## [:< ##

# name  = mod-test.cmd.blacklisted-remove
# param = <mod_name>
# descr = remove perl module from the reload blacklist

my $module_name = $call->{'args'};

return { 'mode' => qw| false |, 'data' => 'expected module name parameter' }
    if not defined $module_name;

$module_name = <[base.perlmod.convert.name_to_pm]>->($module_name);

return { 'mode' => qw| false |, 'data' => 'no such entry present' }
    if not <[mod-test.callback.reload-test.is_registered]>->(
    qw| blacklisted |, $module_name
    );

##  from blacklist on disk  ##
<[mod-test.callback.reload-test.remove-link]>->(
    qw| blacklisted |, $module_name
);

<[mod-test.mem_blacklist.remove_mod]>->($module_name);    ##  from memory  ##

return { 'mode' => qw| true |, 'data' => 'module removed from list' }

#,,,,,..,,,,,,...,...,..,,,,.,.,,,,,,,..,,.,,,..,,...,...,...,.,,,...,..,,,,,,
#A4VHZDQSZL4TMEWBL34WPXZT5RGQGTRLOYVAC6R5WVVHD5SFF2SWGET7PHPS4QXHTRLA6RJW32222
#\\\|6QN67R5JQY54KZEOAW53PDBHBLJ2QJONGHND7LNMCCPZSWCXXC6 \ / AMOS7 \ YOURUM ::
#\[7]4EE4QZZJJ32CBNYO2MSPRRLR57OLYHXZ64L4ICUSYNOR6ZSI2UDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
