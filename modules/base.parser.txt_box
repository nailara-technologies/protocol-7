# >:]

# name  = base.parser.txt_box
# descr = render an ascii frame around the supplied text and return the result

my @txt_data = split( /\n/, shift );
my $title_str = shift || '';    # <- optional title string as second parameter
my $max_len = 0;

$max_len = length($title_str) + 2 if length($title_str);

map { $max_len = length($_) if length($_) > $max_len } @txt_data;
my $len_2     = $max_len + 6;
my $title_bar = '   ,' . '.' x $len_2 . ',';

if ( length($title_str) ) {
    substr(
        $title_bar,
        -7 - length($title_str),
        length($title_str) + 4,
        "[ $title_str ]"
    );
}

return join( "\n",
    '',
    $title_bar,
    '   :' . ' ' x $len_2 . ':',
    ( map { sprintf '   :   %-' . $max_len . "s   :", $_ } sort @txt_data ),
    '   :' . ' ' x $len_2 . ':',
    '   :' . '.' x $len_2 . ":\n",
    '' );
