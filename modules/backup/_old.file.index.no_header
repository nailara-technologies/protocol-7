# >:]

# name       = file.index.header

my $path = $data{'file'}{'dir'};

my $filename = $_[0];

my $count_files = 0;

###
my $file_id = $code{'base.gen_id'}->(
    "$data{'file'}{'index'}", $data{'file'}{'storage'}{'maxfiles'} || 23542
);

###

# if ( not defined $data{'file'}{'index'} ) { $data{'file'}{'index'} = '' }

# my $file_id = $code{'base.list.element.add'}->( {
#      'key_ref' => \$data{'file'}{'index'},
#      'val_ref' => \{

###
# }

#  }
# );

my $header_data = '';
$filename = "$path/$filename";
$filename =~ s{//}{/}g;

if ( -f $filename ) {
    open( my $file_fh, '<', $filename )
        or $code{'base.log'}->( 0, "index.no_header: '$filename' :. $!" );
    $data{'file'}{'index'}{$file_id}{'system'}{'filename'}     = $filename;
    $data{'file'}{'index'}{$file_id}{'system'}{'last_scanned'} = [base.time:5];
}
else {
    $code{'base.log'}->( 0,
        "index.no_header: file '$filename' does not exist" );
    return 0;
}

if ($format_error) {
    if ( %{ $data{'file'}{'index'}{$file_id} } ) {
        undef %{ $data{'file'}{'index'}{$file_id} };
        delete $data{'file'}{'index'}{$file_id};
    }
    $code{'base.log'}->(
        0,
        "index.header: invalid file format in "
            . "'$filename' err_code: $format_error"
    );
    return -1;
}
else {
    my $md5 = Digest::MD5->new();
    my $rc = open( my $file_fh, '<' . $filename );
    if ( !$rc ) {
        $code{'base.log'}->( 0,
            "index.header: file '$filename' does not exist" );
        return 0;
    }
    $md5->addfile($file_fh);
    my $hash_str_header  = sha1_hex($header_data);
    my $hash_str_payload = $md5->hexdigest;
    my $internal_id      = "$hash_str_payload-$hash_str_header";
    close($file_fh);

    $data{'file'}{'index'}{$file_id}{'data'}{'header'}{'hash'}{'sha1'}
        = $hash_str_header;
    $data{'file'}{'index'}{$file_id}{'data'}{'payload'}{'hash'}{'md5'}
        = $hash_str_payload;

    # reference network file id to internal file id
    $data{'file'}{'id'}{$internal_id} = $file_id;
}

return 1;
