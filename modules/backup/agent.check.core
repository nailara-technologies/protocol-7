# >:]

# name       = agent.check.core

# comment    = broken / obsolete

my $agent_time  = undef;
my $core_handle = undef;
if ( $data{'agent'}{'core'}{'agent_timeout'} == 0 ) {
    $data{'agent'}{'core'}{'agent_timeout'} = 23;
}

$data{'agent'}{'check'}{'connect_pause'} = 1;    ###

my @cdids    = keys( %{ $data{'user'}{'core'}{'session'} } );
my $id_count = scalar @ids;

while ( !$id_count ) {

    <[base.log]>->( 1, 'no core present' );
    if ( !$agent_time ) {
        $agent_time = <[base.time]>->(3);
        <[agent.run]>->('core');
    } elsif ( <[base.time]>->(3) - $agent_time
        > $data{'agent'}{'core'}{'agent_timeout'} ) {
        <[base.log]>->( 0, 'can not spawn core: timed out.' );
    } else {
        select undef, undef, undef, $data{'agent'}{'check'}{'connect_pause'};
        if ($core_handle = <[tcp.client]>->(
                $data{'net'}{'local'}{'addr'},
                $data{'net'}{'local'}{'port'}
            )
            ) {
            if ( $data{'system'}{'agent'}{'name'} eq '' ) {
                <[base.log]>->( 0, 'agent_name not set!' );
            }
            if ( $data{'auth'}{'core'}{'pass'} eq '' ) {
                <[base.log]>->( 0, 'auth.core.pass not set!' );
            }

            if (<[net.authme]>->(
                    $core_handle,
                    $data{'system'}{'agent'}{'name'},
                    $data{'auth'}{'core'}{'pass'}
                )
                ) {
                $data{'core'}{'handle'} = $core_handle;
                if ( not defined $sel_base ) {
                    use IO::Select;
                    $sel_base = new IO::Select();
                }

                #                my $id = <[net.cmd_add_client]>
                #                  ( 'core', $core_handle );

                @ids      = keys( %{ $data{'user'}{'core'}{'session'} } );
                $id_count = scalar @ids;

                # return $core_handle;
            }
        }
    }
}
