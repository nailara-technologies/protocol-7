## [:< ##

# name = web-browser.process_crash_mitigation

my $flag_map = {
    ''                    => 'adblock',
    'adblock'             => 'nojs_scroll',
    'nojs_scroll'         => 'adblock,nojs_scroll',
    'adblock,nojs_scroll' => 'nojs',
    'nojs'                => 'adblock,nojs',
    'adblock,nojs'        => 'blkext',
    'blkext'              => 'blkext,nojs_scroll',
    'blkext,nojs_scroll'  => 'blkext,nojs'
};

my $subname_b32
    = ( defined <system.zenka.subname> and length <system.zenka.subname> )
    ? sprintf qw| .%s |, encode_b32r(<system.zenka.subname>)
    : '';
my $file_name = sprintf qw| /var/run/.7/web-browser.crash_pid%s |,
    $subname_b32;
return if not -f $file_name;

chomp( my $crash_pid = <[file.slurp]>->($file_name)->$* );
unlink($file_name) or warn("$file_name : \l$OS_ERROR");
return if $crash_pid !~ m|^\d+$|;

$file_name = "/var/tmp/.protocol-7.web-browser.$crash_pid";
return if !-f $file_name;

my $file_content = <[file.slurp]>->($file_name)->$*;
unlink($file_name)
    or <[base.s_warn]>->( '%s : %s', $file_name, <[base.str.os_err]> );

my $crash_url = ${^CAPTURE}[0]
    if $file_content =~ s|^current_url : ([^\n]+)\n||;

my $url_flags = ${^CAPTURE}[0]
    if $file_content =~ s|^url_flags   : ([^\n]*)\n||;

return
       if length($file_content)
    or not defined $crash_url
    or not defined $url_flags;

$url_flags =~ s| ||g;

$url_flags = ''
    if length($url_flags)
    and not exists $flag_map->{$url_flags}
    and $url_flags ne 'blkext,nojs';  # weird \ unrecognized flag combination!

<[base.logs]>->(
    0, "processing crash mitigation for previous browser instance [ PID %d ]",
    $crash_pid
);

if ( not exists $flag_map->{$url_flags} ) {
    <[base.log]>->(
        0,
        ": maximum mitigation level reached! unable to prevent segfault `:|"
    );
    return;
}

my $next_flags = $flag_map->{$url_flags};

<[base.logs]>->(
    1,
    ": setting flag%s '%s' for '%s'.,",
    <[base.cnt_s]>->( index( $next_flags, ',', 0 ) >= 0 ),
    $next_flags, $crash_url
);

<[base.protocol-7.command.send.local]>->(
    {   'command'   => qw| cube.content.set_flags |,
        'call_args' => { 'args' => join( ' ', $next_flags, $crash_url ) }
    }
);

#,,..,,,,,..,,,..,,,,,..,,,,.,.,.,..,,..,,...,..,,...,...,...,,,,,,.,,...,,..,
#P2GFEOW2JGTWQI3UTUTNVXCEQXGLGBW4K2ZJQEYLMLUAE6RW6WQE432YZ2564U3ZJYHWIMO7BRUH6
#\\\|HSTW2NW3V4YDQINZ7RMR3WUL77355YF35KMIJG3EMJUSYLIBBAD \ / AMOS7 \ YOURUM ::
#\[7]XGQLCXVX5YI6LGD5SXOXZFU2CRZ2P7I2S47YCLBD3LORET6YISDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
