# >:]

# name  = jobqueue.add_job
# descr = inserts a new job into the jobqueue

die "no parameter supplied" if !@_ or not defined $_[0];

my $max_jobs = <jobqueue.max_jobs> || 42523;
my $job_params = {};
if (ref($_[0]) eq 'HASH') { $job_params = shift }
elsif (exists $code{$_[0]}) {
  $job_params = {
    'name' => $_[0],
    'job_callback' => shift,
    'callback_params' => @_
  };
} else {  die "add_job: callback '$_[0]' does not exist" }

my $job_id = [base.gen_id:<jobqueue.joblist.by_id>,$max_jobs];

# XXX: tune defaults later
my $job_data = {
  'name' => $job_params->{'name'} || $job_params->{'job_callback'},
  'priority' => $job_params->{'priority'} || 0,
  'status' => 'queued',
  'tstamp' => {
    'queued' => htime(),
    'running' => undef,
    'paused' => undef,
    'completed' => undef
  },
  'repeat' => $job_params->{'repeat'} || 'on_failure',
  'max_repeat' => undef,
  'repeat_delay' => $job_params->{'repeat_delay'} || 5,
  'repeat_count' => 0,
  'job_callback' => $job_params->{'job_callback'},
  'callback_params' => $job_params->{'callback_params'}
};

$data{'jobqueue'}{'joblist'}{'by_id'}{$job_id} = $job_data;

my $joblist = <jobqueue.joblist>;
push (@{$joblist->{'queued'}{'by_priority'}{$job_data->{'priority'}}},$job_id);
push (@{$joblist->{'queued'}{'by_timestamp'}}, $job_id);

$joblist->{'count'}->{'queued'}++;
