## >:] ##

# name = start-anim.open_window

$ENV{'DISPLAY'} = <x11.display>;

my $coords        = <x11.coordinates>;
my $window_width  = $coords->{'right'} - $coords->{'left'};
my $window_height = $coords->{'bottom'} - $coords->{'top'};

Gtk3->init;

<start-anim.window> = my $window = Gtk3::Window->new('toplevel');
$window->signal_connect( delete_event => sub { Gtk3->main_quit } );

<start-anim.composited> = $window->is_composited ? 1 : 0;

my $screen = $window->get_screen();

$window->set_position('center');
$window->set_border_width(0);
$window->set_decorated(0);
$window->set_resizable(0);
$window->set_keep_above(1);

$window->set_title(
    <start-anim.window_title> = sprintf( '%s[%s]',
        <system.zenka.name>, <system.zenka.subname> // $PID )
);

$window->set_default_size( 1, 1 );

<start-anim.init_mode> = 1;
( <start-anim.width>, <start-anim.height> )
    = ( $window_width, $window_height );

<start-anim.image_path> =~ s|2K.gif$|4K.gif| if $screen->get_width() >= 3840;

if (<start-anim.composited>) {
    <start-anim.comp_at_startup> = 1;
    $window->set_visual( $screen->get_rgba_visual() );
    $window->set_opacity( 1 + int( <start-anim.do_fade_in> > 0 ) );
} else {
    $window->set_visual( $screen->get_system_visual() );
}

my $css_prov = Gtk3::CssProvider->new();
my $bg_col   = <start-anim.bg-color>;
$css_prov->load_from_data("* { background-color: $bg_col }");
Gtk3::StyleContext::add_provider_for_screen( $screen, $css_prov, -1 );

my $pixbuf
    = Gtk3::Gdk::PixbufAnimation->new_from_file(<start-anim.image_path>);
my $img_anim = Gtk3::Image->new_from_animation($pixbuf);

my $img_width  = $pixbuf->get_width;
my $img_height = $pixbuf->get_height;

<start-anim.draw_signal> = <start-anim.window>
    ->signal_connect( draw => $code{'start-anim.handler.draw'} );

<start-anim.image> = $img_anim;

my $tile_groups = Gtk3::Layout->new();

my $pos_x = -1 * sprintf( '%.0f', ( $img_width - $window_width ) / 2 );
my $pos_y = -1 * sprintf( '%.0f', ( $img_height - $window_height ) / 2 );

$tile_groups->put( <start-anim.image>, $pos_x, $pos_y );

$window->add($tile_groups);

$window->show_all;

<[event.add_timer]>->(
    {   'after'   => <start-anim.min_startup_delay>,
        'handler' => 'start-anim.wait_for_window'
    }
);

$SIG{'TERM'} = sub {
    <start-anim.fading_out> //= 0;
    return if <start-anim.fading_out>;
    <start-anim.fade_mode>  = 'out';
    <start-anim.fading_out> = 1;
};

Gtk3->main;

#,,.,,.,.,,,,,.,.,..,,,,.,.,,,.,,,.,.,.,,,,..,..,,...,...,...,,..,,.,,,..,,..,
#AJSTYQFJBMIY2SWEN3VBFCPYE6C3H2HPU726PBXQ7MIM3RZECKES5EKPM4LNQU6XLJY65V6FGORPE
#\\\|DKQN52GCTS2XPANRXBAHN4U3L24KA5PGJU2MN6DHKDGK3OTV4VO \ / AMOS7 \ YOURUM ::
#\[7]L6OPAX2ZAYTPCTQ7DBKFMNUVGVP2R5MK35CGOMCU4IGYJAZXPYDA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
