# >:]

# name = agent.run

my $bin_name = $data{'system'}{'start'}{'exec_name'};

my $agent;
my $agent_id;
my $agent_name;

if ( $_[0] =~ /^\d+$/ ) {
    $agent_id = $_[0];
    $agent = $data{'agent'}{'id'}{$agent_id};
    $agent_name = $$agent{'name'};
}
else {
    $agent_name = $_[0];
    $agent_id = &{ $code{'agent.add_agent'} }($agent_name);
    
}

my $verbose_switch = undef;
my $daemon_switch  = undef;

my $session_key_length = $data{'auth'}{'agent'}{'session_key_length'} || 255;

$SIG{CHLD} = IGNORE;

if ( my $config_array = &{ $code{'agent.get_agent_conf'} }($agent_name) ) {

    #    if ( -S $data{'core'}{'handle'} ) {
    my $session_key =
      &{ $code{'base.hash'} }(
        &{ $code{'crypt.random.bytes'} }($session_key_length) );

    print "SPAWNING AGENT ID: $agent_id\n";

    &{ $code{'base.proto.nailara.command.send.local'} }(
        {
            'command' => "core.add_session_key $agent_name $session_key",

            'reply' => {
                'handler' => 'agent.answer.agents',
                'handler' => 'dev.null',
                'params'  =>
                  { 'agent_name' => $agent_name, 'agent_id' => $agent_id }
            }
        }
    );

    unshift( @{$config_array}, "agent.init.session_key = '$session_key'\n" );

    #    }

#   if (fork) { &{ $code{'base.log'} } ( 1, "launched $agent_name agent"); return 1; }
#   else {

    #       close(STDIN);
    #       open( STDIN, '</dev/null' );

    #      if ( !$data{'system'}{'verbosity'} ) {

    #         close(STDOUT);
    #         close(STDERR);
    #         open( STDOUT, '>/dev/null' );
    #         open( STDERR, '>/dev/null' );

    #     }
    #     else {
    #
    $verbose_switch = '-' . 'v' x $data{'system'}{'verbosity'};

    #       }

    ###

    my ( $wh, $rh, $eh );

    #    $data{'agent'}{$agent_id}{'pid'} =
    #      open2( $wh, $rh, $bin_name, '-nb', '-N' . $agent_name,
    #        $verbose_switch );

    $pid = open( $wh, "|$bin_name -nb -N$agent_name $verbose_switch -d" );

    print "PID2 : $pid\n";

#       print "PID: " . $data{'agent'}{$agent_id}{'pid'} . " - did: $agent_id\n";

    print $wh join ( "\n", @{$config_array} );

    close($wh);

    #	my $buffer;
    #	sysread($rh,$buffer,23542);

    #    else{print "FALSE\n";}

    #    my $buffer;
    #    while ( sysread( $rh, $buffer, 255 ) ) {
    #        print $buffer;
    #        if ( $buffer eq '' ) { last }
    #    }

    #            "$verbose_switch -nb -d -N$agent_name" );

    #        $data{'agent'}{$agent_id}{'handle'} = {
    #            'read'  => $rh,
    #            'write' => $wh,
    #            'error' => $eh
    #        };

    # exit();
    # 	print <$rh>;
    close( $rh, $eh );

    #    print "closed\n";

    #        if ( open(
    #                my $agent_handle,
    #                "| $bin_name $verbose_switch -nb -d -N$agent_name"
    #            ) )
    #        {
    #            &{ $code{'base.log'} } ( 1, "launched $agent_name agent");
    #            print $agent_handle @{$config_array};

    #            close($agent_handle);

  #        }
  #        else {
  #            &{ $code{'base.log'} } ( 0, "agenter: can not launch agent: $!");
  #        }
  #        $0 = 'zombie';
  #        exit();
  # }


    &{ $code{'base.proto.nailara.command.send.local'} }(
	{
	    'command' => $agent_name.".pid",
	      
	    'reply' => {
		'handler' => 'agent.set.pid',
		'params'  =>
		{ 'agent_name' => $agent_name, 'agent_id' => $agent_id }
	    }
	}
    );
    
    

}
else {
    &{ $code{'base.log'} }( 0, 'no such agent found' );
}

return $pid;
