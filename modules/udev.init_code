## [:< ##

# name = udev.init_code

if (<system.zenka.initialized>) {    ## reload already loaded rule-sets ##
    <[udev.reload_rules]>;
    return 0;
}

## :: else :: initialize udev zenka ##

<udev.rules> //= {};

<udev.path.udevadm>  = <[base.required_bin_path]>->('udevadm');
<udev.path.unbuffer> = <[base.required_bin_path]>->('unbuffer');

die "'udevadm' command not found.\n" if not defined <udev.path.udevadm>;
die "'unbuffer' command not found [ install 'expect' package ]\n"
    if not defined <udev.path.unbuffer>;

if ( defined <system.zenka.subname>
    and <system.zenka.subname> eq qw| devmod | ) {
    <udev.devmod-stdout.show-events> = TRUE;
    <[base.log]>->(
        0, "event logging to STDOUT enabled [ 'devmod' subname ]"
    );
}

<[event.add_signal]>->(
    {   'signal'  => qw| CHLD |,
        'handler' => qw| base.handler.sig_chld.shutdown |
    }
);

0;

#,,.,,...,..,,.,,,.,,,,..,.,,,,..,,.,,..,,..,,..,,...,...,...,,,,,,..,..,,,..,
#3IXB362FHZNDGWVOH63IM2JEUZZ3DERLJC4MGB7M4GG4BROB2TREV4AJATCA6MJCCM244YURGGP5A
#\\\|ZQCGGAU2DS6W7IZWXHAKJYYO4R6ZRFIYHRSSCDKXGJVXJHDISZB \ / AMOS7 \ YOURUM ::
#\[7]LDTJWEXTGW6AHOYJCLOEZZIGBD6YAEGVJO2NQIOY37MJIPZAXMDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
