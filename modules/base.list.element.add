## [:< ##

# name  = base.list.element.add
# args  = { key_ref val_ref want_harmony }

if ( ref( $_[0] ) ne qw| HASH | ) {
    <[base.log]>->(
        0, 'base.list.element.add: submitted argument is no hash'
    );
    return undef;
}

my $key_ref      = ${ $_[0] }{'key_ref'};
my $val_ref      = ${ $_[0] }{'val_ref'};
my $want_harmony = ${ $_[0] }{'want_harmony'};

if ( not defined $key_ref or ref($$key_ref) ne qw| HASH | ) {
    <[base.log]>->(
        0,
        'base.list.element.add: key_ref is no reference to a hash reference'
    );
    return undef;
} elsif ( not defined $val_ref or ref($$val_ref) ne qw| HASH | ) {
    <[base.log]>->(
        0,
        'base.list.element.add: val_ref is no reference to a hash reference'
    );
    return undef;
} elsif ( not defined $data{'base'}{'element'}{$key_ref}
    or not defined $data{'base'}{'element'}{$key_ref}{'max_count'}
    or $data{'base'}{'element'}{$key_ref}{'max_count'} < 1 ) {
    <[base.log]>->( 0, 'base.list.element.add: max_count not set or zero' );
    return undef;
}

my $id = <[base.gen_id]>->(
    $$key_ref, $data{'base'}{'element'}{$key_ref}{'max_count'},
    undef,     $want_harmony
);

${$$key_ref}{$id} = $$val_ref;

$data{'base'}{'element'}{$key_ref}{'count'} = scalar keys %{$$key_ref};

return $id;

#,,,.,,..,.,,,,..,.,,,,,.,.,.,,.,,...,.,.,,.,,..,,...,...,...,..,,,..,,,.,.,,,
#5UVSY66B4OKSUS62L7L4EWJ7QSXWUGVO2NWXVECKRQD54CSJ6L4HPIYP7AMA3K2B6PWXGZDZ4SVFS
#\\\|46YW4FXTLXU5ZDOJTE2OHORHUH7IKUWA3RFHVLCUN4YH5ANDM3W \ / AMOS7 \ YOURUM ::
#\[7]E7FSC6PGUPJKYYNOBETLC53UT6C7MKJOWGWDZRRK7XPZAARXUCDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
