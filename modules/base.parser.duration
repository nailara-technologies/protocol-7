## [:< ##

# name  = base.parser.duration
# descr = return duration since given unix time [ days hours mins + seconds ]

my @result;
my $start_time = shift;
my $precision  = shift;    ## optional [ overrides input param precision ] ##

return qw|n/a| if not defined $start_time or $start_time !~ m|^\d+(\.\d+)?$|;
$precision //= defined $LAST_PAREN_MATCH ? length $LAST_PAREN_MATCH : 2;
my $secs = Time::Seconds->new( sprintf qw| %.*f |,
    $precision, <[base.time]>->($precision) - $start_time );

my %result = (
    qw| days    | => 0,
    qw| years   | => 0,
    qw| hours   | => 0,
    qw| seconds | => 0,
    qw| minutes | => 0,
);

if ( $secs >= ONE_YEAR() ) {
    $result{'years'} = sprintf qw| %d |, $secs->years;
    my $d_rest = $secs->days - $secs->years * 365;    ## no 'leap' years ##
    $secs -= $d_rest * ONE_YEAR();
}
if ( $secs >= ONE_DAY() ) {
    $result{'days'} = sprintf qw| %d |, $secs->days;
    $secs -= $result{'days'} * ONE_DAY();
}
if ( $secs >= ONE_HOUR() ) {
    $result{'hours'} = sprintf qw| %d |, $secs->hours;
    $secs -= $result{'hours'} * ONE_HOUR();
}
if ( $secs >= ONE_MINUTE() ) {
    $result{'minutes'} = sprintf qw| %d |, $secs->minutes;
    $secs -= $result{'minutes'} * ONE_MINUTE();
}
$result{'seconds'} = sprintf qw| %.*f |, $precision, $secs->seconds if $secs;

if ( $result{'years'} and not $result{'days'} ) {
    push @result, sprintf '%d year%s', $result{'years'},
        <[base.cnt_s]>->( $result{'years'} );
} elsif ( $result{'years'} ) {
    push @result, sprintf( qw| %dy |, $result{'years'} );
}

if ( $result{'days'} and $result{'years'} and defined $result{'yday'} ) {
    push @result, sprintf qw| %dd |, $result{'yday'};

} elsif ( $result{'days'} ) {
    push @result, sprintf '%d day%s', $result{'days'},
        <[base.cnt_s]>->( $result{'days'} );
}

if ( $result{'hours'} and $result{'minutes'} == $result{'seconds'} == 0 ) {
    push @result, sprintf '%d hour%s', $result{'hours'},
        <[base.cnt_s]>->( $result{'hours'} );

} elsif ( $result{'hours'} ) {
    push @result, sprintf qw| %02dh |, $result{'hours'};
}

if ( $result{'minutes'} and $result{'seconds'} == 0 ) {
    push @result, sprintf '%d min', $result{'minutes'};

} elsif ( $result{'minutes'} ) {
    if ( $result{'hours'} ) {
        push @result, sprintf qw| %02d'%02d" |, $result{'minutes'},
            $result{'seconds'};
    } else {
        push @result, sprintf qw| %d'%02d" |, $result{'minutes'},
            $result{'seconds'};
    }
}

push @result, sprintf qw| %ss |, $result{seconds}
    if $result{'seconds'} and not $result{'minutes'} or not @result;

my $result_str = join ' ', @result;
$result_str =~ s| days? (\d+)h |d $1 | if length $result_str >= 10;
$result_str =~ s|(\d+d)(\d+ hours)|$1 $2 |;

return $result_str;

#,,,.,,.,,.,,,.,,,.,.,..,,,.,,,..,,.,,,.,,,.,,..,,...,...,..,,,,,,.,,,.,,,...,
#SP7ZFKNURAWPG43PN3GWONPUUUNBOSSDE3RYICYEE2222YNU3S3ALO7FJB4S3VJMIWNYEDJZH2L2G
#\\\|XBJFUF3JWLBDILCW4LBQXMOPYOSJT4PTIZA6E7WTTBFNJHUIQIJ \ / AMOS7 \ YOURUM ::
#\[7]ESB33WHSWJQ6RGHGVRHSRBVORLPZ6V3LSNOHIGDHQ3W67H7ROKAY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
