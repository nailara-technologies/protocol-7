## [:< ##

# name  = crypt.C25519.unload_key

my $name          = shift // '';       ## C25519 key name ##
my $silent_unload = shift // FALSE;    ##  optional  ##

if ( not length $name ) {
    warn 'expecting key name param <{C1}>';
    return undef;
}

$keys{'C25519'} //= {};
<crypt.C25519.loaded-keys> //= {};

return FALSE                           ##  key is already gone  ##
    if not exists $keys{'C25519'}->{$name}
    and not exists <crypt.C25519.loaded-keys>->{$name};

return <[crypt.C25519.del_keys_hash_entry]>->( $name, $silent_unload );

#,,.,,..,,,.,,...,..,,.,.,,..,,,,,,,.,..,,,,,,..,,...,...,.,,,..,,,,,,.,.,..,,
#MADIOL47RPU6O44VAVVLN4RMVOOAH7WXLNTL6ZCXPXEO3ZJBBHU7L4XC6BAV5NKH7ULANUILO3MEU
#\\\|JN6TTQ3MIQ3BNKPHRNLUGSL46LFQ4QYRNXZBKPCXSF4VDQXUDMG \ / AMOS7 \ YOURUM ::
#\[7]3JVSATMMIIWHRON523KHMFLXR5OC53DIS3WQKAJGLLYTQAM7W2DI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
