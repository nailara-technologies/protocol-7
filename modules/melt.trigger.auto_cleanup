## [:< ##

# name = melt.trigger.auto_cleanup

my $cleanup_path  = <melt.output_path>;
my $files_removed = 0;

my $ntime_now  = <[base.ntime]>;
my $ntics_day  = 362880000; # a day in network time [ ntics = 4200th seconds ]
my $keep_ntics = <melt.keep_last.days> * $ntics_day;
my $keep_bytes = <melt.keep_last.mbytes> * 1024**2;

foreach my $file_path ( reverse @{ <[file.all_files]>->($cleanup_path) } ) {
    next unless -w $file_path and $file_path =~ /(\d+)\.png$/;
    $keep_bytes -= File::stat::stat($file_path)->size;
    my $ntime_age = $ntime_now - $1;
    if ( $keep_bytes <= 0 or $ntime_age > $keep_ntics ) {
        if ( unlink($file_path) ) { $files_removed++ }
        else { warn "[$file_path] unable to remove [ \l$OS_ERROR ]" }
    }
}

if ( !$files_removed ) {
    my $log_level = [caller]->[1] eq 'melt.init_code' ? 1 : 2;
    <[base.log]>->( $log_level, ": auto_cleanup : nothing done." );
} else {
    <[base.log]>->( 1, ": auto_cleanup : files removed : $files_removed" );
}

#,,,.,,..,,,.,.,,,,,.,,..,...,,,,,,,.,...,...,..,,...,...,,.,,,.,,..,,,..,,.,,
#G5X5AYKVVBADHR3YC3HZ4FMQRLTPB3EVTAZOZP6ZTCIIZZLRV6JERAKOEV253HQPMUVRVP7ZGWMFO
#\\\|NQC2E2BH4QOPGMUUEGXUMY5NDZJUT44L36ZQ35ZEQ4S7BLQW2NW \ / AMOS7 \ YOURUM ::
#\[7]DCCV37C7ND7FMAJPR2KCYD7KXZ3BNFQBLADEHCUVHLJVCEQZWYCY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
