## >:] ##

# name = crypt.C25519.verify_sign

my $msg_ref             = shift;
my $signature_data_sref = shift;
my $key_name_param      = shift;    ##  optional  ##

if ( ref $msg_ref ne qw| SCALAR | ) {
    warn 'expected scalar ref to message-data <{C1}>';
    return undef;
} elsif ( ref $signature_data_sref ne qw| SCALAR | ) {
    warn 'expected scalar ref to signature str <{C1}>';
    return undef;
}

my $key_vars_ref = <[crypt.C25519.key_vars]>->($key_name_param);

my $key_name = $key_vars_ref->{'key_name'};

<[base.s_warn]>->(
    "found no public key named '%s' [ cannot verify sig ]", $key_name
    )
    and return undef
    if not exists $keys{'C25519'}{$key_name}
    or ref $keys{'C25519'}{$key_name} ne qw| HASH |
    or not defined $keys{'C25519'}{$key_name}{'public'};

return Crypt::Ed25519::verify(
    $msg_ref->$*,
    $keys{'C25519'}{$key_name}{'public'},
    decode_b32r( $signature_data_sref->$* )
);

#,,,,,.,.,...,..,,,..,,,,,..,,,..,...,,..,,..,..,,...,...,...,.,,,,,,,,.,,,.,,
#W7NCDEHH7FA6CVOEIZZZY47YLVNAPLEHBYPWNS7OAWF2YU6FEQJS44ENZST4FUSD7U4JRSD4BHIF6
#\\\|BKZQRW2ZTW4FN5BVGIUWDYICLUCPT4FQORUHJ24WRQHTZ555G4F \ / AMOS7 \ YOURUM ::
#\[7]CXFXEANVIYPEKSEFQ57UCQQQIVQCSFJK7DTXYMJX64R2DUWNG4AQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
