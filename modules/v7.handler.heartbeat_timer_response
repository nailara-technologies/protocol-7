## >:] ##

# name = v7.handler.heartbeat_timer_response

my $response    = shift;
my $instance_id = $response->{'params'}->{'instance_id'};
if ( not exists <v7.zenka.instance>->{$instance_id} ) {
    <[base.log]>
        ->( 1, "instance $instance_id gone, skipping response timer" );
    return;
}
my $instance        = <v7.zenka.instance>->{$instance_id};
my $is_cube_zenka   = $instance->{'is-cube'};
my $zenka_name      = $instance->{'zenka_name'};
my $fail_count      = $instance->{'heartbeat'}->{'errors'}++;
my $heartbeat_retry = $fail_count ? 0 : 1;                      # retry once

$instance->{'timer'}->{'heartbeat-timeout'}->cancel
    if defined $instance->{'timer'}->{'heartbeat-timeout'}
    and !$instance->{'timer'}->{'heartbeat-timeout'}->is_cancelled;

if (    $response->{'cmd'} eq qw| TRUE |
    and $response->{'call_args'}->{'args'} eq 'beating' ) {    # success again
    delete $instance->{'heartbeat'}->{'errors'};
    <[base.log]>->(
        2,
        "instance $instance_id [$zenka_name] heartbeat response ( success )"
    ) if !<devmod.skip_v7_heartbeat>;

} elsif ( !$heartbeat_retry ) {

    return if $instance->{'status'} eq 'error';

    <[base.log]>->(
        0, "instance $instance_id [$zenka_name] heartbeat response ( error )"
    );
    delete <callback.session.closing_last>
        if $is_cube_zenka;    # for safe restart

    <[v7.stop_heartbeat_timer]>->($instance_id);
    $instance->{'heartbeat'}->{'errors'} = 0;    # <-- resetting error counter
    <[zenka.change_status]>->( $instance_id, 'error' );

} else {
    <[base.log]>->(
        0,
        "instance $instance_id [$zenka_name]"
            . " heartbeat response ( error ) [..retrying..]"
    );

    # setting shorter heartbeat timeout..,
    $instance->{'timer'}->{'heartbeat-timeout'}->cancel
        if defined $instance->{'timer'}->{'heartbeat-timeout'}
        and $instance->{'timer'}->{'heartbeat-timeout'}->is_active;
    $instance->{'timer'}->{'heartbeat-timeout'} = <[event.add_timer]>->(
        {   'after'   => $instance->{'heartbeat'}->{'retry_timeout'} // 2,
            'handler' => qw| v7.handler.heartbeat_response_timeout |,
            'data'    => $instance_id
        }
    );
}

#,,,.,,,.,,,,,.,,,.,.,.,,,..,,.,.,,,.,..,,,..,..,,...,...,...,...,...,,,,,.,.,
#ICFESRAS3ITWTU3FEQ6RMATMEHEW4FEW63MGAAOFOCM6UMHQHFY3VEZI2W7MNNC3LTY7YVYXS7I24
#\\\|AS6XB34XNUVQIETBRIP5EGTVBIDSDRFHXLVHW7J4XCJLP3WXIN7 \ / AMOS7 \ YOURUM ::
#\[7]YHK6ATXJGK2CMW2N5MHUVDZT6HOHQE64TV36CZQEDFBCIGUKIABI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
