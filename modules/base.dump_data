# >:]

# name = base.dump_data

my $arg_3 = $_[3];

if ( defined $_[3] and defined $_[0] ) {
    $_[5]  = $_[2];
    $_[6]  = $_[3];
    $arg_3 = \%data;
}
if ( not defined $_[3] ) { $arg_3 = \%data }
if ( not defined $_[5] ) { $_[5]  = '' }
if ( not defined $_[6] ) { $_[6]  = '' }
my $out = '';

foreach my $_key ( sort( keys( %{$arg_3} ) ) ) {
    my $_val = ${$arg_3}{$_key};
    $_val = '' if not defined $_val;
    $_val =~ s/\\/\\\\/g;
    $_val =~ s/\n/\\n/g;
    $_key =~ s/\'/\\'/g;    # actually invalid key
    $_key = "'$_key'" if $_key =~ /\./;
    if ( defined $_[4] and $_[4] ne '' ) { $_key = "$_[4].$_key" }
    my $__key = $_key || '';
    if ( $_[5] ne '' ) { $__key =~ s/$_[5]/$_[6]/ge }

    if ( ref($_val) ne 'HASH' ) {

        if (   not defined $_[2]
            or $_[2] eq ''
            or $_key =~ /^\^/ and $_key =~ /^\Q^$_[2]/
            or $_key =~ /\$$/ and $_key =~ /\Q$_[2]\$$/
            or $_key =~ /$_[2]/ ) {
            if ( ref($_val) eq 'ARRAY' ) {

                if ( tied @$_val ) {
                    $out .= "$_key = TIED_ARRAY( " . tied(@$_val) . " )\n";
                    next;
                }

                my @array = @{$_val};
                my $count = scalar @array;
                if ( $count > 42 ) {
                    $_val = "$_val [$count]";
                } else {
                    my $max_len = 68;
                    foreach my $element (@array) {
                        $element =~ s/"/\\"/g;
                        my $e_len = length($element);
                        substr(
                            $element,
                            $max_len - 3,
                            3 + $e_len - $max_len, '...'
                        ) if $e_len > $max_len;
                    }
                    my $elements_str = join(
                        ' ',
                        map {
                            $_ = "\"$_\""
                                if $_ =~ /[ '"\{\}]|TIED_/;
                            $_
                        } @array
                    );
                    if ( !$count ) { $_val = '[]' }
                    else { my @val_str = '['; $_val = "[ $elements_str ]" }
                }
            } else {

                if ( tied $_val ) {
                    $out .= "$_key = TIED_SCALAR( " . tied($_val) . " )\n";
                    next;
                }
                $_val =~ s/"/\\"/g;
                $_val = "\"$_val\"" if $_val =~ /[ '"\{\}]|TIED_/;
            }

            $out .= "$__key = $_val\n";
        }
    } else {

        if ( tied %$_val ) {
            $out .= "$_key = TIED_HASH( " . tied(%$_val) . " )\n";
            next;
        } elsif ( !keys(%$_val) and not defined $_[2]
            or !keys(%$_val) and $_key =~ /$_[2]/ ) {
            $out .= "$__key = { }\n";
            next;
        }

        $out .= $code{'base.dump_data'}
            ->( undef, undef, $_[2], $_val, $_key, $_[5], $_[6] );
    }
}
if ( not defined $_[0] and not defined $_[1] ) { return $out }
else { $code{'net.raw_out'}->( $out, $_[1] ) }
