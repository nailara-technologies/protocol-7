## [:< ##

# name = base.s_write
# desc = utf8 safe syswrite replacement [ with optional fh_offset parameter ]
# todo = create custom version to pass buffer by reference + reducing overhead

my $write_fh         = $ARG[0];
my $write_string_ref = $ARG[1];
my $write_len        = $ARG[2];
my $str_offset       = $ARG[3] // 0;
my $fh_offset        = $ARG[4];

if ( not defined $write_fh ) {
    warn 'write_fh param not defined <{C1}>';
    return undef;
} elsif ( not defined $write_string_ref ) {
    warn 'write_string param not defined <{C1}>';
    return undef;
} elsif ( not length ref $write_string_ref ) {
    $write_string_ref = \$ARG[1];    ## scalar reference to argument ##
}

$write_len //= length $write_string_ref->$*;

##   [ replacing syswrite : unicode-safe ]
#
#    syswrite FILEHANDLE,SCALAR,LENGTH,OFFSET
#    syswrite FILEHANDLE,SCALAR,LENGTH
#    syswrite FILEHANDLE,SCALAR
#
#    aio_write $fh, $offset, $length, $data, $dataoffset, $callback->($retval)
##

my $size_written = undef;    ##  until write attempt  ##

if (    $write_len > 0
    and utf8::is_utf8( $write_string_ref->$* )
    and $write_string_ref->$* =~ m|[^\p{ASCII}]| ) {

    my $prev_len = length $write_string_ref->$*;

    utf8::encode( $write_string_ref->$* );
    utf8::downgrade( $write_string_ref->$*, 1 );

    my $delta_len = length( $write_string_ref->$* ) - $prev_len;

    $write_len += $delta_len if $delta_len != 0;    ##  string lengthened  ##
}

IO::AIO::aio_write( $write_fh, $fh_offset, $write_len, $write_string_ref->$*,
    $str_offset, sub { $size_written = $ARG[0] } );

##  blocking until write request has been completed  ##
while ( not defined $size_written ) { IO::AIO::poll() }

return $size_written;    ## [ returns -1 on error ] ##

#,,..,,.,,,.,,,..,...,,.,,.,,,..,,.,,,.,.,,,.,..,,...,...,.,,,,..,,.,,,..,.,,,
#IRT6N3YBQXTPZVP4YX4V7RYLQMOFPVVHUTCUMWMRVEDRL6USQQA43XCH7ZX5TDFTW7U73TULLXKME
#\\\|CGPPZIMOMOFIX37LEUIZ7RFPMDGKY4LAJE5S5OYTBVHZ74MZEGV \ / AMOS7 \ YOURUM ::
#\[7]GAM2YMSAYREEGDQ5ZSUEGZ6UY6SFAZAVYRYE2MHPAS2B3W56TSCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
