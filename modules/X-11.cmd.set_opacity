## [:< ##

# name  = X-11.cmd.set_opacity
# param = <w_id> <opacity>
# descr = set window opacity in percent [0..100]

my ( $window_id, $opacity ) = split( m| +|, $$call{'args'} );

return { 'mode' => qw| false |, 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => qw| false |, 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ m|^\d+$|;
return { 'mode' => qw| false |, 'data' => 'window <opacity> required' }
    if not defined $opacity;
return {
    'mode' => qw| false |,
    'data' => 'invalid window <opacity> [0..100]'
    }
    if $opacity !~ m|^\d+$| or $opacity > 100;

return { 'mode' => qw| false |, 'data' => 'no such window' }
    if not <[X-11.window_id_found]>->($window_id);

<[base.log]>->( 2, "setting window $window_id opacity to $opacity%" );

my $result = <[X-11.set_window_opacity]>->( $window_id, $opacity / 100 );

<[base.log]>->(
    0,
    "error during set_opacity [ $opacity ] for window $window_id [ closed? ]"
) if not defined $result;

return { 'mode' => qw| true |, 'data' => "set opacity to $opacity%" };

#,,.,,...,.,.,,.,,,..,,,.,,.,,,..,,,,,.,,,...,..,,...,...,...,..,,...,.,,,,,,,
#7Q4R25ZZ6A5Q67NEIMCG2WIU7K3OHM7ZVJ5IAKW2NS2NLQRDIJJQMFEJWX4NATICMNPBFMZBCPWAS
#\\\|D7YRVLSWXBUKSVAUVQMYVS7TSDOERHK2T3ZWRLMG2LJ3BYR4Y5K \ / AMOS7 \ YOURUM ::
#\[7]VSCHLW6A3D3NPBWUEPHG42BEI4BUX6QJZGAXKE2IH326Z5PTJECQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
