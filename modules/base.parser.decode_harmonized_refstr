## [:< ##

# name  = base.parser.decode_harmonized_refstr
# desc  = decode perl ref string from harmonized compressed integer format

my $cref_str = shift;

if ( not defined $cref_str
    or $cref_str
    !~ m,^(CODE|REF|HASH|SCALAR|ARRAY|GLOB):[2-9A-Z]{7}:([2-9A-Z]{16})$, ) {
    warn 'expected comp int encoded perl ref str <{C1}>';
    return undef;
}

my $perl_ref_type_str = ${^CAPTURE}[0];
my $B32_encoded_str   = ${^CAPTURE}[1];

my $B32_decoded_num = eval { decode_b32r($B32_encoded_str) };

if ( not defined $B32_decoded_num or length $EVAL_ERROR ) {
    warn 'not a valid BASE32 encoded string [ decoding error ] <{C1}>';
    return undef;
} elsif ( not <[base.comp-int.is_valid]>->($B32_decoded_num) ) {
    warn 'decoded BASE32 value not in compressed integer format <{C1}>';
    return undef;
}

my $decoded_addr = unpack qw| w |, $B32_decoded_num;

return sprintf qw| %s(0x%x) |, $perl_ref_type_str, $decoded_addr;

#,,..,,,,,.,,,,,,,.,.,...,,,,,,,.,.,,,,,,,..,,..,,...,...,..,,,,.,..,,.,,,.,,,
#MYOKKDNAWOMHU66R63RABUSDM5RWFGC55CPI6FIWBG4F725RC7RUQHWUTBFC7GKEHOJ74S6EUOLEU
#\\\|V7MTBCGQZGGQ4FKRJUC3SFT637X7OLV6W3QOAVGIHTCWYDWNX2T \ / AMOS7 \ YOURUM ::
#\[7]ZRJ7GREUCPEBR75GBC46GFI6NSERFMHCOUMJQ2S4IOCQCLCZA2BQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
