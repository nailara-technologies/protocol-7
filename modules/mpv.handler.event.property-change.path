## [:< ##

# name = mpv.handler.event.property-change.path

my $params = shift;

my $path = $params->{'data'};

return delete <mpv.current> if not defined $path;

<mpv.log_played> //= 0;
<mpv.current.path> = $path;

if ( <system.zenka.mode> eq 'universal-child' and $path eq '[PAUSE]' ) {
    <[base.log]>->(
        2, '[PAUSE] keyword encountered, queuing up next file...'
    );
    <mpv.pause_next> = 1;
} elsif ( exists <mpv.file_map.rescaled.source>->{$path} and !-f $path ) {
    my $base_path = <mpv.rescale_path>;
    ( my $path_short = $path ) =~ s|^$base_path/?||;
    <[base.log]>->( 0, "<< ! >> reencoded '$path_short' vanished .," );
    if ( !-d $base_path and !-r "$base_path/.." ) {
        <[base.log]>->(
            0,
            " : reencoded content directory is gone,"
                . " shutting down., [ permissions ]"
        );
        exit(1);
    } else {
        <[base.log]>->( 1, " :. will try to reencode..," );
        delete <mpv.playlist_bmw>;
        <[mpv.cmd.playlist_update]>;
    }
} else {
    <[base.log]>->( 2, "playing '$path'" );

    <[base.buffer.add_line]>->(
        'played', join( ' ', <[base.time]>->(5), 1, $path )
    ) if <mpv.log_played>;

    <[mpv.update_resc_timestamp]>->($path)
        if exists <mpv.file_map.rescaled.source>->{$path};
}

#,,.,,,..,,,,,,..,,..,...,...,,..,,,,,..,,,..,..,,...,...,.,.,.,.,,,,,.,,,,,.,
#V7EBXTHPQK37D2QQV5EYTH4IV7S2BLDXHUNY5WJU5LQSSFHOFW2WO4XHBRRXCNPNHKPGJW6PAHLUY
#\\\|EYK63AZJ76RN6SAW6TBXR6IZXMAZN2KUQHXMIW33JDCU5VZ3T4M \ / AMOS7 \ YOURUM ::
#\[7]FO7I4LZ7Q4FR5DL57YCBTPLBBMPZ3W53JKMH2LFM7HUY7OEY52AQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
