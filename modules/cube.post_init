## [:< ##

# name  = cube.post_init

##  cube and cube-13 zenki [ so far ]  ####
return 0 if not defined <cube.local> and <system.zenka.name> ne qw| cube |;

<cube.local> //= <protocol-7.network.internal>;    ## address \ port set-up ##

if (    not <[base.cfg_bool]>->(<cube.set-up.use_unix_socket>)
    and not <[base.cfg_bool]>->(<cube.set-up.use_ip_socket>) ) {
    my $type
        = <[base.is_defined_recursive]>->(qw| cube.server_sid |)
        ? qw| re-init |
        : qw| start-up |;
    <[base.logs]>->(
        0, 'no sockets are enabled in zenka set-up, %s not possible', $type
    );
    return -1;    ##  init != 0  ##
}

my $sucessful_init           = TRUE;    ## true ##
my $no_ip_socket_permissions = FALSE;

##  shutdown in reinit [ config changed? ]  ##
##
if ( <[base.is_defined_recursive]>->(qw| cube.server_sid.unix |)
    and not <[base.cfg_bool]>->(<cube.set-up.use_unix_socket>) ) {

    my $term_sid = <cube.server_sid.unix>;

    <[base.log]>->(
        0, 'unix socket has been disabled in zenka set-up, closing..,'
    );

    ##  ending server session \ socket shut-down  ##
    $data{'session'}{$term_sid}{'shutdown'} = TRUE;

    unlink(<unix.sock>)
        or <[base.s_warn]>->(
        'cannot unlink unix socket file [%s] : %s',
        <unix.sock>, scalar <base.format_error>->( $OS_ERROR, -1 )
        );
    ## cleaning up ##
    delete <unix.sock>;
    delete $data{'unix'} if not keys $data{'unix'}->%*;
    delete <cube.server_sid.unix>;

} elsif ( <[base.is_defined_recursive]>->(qw| cube.server_sid |)
    and not <[base.is_defined_recursive]>->(qw| cube.server_sid.unix |)
    and <[base.cfg_bool]>->(<cube.set-up.use_unix_socket>) ) {
    <[base.log]>->(
        0, 'unix socket has been enabled in zenka set-up, starting ..,'
    );
}

if ( <[base.is_defined_recursive]>->(qw| cube.server_sid.ip_tcp |)
    and not <[base.cfg_bool]>->(<cube.set-up.use_ip_socket>) ) {

    my $term_sid = <cube.server_sid.ip_tcp>;

    <[base.log]>->(
        0, 'ip\tcp-socket has been disabled in zenka set-up, closing..,'
    );

    ##  ending server session \ socket shut-down  ##
    $data{'session'}{$term_sid}{'shutdown'} = TRUE;

    ## cleaning up ##
    delete <tcp_ip.sock>;
    delete $data{'tcp_ip'} if not keys $data{'tcp_ip'}->%*;
    delete <cube.server_sid.ip_tcp>;

} elsif ( <[base.is_defined_recursive]>->(qw| cube.server_sid |)
    and not <[base.is_defined_recursive]>->(qw| cube.server_sid.ip_tcp |)
    and <[base.cfg_bool]>->(<cube.set-up.use_ip_socket>) ) {

    if ( <cube.local.port> < 1024 and $REAL_USER_ID != 0 ) {
        $sucessful_init           = FALSE;
        $no_ip_socket_permissions = TRUE;
        <[base.logs]>->(
            0, 'ip\tcp socket re-enabled but listen on port %d needs root .,',
            <cube.local.port>
        );
    } else {
        <[base.log]>->(
            0, 'ip\tcp socket has been enabled in zenka set-up, launching ..,'
        );
    }
}
##

<[base.clean_hashref]>->( $data{'cube'} );

##                          ##
## local unix domain socket ##
##                          ##

if (<[base.cfg_bool]>->(<cube.set-up.use_unix_socket>)
    and (  not <[base.is_defined_recursive]>->(qw| unix.sock |)
        or not fileno <unix.sock>
        or not -S <unix.sock> )    ##  re-init ?  ##
) {

    if ( not defined $code{'io.unix.socket.input.open'} ) {
        <[base.log]>->(
            0, 'unix socket is enabled but the io.unix module is not loaded'
        );
        $sucessful_init = FALSE;
        goto SKIP_UNIX_SOCKET;
    }

    <unix.owner> = <system.amos-zenka-user>;
    my $unix_sdir = qw| /var/run/.7/UNIX |;
    <[file.make_path]>->( $unix_sdir, 0775, <unix.owner> )
        or $sucessful_init = FALSE;

    if ( -d $unix_sdir and -w $unix_sdir ) {

        <unix.path> = sprintf qw| %s/%s |, $unix_sdir,
            <[base.calc_unix_path]>->( <cube.local.addr>, <cube.local.port> );

        <unix.sock> = <[base.open]>->(    ## launch socket ##
            qw| unix input |,
            <unix.path>, 0777, <unix.owner>
        );

        if ( defined <unix.sock> and -S <unix.sock> ) {

            ##  bind protocol-7 to socket  ##
            <cube.server_sid.unix> =    ##  used for auto-shutdown  ##
                <[base.protocol.bind]>->( <unix.sock>, qw| protocol-7 | );

            $sucessful_init = FALSE  if not defined <cube.server_sid.unix>;
            delete <cube.server_sid> if not keys <cube.server_sid>->%*;
        } else {
            <[base.log]>->(
                0, 'launching of unix domain socket was not successful'
            );
            delete <unix.sock>;
            delete $data{'unix'} if not keys $data{'tcp_ip'}->%*;
            $sucessful_init = FALSE;
        }
    }
SKIP_UNIX_SOCKET:
}

##               ##
## ip.tcp socket ##
##               ##

if (    not $no_ip_socket_permissions
    and <[base.cfg_bool]>->(<cube.set-up.use_ip_socket>)
    and (  not <[base.is_defined_recursive]>->(qw| tcp_ip.sock |)
        or not fileno <tcp_ip.sock>
        or not -S <tcp_ip.sock> )    ##  re-init ?  ##
) {

    if ( not defined $code{'io.ip.tcp.input.open'} ) {
        <[base.log]>->(
            0, 'ip\tcp socket is enabled but the io.ip module is not loaded'
        );
        $sucessful_init = FALSE;
        goto SKIP_IP_SOCKET;
    }

    <tcp_ip.sock> = <[base.open]>->(
        qw| ip.tcp input |,
        <cube.local.addr>, <cube.local.port>
    );

    if ( defined <tcp_ip.sock> and -S <tcp_ip.sock> ) {

        ##  bind protocol-7 to socket  ##
        <cube.server_sid.ip_tcp> =    ##  used for auto-shutdown  ##
            <[base.protocol.bind]>->( <tcp_ip.sock>, qw| protocol-7 | );

        $sucessful_init = FALSE  if not defined <cube.server_sid.ip_tcp>;
        delete <cube.server_sid> if not keys <cube.server_sid>->%*;

    } else {
        <[base.log]>->( 0, 'launching of ip\tcp socket was not successful' );
        delete <tcp_ip.sock>;
        undef $data{'tcp_ip'} if not keys $data{'tcp_ip'}->%*;
        $sucessful_init = FALSE;
    }
SKIP_IP_SOCKET:
}

<[base.session.check_remaining]>;

return $sucessful_init ? 0 : 1;    ##  returning 0 for success  ##

#,,,,,,..,,,.,.,.,...,.,,,,.,,,.,,.,.,...,...,.,.,...,...,,.,,.,,,,..,..,,,,.,
#MFWHNRKU67NTKI2WSUOAVJJJLIVFXJWXHUIJEPAGQSJB3QI3BDGDNZDPZM7RSBJU45KMAIHMS35DU
#\\\|2M5LKLT7PETPPOURMOHULLLEQP6SZA7WGCSOGSPA5CTGSEPNIYK \ / AMOS7 \ YOURUM ::
#\[7]7JKRMG6QTN3WUHAJBYPQX3KHTRNSJJYCLDHHN2WWWEE6DX4QWYAY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
