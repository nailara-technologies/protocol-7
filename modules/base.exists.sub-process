## [:< ##

# name  = base.exists.sub-process
# descr = return true when a child process of current zenka with <PID> exists

my $check_pid = shift // '';
<[base.s_warn]>->( "'%s' not a valid child pid <{C1}>", $check_pid )
    and return 0
    if $check_pid !~ m|^\d+$|
    or abs($check_pid) < 2;

my $return_code = FALSE;    ##  setting up for no matches  ##

##  first collecting all [other] pids  ##
##
TRUE while <[base.waitpid]> > 0;

##  checking requested pid for existence  ##
##
my $wait_pid = <[base.waitpid]>->($check_pid);

$return_code = TRUE if $wait_pid == 0;    ##  true,  exists  ##

return $return_code;

#,,,.,,,,,.,,,,..,,..,,.,,,..,.,.,.,,,.,.,...,..,,...,..,,.,.,..,,,,.,,,.,..,,
#Z325SLAIGBAYZDBIZPJ2VA7PJIBAT2XC5GK3BZXD6OYBFK7XKW3K5524L6BHIEMFJHXSBXFBWNL5C
#\\\|4KNSVRXTXUNJR4YYJUE5Y6TSDKTCD57IRH6KTU7B764NIUEZIGS \ / AMOS7 \ YOURUM ::
#\[7]RAMC6JBCXJZW2YX3TVFDMHBWWIAL4CPHJVUVYF3AIPLPUBV26KBA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
