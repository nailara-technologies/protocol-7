## [:< ##

# name  = X-11.backgrounds.set_random_image

my $imagepath_chksums_href = <[X-11.background-image-list]>;
my %bg_image_pathmap       = reverse $imagepath_chksums_href->%*;
my @bg_image_paths         = <[base.sort]>->( \%bg_image_pathmap );

##  default settings  ##
##
<X-11.random_slideshow> //= TRUE;
<X-11.bg_image_flipped> //= FALSE;
###

if ( defined <X-11.timer.bg-img-slideshow>
    and <X-11.timer.bg-img-slideshow>->is_active ) {
    <X-11.timer.bg-img-slideshow>->cancel;
    delete <X-11.timer.bg-img-slideshow>;
}

( my $background_image_index, my $s_interval_delay, my $image_h_flipped )
    = <[X-11.background.next-rnd-index]>;

<X-11.bg_image_flipped> = TRUE if $image_h_flipped;

my $selected_image_path         = $bg_image_paths[$background_image_index];
my $bg_image_path_amos_checksum = $bg_image_pathmap{$selected_image_path};

if ( <[X-11.set_background_image]>->($bg_image_path_amos_checksum) // FALSE )
{
    ##  installing timer for random image slideshow  ##
    if ( <[base.cfg_bool]>->(<X-11.random_slideshow>) ) {
        <X-11.timer.bg-img-slideshow> = <[event.add_timer]>->(
            {   'after'   => $s_interval_delay,
                'handler' => __FILE__,            ##  call to self  ##
                'repeat'  => FALSE,
                'prio'    => 7
            }
        );
    }

    return $bg_image_path_amos_checksum    ##  return set image checksum  ##
}

return undef;                              ## or undef on error ##

#,,..,...,.,.,.,,,.,.,...,..,,.,,,..,,,,.,.,.,..,,...,...,,,.,.,.,,.,,.,.,,,.,
#HPEG3HNECOPOTNSQVBH7VIXNTMUTGPO27U475S2ESQ4RNIOZYNBYFGBGE46R3INS64ZESB4DFEBAE
#\\\|YF5FDA4IEUYHK66SO3PWHUGOQRFHKYS2WW7YKTWGDVK35XXQDIC \ / AMOS7 \ YOURUM ::
#\[7]ZTTINBEG6EVRHEMZJTJWLSWQFYO3ZZTY2ID66UFURU7R5SXKQCCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
