## [:< ##

# name  = X-11.backgrounds.set_random_image

my $imagepath_chksums_href = <[X-11.background-image-list]>;
my %bg_image_pathmap       = reverse $imagepath_chksums_href->%*;
my @bg_image_paths         = <[base.sort]>->( \%bg_image_pathmap );

##  default settings  ##
##
<X-11.random_slideshow> //= TRUE;
<X-11.bg_image_flipped> //= FALSE;
###

if ( defined <X-11.timer.bg-img-slideshow>
    and <X-11.timer.bg-img-slideshow>->is_active ) {
    <X-11.timer.bg-img-slideshow>->cancel;
    delete <X-11.timer.bg-img-slideshow>;
}

GET_NEXT_IMAGE:

( my $background_image_index, my $s_interval_delay, my $image_h_flipped )
= <[X-11.background.next-rnd-index]>;

if ( not defined $background_image_index ) {    ##  no images found  ##
    warn 'no background images found [ cannot select ] <{C1}>';
    return undef;

} elsif ( not exists $bg_image_paths[$background_image_index]
    or not defined $bg_image_paths[$background_image_index]
    or not -r $bg_image_paths[$background_image_index] ) {
    ##  deleted ?  ##
    <[X-11.bg-image.clean-up-cache]>;    ##[ removing non-existing entries ]##
    goto GET_NEXT_IMAGE;
}

my $selected_image_path         = $bg_image_paths[$background_image_index];
my $bg_image_path_amos_checksum = $bg_image_pathmap{$selected_image_path};

<X-11.bg_image_flipped> = TRUE if $image_h_flipped;

##  storing current chksum for 'prev-image' param  ##
if (    <[base.cfg_bool]>->(<X-11.random_slideshow>)
    and exists <X-11.bg_image>
    and defined <X-11.bg_image>
    and <X-11.bg_image> ne qw| :random: | ) {
    <X-11.background.prev_image.checksum> = <X-11.bg_image>;
    <X-11.background.prev_image.flipped>  = $image_h_flipped;
}

if ( <[X-11.set_background_image]>->($bg_image_path_amos_checksum) // FALSE )
{
    ##  installing timer for random image slideshow  ##
    if ( <[base.cfg_bool]>->(<X-11.random_slideshow>) ) {
        <X-11.timer.bg-img-slideshow> = <[event.add_timer]>->(
            {   'after'   => $s_interval_delay,
                'handler' => __FILE__,            ##  call to self  ##
                'repeat'  => FALSE,
                'prio'    => 7
            }
        );

    } elsif ( exists <X-11.background.prev_image> ) {
        delete <X-11.background.prev_image>; ## removing when not slideshow ##
    }

    return $bg_image_path_amos_checksum      ##  return set image checksum  ##
}

return undef;                                ## or undef on error ##

#,,,.,..,,,,.,,,,,.,.,.,,,.,,,..,,,,.,..,,,.,,..,,...,...,...,.,.,,,.,,.,,...,
#J7SPA56VJM3L4XNAWBDGFAKIGXTIENOATBPFSZPDTI57YOEDKGYWY54WQD7RE5TQWMBGZBUZY3RVQ
#\\\|63VLPN4GADED7QEXCISYP6HWRBF44RKSEGLX2ZQTJ3HNHLNI62B \ / AMOS7 \ YOURUM ::
#\[7]UDCQPTYYEEIJDP4BBQGX53LPTIHBNDCWYNSZAVEADNUB2LMLSIDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
