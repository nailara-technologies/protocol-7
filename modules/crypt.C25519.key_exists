## [:< ##

# name  = crypt.C25519.key_exists

my $name = shift;

if ( not defined $name ) {
    warn 'expected key name or filename parameter <{C1}>';
    return undef;
}

my $re_kfiles = <crypt.C25519.regex.key_files>;
state $key_dir //= <[crypt.C25519.get_usr_keys_dir]>;    ##[ once ]##

if ( $name =~ m|$re_kfiles$| ) {    ## key filename syntax ##

    my $key_found = grep { $ARG eq $name }    ##  match for key name  ##
        grep {s|^.*/||} <[file.get-non-dirs]>->($key_dir)->@*;

    return $key_found ? TRUE : FALSE;

} else {    ## key name syntax ##

    my $match_re = qr|^(\Q$name\E$re_kfiles)$|;

    my @keys_found = grep {m|$match_re|}    ##  match for key name  ##
        grep {s|^.*/||} <[file.get-non-dirs]>->($key_dir)->@*;

    ## key is virtual [ returning 4 ] ##
    return 4 if @keys_found == 1 and $keys_found[0] =~ m|:seed-phrase$|;

    return TRUE if scalar @keys_found;      ##  true \ key found  ##

    return FALSE;    ##  key with that name not present  ##
}

#,,..,,.,,.,,,,..,.,.,,.,,...,,..,,.,,...,..,,..,,...,...,...,,..,,,,,,.,,..,,
#EQHA4JAHZIUIWDKQZ2VMAGS73HETKAGP62DSZHT2DNSI54I5R3NIPRGMPNI7AOW6Y727WPIJZP3TW
#\\\|RMJZ63CHWWYHBZ3JZTBM3FRCU2YXMMHO4HZB4SGNSPZ7YFLDFI7 \ / AMOS7 \ YOURUM ::
#\[7]KCKLW6NFKGTOKNSG6KCBDF2YIKYUWF2HA6QMRKHY67XKM5OOSIBY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
