## [:< ##

# name  = crypt.C25519.key_exists

my $name = shift;

if ( not defined $name ) {
    warn 'expected key name or filename parameter <{C1}>';
    return undef;
}

my $re_kfiles = <crypt.C25519.regex.key_files>;
state $key_dir //= <[crypt.C25519.get_usr_keys_dir]>;    ##[ once ]##
return undef if not -r $key_dir;    ## warned in 'get_usr_keys_dir' ##

if ( $name =~ m|$re_kfiles$| ) {    ## key filename syntax ##

    my $key_found = grep { $ARG eq $name }    ##  match for key name  ##
        grep {s|^.*/||} <[file.get-non-dirs]>->($key_dir)->@*;

    return $key_found ? TRUE : FALSE;

} else {    ## key name syntax ##

    my $match_re = qr|^(\Q$name\E$re_kfiles)$|;

    my @keys_found = grep {m|$match_re|}    ##  match for key name  ##
        grep {s|^.*/||} <[file.get-non-dirs]>->($key_dir)->@*;

    ## key is virtual [ returning 4 ] ##
    return 4 if @keys_found == 1 and $keys_found[0] =~ m|:seed-phrase$|;

    return TRUE if scalar @keys_found;      ##  true \ key found  ##

    return FALSE;    ##  key with that name not present  ##
}

#,,,,,,..,.,,,.,.,..,,,.,,..,,,,.,,..,..,,..,,..,,...,...,.,.,,,,,,..,,..,,..,
#72EQWIEUQIW6ES72P4RHETRL25C4C23VW3NOKOGIENNBXO2TP36OH6RTHIFVYSA23W3RL6Q2XH36M
#\\\|IKIO5LS4O65KMWDXR6VAQQPHBYFJITM3L4E3USW3ASVDHXGQSRR \ / AMOS7 \ YOURUM ::
#\[7]C6UB3OJHZWTDIZQ6YUO3ZVN5463R6PIDKJRLWSH5LNJHDODLKWDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
