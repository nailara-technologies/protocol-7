## [:< ##

# name  = crypt.C25519.sign_file_list
# descr = return filenames of requested key signature

my $name       = shift // '';    ## key name ##
my $rkey_name  = shift // '';    ##  signature key name  ##
my $type_param = shift // '';    ##  optional  ##

my $rkey_fname_str
    = length $rkey_name
    ? <[crypt.C25519.key_name_to_skey]>->($rkey_name)
    : '';

if ( not length $name ) {
    warn 'expecting key name param <{C1}>';
    return undef;
} elsif ( not length $rkey_name and $type_param ne qw| vp | ) {
    warn 'expecting signature key name param <{C1}>';
    return undef;
} elsif ( $name !~ <crypt.C25519.regex.key_name> ) {
    warn 'key name param containing not valid characters <{C1}>';
    return undef;
} elsif ( length $rkey_fname_str
    and $rkey_fname_str !~ <crypt.C25519.regex.signature_key_name> ) {
    warn 'signature key name param containing not valid characters <{C1}>';
    return undef;
} elsif ( length $type_param and $type_param !~ m{(rq|ks|sk|vp)} ) {
    <[base.s_warn]>->( 'type %s not recognized [rq|ks|sk|vp]', $type_param );
    return undef;
}

my $key_dir = <[crypt.C25519.chk_key_dir]>;

my @found_sig_files;

foreach my $type (qw| rq ks sk |) {
    next if length $type_param and $type_param ne $type;
    my $rq_filename = sprintf qw| %s.%s.%s |, $name, $type, $rkey_fname_str;
    my $rq_path_abs = catfile( $key_dir, $rq_filename );
    push @found_sig_files, $rq_filename if -f $rq_path_abs;
}

return @found_sig_files if length $type_param and $type_param ne qw| vp |;

my $vp_filename = sprintf qw| %s.vp |, $name;    ##  virtual key pub-key  ##
push @found_sig_files, $vp_filename if -f catfile( $key_dir, $vp_filename );

return @found_sig_files;

#,,,.,...,,,.,.,,,..,,,,,,,..,,.,,.,.,..,,..,,..,,...,...,.,,,.,,,,,.,,,,,,.,,
#UD5H6QH5KMLIRVCOE23L2YGQ3W4P7TH3TGWDJKZXRQTVKRQDS3QNPBDGRB3WZ7YNOFOJXFDSMEWQA
#\\\|K3ZU57PIZTFYCSZSCYPIVT6Y4H7UYZZENSSPO6P3M24OG6IMVWR \ / AMOS7 \ YOURUM ::
#\[7]YLH7DB2KFTQYVHSBRUPFLTSAZH62NEK5X5ZS6SZGVD7QU6J3X2DI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
