# >:]

# name  = root.handler.sig_chld

<[base.log]>->( 2, 'SIGCHLD received.. collecting children...' );
local ( $!, $? );
while ( ( my $pid = waitpid( -1, WNOHANG ) ) > 0 ) {

    # determine exit status
    my $log_level = 1;
    my $e_val     = $? >> 8;
    my $e_sig     = $? & 127;
    $e_sig = $e_sig ? ", signal $e_sig" : '';
    $log_level = 0 if $e_sig =~ s|(signal 11)$|$1 (((SEGFAULT)))|;
    my $e_dmp = $? & 128 ? ' [with a core dump!]' : '';
    $log_level = 0 if $e_val or $? & 128;
    <[base.log]>->(
        $log_level,
        "child pid=$pid terminated ( exit code $e_val$e_sig )$e_dmp"
    );

    if ( my $child = <root.child>->{$pid} ) {
        my $instance_id = $child->{'instance_id'};
        my $instance    = <root.agent.instance>->{$instance_id};
        my $agent_name  = $instance->{'agent_name'};

        <[base.log]>->( 2, ": was instance $instance_id ..." );

        delete <root.child>->{$pid};

        delete $instance->{'restart_pids'}->{$pid}
            if exists $instance->{'restart_pids'};

        my $old_status = $instance->{'status'} || 'undefined';

        <[base.log]>->( 2, ": was '$old_status' ..." );

        my $next_status = (
                   $old_status eq 'online'
                or $old_status eq 'starting'
                or $old_status eq 'failed'
        ) ? 'failed' : 'offline';

        $next_status = 'delayed' if $old_status eq 'restart';

        if ( $old_status eq 'online' and defined <root.ondemand_agents> ) {
            map { $next_status = 'offline' if $_ eq $agent_name }
                @{<root.ondemand_agents>};
        }

        if ( <[root.instance_pid_count]>->($instance_id) ) {
            $instance->{'pid_check_timer'} = <[event.add_timer]>->(
                {   'after'    => 0.042,
                    'interval' => '0.1',
                    'handler'  => 'root.handler.children_left',
                    'data'     => {
                        'instance_id' => $instance_id,
                        'next_status' => $next_status
                    }
                }
            );
        } else {
            <[agent.change_status]>->( $instance_id, $next_status );
            <[root.init_respawn_timer]>->($instance_id);
        }
    }
}
