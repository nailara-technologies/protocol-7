# >:]

# name  = root.handler.sig_chld

<[base.log]>->( 2, 'SIGCHLD received.. collecting children...' );
local ( $!, $? );
while ( ( my $pid = waitpid( -1, WNOHANG ) ) > 0 ) {

    # determine exit status
    my $log_level = 1;
    my $e_val     = $? >> 8;
    my $e_sig     = $? & 127;
    $e_sig = $e_sig ? ", signal $e_sig" : '';
    $log_level = 0 if $e_sig =~ s|(signal 11)$|$1 (((SEGFAULT)))|;
    my $e_dmp = $? & 128 ? ' [with a core dump!]' : '';
    $log_level = 0 if $e_val or $? & 128;
    <[base.log]>->(
        $log_level,
        "child pid=$pid terminated ( exit code $e_val$e_sig )$e_dmp"
    );

    if ( my $child = <root.child>->{$pid} ) {
        my $instance_id   = $child->{'instance_id'};
        my $instance_data = <root.agent.instance>->{$instance_id};
        <[base.log]>->( 2, ": was instance $instance_id ..." );

        delete <root.child>->{$pid};

        my $old_status = $instance_data->{'status'} || 'undefined';
        <[base.log]>->( 2, ": was '$old_status' ..." );
        if ( $old_status eq 'starting' ) {
            <[agent.change_status]>->( $instance_id, 'failed' );
        } elsif ( $old_status ne 'restart' ) {
            <[agent.change_status]>->( $instance_id, 'offline' );
        } elsif ( $old_status eq 'restart' ) {
            my $job_id = $instance_data->{'job_id'};
            <[jobqueue.move_job]>->( $job_id, 'queued' );
        }
    }
}
