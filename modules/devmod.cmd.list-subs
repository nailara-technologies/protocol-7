## >:] ##

# name  = devmod.cmd.list-subs
# param = [pattern]
# descr = list [matching] zenka-subroutines

my $pattern = $$call{'args'};
my $coderef = \%code;

return {
    'mode' => qw| size |,
    'data' => "\n### list of present zenka-subroutines ###\n\n"
        . join( "\n", <[base.reverse-sort]>->($coderef) ) . "\n\n"
    }
    if not defined $pattern;

my $pattern_re;
eval { $pattern_re = qr|$pattern| };

if ($EVAL_ERROR) {
    ( my $reason = $EVAL_ERROR ) =~ s| at .+\n$||;
    return {
        'mode' => qw| false |,
        'data' => "regular expression '$pattern' not valid [ \l$reason ]"
    };
}

my @sub_list = grep {m|$pattern|} <[base.sort]>->($coderef);

return {
    'mode' => qw| false |,
    'data' => "no loaded zenka-subroutine matches '$pattern'"
    }
    if !@sub_list;

return {
    'mode' => qw| size |,
    'data' => "\n# .: zenka-subroutines matching '$pattern' :.\n\n"
        . join( "\n", @sub_list ) . "\n\n"
    }

#,,,.,...,,,,,...,...,,,,,,.,,.,.,,,,,...,,..,..,,...,..,,,,,,,,.,,.,,,,.,...,
#BXAKF6KVUZEQDRDLJZ4XADV4ZTXDCOGUDN2V7QFHJE27E7GNRTG7ZOPM2L74KCL7CNWITOACSEUMQ
#\\\|XEVKAU5NZKIHFKVRCIEKU3RF6VIMLJXE6VX6YKKBOT7QTZTFMQ2 \ / AMOS7 \ YOURUM ::
#\[7]AN4DBYDX2VRRM5YD6ANZMDYBKRFYY6ZRTAHCQHHKZZJUNH2UGSDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
