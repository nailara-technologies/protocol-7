# >:]

# name = root.load_spawn_config

my $config_to_load = shift;
my $base_file_name = 'root.spawn_config.';
die "load_spawn_config: no spawn config specified!"
  if not defined $config_to_load;

my $spawn_config_pattern = join(' ',
  map { $base_file_name . $_ } split(/\s+/, $config_to_load) );

[base.log:1,": loading spawn config '$config_to_load'.."];
my $spawn_config_data = [base.load_section_code:$spawn_config_pattern];

my $globals_aref = shift(@{$spawn_config_data})->{'globals'};
my @exec_globals = [base.parser.config:$globals_aref,
    '$data{\'root\'}{\'spawn_config\'}{\'globals\'}'];
[base.execute_agent_code:@exec_globals];

my $agents_init_code = shift(@{$spawn_config_data})->{'agents'};

<root.spawn_config.agents.startup.init_code> = {};
<root.spawn_config.agents.startup.spawn_order> = [];

foreach my $agent_element (@{$agents_init_code}) {

  if ( ref($agent_element) ne 'HASH' ) {
    [base.log:0,": : spawn cfg '$config_to_load' :"
      ." syntax error: '$agent_element' ( expected \" - <agent_name>\" )"];
    next;
  }

  my ($agent_name, $agent_init_code) = each %{$agent_element};
  push( @{<root.spawn_config.agents.startup.spawn_order>}, $agent_name )
    if [root.agent.is_enabled:$agent_name];

  foreach my $init_section (@{$agent_init_code}) {

    if ( ref($init_section) ne 'HASH' ) {
      [base.log:0,": : spawn cfg '$config_to_load' :"
        ." syntax error: '$init_section' ( config section expected )"];
      next;
    }

    my ($init_keyword, $init_code) = each %{$init_section};
    <root.spawn_config.agents.startup.init_code>->{$agent_name}->{$init_keyword}
        = $init_code;
  }
}
