## [:< ##

# name  = base.cmd.present
# param = <name>
# descr = report whether a user or zenka is connected

if ( not defined $$call{'args'} or !length( $$call{'args'} ) ) {
    $$reply{'data'} = 'no username specified';
} elsif ( $$call{'args'} =~ <regex.base.usr> ) {
    my $user = $$call{'args'};

    return { 'mode' => qw| false |, 'data' => 'seen no such client' }
        if not exists $data{'user'}{$user}
        or (not exists $data{'user'}{$user}{'last_seen'}
        and not exists $data{'user'}{$user}{'session'} );

    my $utime = $data{'user'}{$user}{'last_seen'}
        || $data{'user'}{$user}{'connected_since'};
    my $mode = 'time-stamp';
    $mode = 'time'
        if <[base.parser.timestamp]>->( 'date', $utime ) eq
        <[base.parser.timestamp]>->('date');

    if ( not exists $data{'user'}{$user}{'last_seen'}
        and exists $data{'user'}{$user}{'session'} ) {
        return {
            'mode' => qw| true |,
            'data' => 'present since '
                . <[base.parser.timestamp]>->( $mode, $utime )
        };
    } else {
        return {
            'mode' => qw| false |,
            'data' => 'last seen '
                . <[base.parser.timestamp]>->( $mode, $utime )
        };
    }

} else {
    $$reply{'data'} = 'invalid username';
}

#,,.,,,.,,,,,,.,,,,,.,.,.,,,.,.,,,..,,..,,,,.,..,,...,...,,,.,.,.,,..,..,,...,
#MZIJULVA4ML56DVV5QLF4S4RT52RVFWFEJEXLDA3NYSOKHNKU2HXOTPXHUUZNUXM64K4T7E3VJXGO
#\\\|MMWHMMPW3Y2FVMIH3UBWXC4PEPN7SBASCRQWTNJE7VO4PLUYMNN \ / AMOS7 \ YOURUM ::
#\[7]W6PXAIEYZFXIVCAOKOTBXRO44VZNUZIT5MJNVOY2BPT7ZCHMNEDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
