## [:< ##

# name  = mpv.cmd.change_subname
# descr = change zenka subname [and fetch new playlist]

my $new_subname = $$call{'args'};

return { 'mode' => qw| false |, 'data' => 'subname parameter expected' }
    if not defined $new_subname or !length($new_subname);
return {
    'mode' => qw| false |,
    'data' => 'subnames identical - no changes'
    }
    if defined <system.zenka.subname>
    and $new_subname eq <system.zenka.subname>;

<[base.log]>->( 0, "changing zenka subname to '$new_subname'" );

<system.zenka.subname> = $new_subname;

<[mpv.cmd.reload_playlist]>;    # fetching entries for new subname / tile_name

return {
    'mode' => qw| true |,
    'data' => 'subname changed, playlist reloaded'
    }

#,,,,,,,.,...,,.,,.,.,,,,,,..,,.,,,.,,,,.,.,.,..,,...,...,...,,.,,,,,,.,.,,..,
#R2PR4MCYPSJU3WDYZYQBXQKX4TDJ2NOIBNILWKWNVG3WJEALQA34XWVAMRU2PJXIM6FOQRW5F5DN2
#\\\|FFIEHACPI55EJABQ4FPQR334C7YXWANXDFEMY7J7OJAKM4CFJ37 \ / AMOS7 \ YOURUM ::
#\[7]DJPQ2KR6VLPFNZUGDBJF2GQKCSXC4WNIF5SR7TTGRPNQAI75UWAY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
