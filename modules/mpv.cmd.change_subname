## [:< ##

# name  = mpv.cmd.change_subname
# descr = change zenka subname [and fetch new playlist]

my $new_subname = $$call{'args'};

return { 'mode' => qw| false |, 'data' => 'subname parameter expected' }
    if not defined $new_subname or !length($new_subname);
return {
    'mode' => qw| false |,
    'data' => 'subnames identical - no changes'
    }
    if defined <system.zenka.subname>
    and $new_subname eq <system.zenka.subname>;

<[base.log]>->( 0, "changing zenka subname to '$new_subname'" );

<system.zenka.subname> = $new_subname;

<[mpv.cmd.reload_playlist]>;    # fetching entries for new subname / tile_name

return {
    'mode' => qw| true |,
    'data' => 'subname changed, playlist reloaded'
    }

#,,,,,,,.,...,,.,,.,.,,,,,,..,,.,,,.,,,,.,.,.,..,,...,...,,,.,,.,,,,,,,.,,,.,,
#2Y55WJVAM3KFIFA7I77Q6N3376CHXFITUND7K62JRKY7QU5SWBHN3ZZANVAAH2QAF4L7VHOSRILGK
#\\\|FKEM2SGNCI4FZPGOAP3A5RQZVHR3S3PBB3TAZ3M52SPKWPPT76S \ / AMOS7 \ YOURUM ::
#\[7]XHI5J52WNI7Y67PWSTDEFPKENEXBM2GTRUHDKU2VPFG5S4EQWEAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
