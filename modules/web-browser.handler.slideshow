## >:] ##

# name = web-browser.handler.slideshow

<web-browser.slideshow.url_index> //= 0;
<web-browser.slideshow.status>    //= qw| load |;
my @url_list = <web-browser.url.list>->@*;

<web-browser.slideshow.url_index> = 0
    if <web-browser.slideshow.url_index> >= @url_list;

<web-browser.timer.slideshow>->cancel
    if defined <web-browser.timer.slideshow>
    and <web-browser.timer.slideshow>->is_active;

if ( not defined <web-browser.url.list> or @url_list == 0 ) {
    <web-browser.slideshow.running> = 0;
    <[base.log]>->( 1, "slideshow stopped [ url list empty ]" );
    return;
}

if ( <web-browser.slideshow.status> eq qw| load | ) {

    my $load_url = $url_list[<web-browser.slideshow.url_index>];

    if ( not defined $load_url ) {
        <[base.log]>->(
            0,
            sprintf( 'slideshow url #%d is undefined, skipping.,',
                <web-browser.slideshow.url_index> )
        );
        <web-browser.timer.slideshow> = <[event.add_timer]>->(
            {   'after'   => 0.13,
                'handler' => qw| web-browser.handler.slideshow |
            }
        );
    } elsif ( $load_url =~ m|^file://(/.+)$|
        and -f $1
        and File::stat::stat($1)->size == 12
        and ${ <[file.slurp]>->($1) } eq "<!--SKIP-->\n" ) {
        <[base.log]>->(
            2,
            'SKIP keyword encountered in local content file! [URL #'
                . <web-browser.slideshow.url_index> . ']'
        );
        <web-browser.timer.slideshow> = <[event.add_timer]>->(
            {   'after'   => 0.42,
                'handler' => qw| web-browser.handler.slideshow |
            }
        );

    } else {
        if (    <system.zenka.mode> eq qw| universal-child |
            and not <web-browser.slideshow.paused>
            and ( $load_url eq qw| [PAUSE] |
                or not <web-browser.slideshow.iteration> )
        ) {
            return if <web-browser.slideshow.paused>;

            <web-browser.slideshow.iteration>++;
            <web-browser.slideshow.paused> = 1;

            <[base.protocol-7.command.send.local]>
                ->( { 'command' => "cube.report_paused" } );

            my $looped = 0;
            while ( $looped < 2
                and $url_list[<web-browser.slideshow.url_index>] eq
                '[PAUSE]' ) {
                <web-browser.slideshow.url_index>++;
                if ( <web-browser.slideshow.url_index> >= @url_list ) {
                    <web-browser.slideshow.url_index> = 0;
                    $looped++;
                }
            }
        } else {
            <[web-browser.load_uri]>->($load_url);
            <web-browser.slideshow.iteration>++;
            <web-browser.slideshow.url_index>++;
        }
    }
} elsif ( <web-browser.slideshow.status> eq qw| load_finished |
    and <window.scrolling> ) {
    <web-browser.slideshow.status> = qw| scrolling |;
} elsif ( <web-browser.slideshow.status> eq qw| load_finished |
    or <web-browser.slideshow.status> eq qw| scroll_finished | ) {
    my $min_delay
        = exists <web-browser.slideshow.temp_delay>
        ? delete <web-browser.slideshow.temp_delay>
        : <web-browser.slideshow.min_delay>;
    my $delay
        = $min_delay
        - ( <[base.time]>->(3) - <web-browser.time.fade_complete> );
    $delay -= <web-browser.slideshow.swap_delay>
        if <web-browser.slideshow.status> eq 'scroll_finished';
    $delay = 0 if $delay < 0;

    if (    <system.zenka.mode> eq qw| universal-child |
        and <web-browser.slideshow.status> eq qw| scroll_finished | ) {
        my $next_index
            = <web-browser.slideshow.url_index> >= @url_list
            ? 0
            : <web-browser.slideshow.url_index>;
        $delay = <web-browser.slideshow.swap_delay>
            if $delay < <web-browser.slideshow.swap_delay>
            and $url_list[$next_index] eq qw| [PAUSE] |;
    }

    if ( not <web-browser.slideshow.no_switch> ) {
        <web-browser.slideshow.status> = qw| load |;
        <web-browser.timer.slideshow>  = <[event.add_timer]>->(
            {   'after'   => $delay,
                'handler' => qw| web-browser.handler.slideshow |
            }
        );
    } else {
        <web-browser.slideshow.running> = 0;
        <[base.log]>->( 1, "slideshow stopped [ no_switch is enabled ]" );
    }
}

#,,..,,..,...,...,,,.,.,,,...,.,.,,.,,..,,.,,,..,,...,..,,.,,,...,,..,,.,,.,.,
#R7WEDYIJ2DNRI6ERQ3V6IZOMZUIZZ5HN4ILZPE3RNDGFFYJELUYTGKRFE67XRJ25LALJATKSHGJ7M
#\\\|RBIR2YYNLEHSSUE2UBPFSE67HTC5WH45VV7DOTXHPNHI2MHQCAJ \ / AMOS7 \ YOURUM ::
#\[7]CVGKHUSBAM44OZK6BACQ3RC4LWQUXVUQAOEMHPWA653UGQSXE6CA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
