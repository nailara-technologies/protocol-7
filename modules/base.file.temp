## [:< ##

# name  = base.file.temp

my $tmpl       = shift // 'X' x 13;
my @check_dirs = shift;
my $unlink     = shift // TRUE;     ## unlink in end code callback ##
my $register   = shift // FALSE;    ## register for unlinking at v7 zenka ##

if ( $tmpl =~ m|/| ) {    # allow paths later
    warn 'filename template syntax not valid [ no paths ] <{C1}>';
    return undef;
}

my $first_dir;
my $zenka_name = <system.zenka.name>;
@check_dirs = qw| /var/protocol-7 | if @check_dirs == 0;

<[base.perlmod.load]>->( 'File::Path', qw| make_path | )
    if not exists &{'make_path'};

foreach my $chk_dir (@check_dirs) {
    my $subdir_path = catfile( $chk_dir, $zenka_name );
    <[base.logs]>->( 2, ':. tmp-dir-chck :. %s', $subdir_path );
    if ( -d $subdir_path and -w $subdir_path
        or make_path( $subdir_path, { 'mode' => 0750 } ) ) {
        $first_dir = $subdir_path;
        last;
    }
}
if ( not defined $first_dir ) {
    <[base.s_warn]>->(
        'no success creating temp dir [ %s ]',
        <[base.str.os_err]>
    );
    return undef;
}

my $retries = 47;
my $tmp_file_path;
while ( not defined $tmp_file_path or -e $tmp_file_path and $retries-- ) {
    $retries = 0 if $tmpl !~ m|X|;    # <-- no rnd char range in template
    ( my $fname = $tmpl )
        =~ s|(X+)|uc( <[base.prng.chars-anum]>->( length $1 ) )|ge;
    $tmp_file_path = catfile( $first_dir, $fname );
}

if ( -e $tmp_file_path ) {
    warn 'cannot find suitable temp file name [ exists ] <{C1}>';
    return undef;
}

<[base.logs]>->( ' : tmp-file-path : %s', $tmp_file_path );

if ( not wantarray ) {    # <-- scalar context does not open the file
    return $tmp_file_path;
}

<[base.logs]>->( ' :. opening file : %s .,', $tmp_file_path );

my $tmp_fh;
if ( not open( $tmp_fh, qw| > |, $tmp_file_path ) ) {
    <[base.s_warn]>->( '> %s : %s', $tmp_file_path, <[base.str.os_err]> );
    return undef;
}

if ($unlink) {
    $data{'callbacks'}{'end_code'} //= [];
    push $data{'callbacks'}{'end_code'}->@*, sub { unlink $tmp_file_path };
}
if ($register) {
    <system.init_reports> //= [];
    push(
        <system.init_reports>->@*,
        {   'param'          => $tmp_file_path,
            'descr'          => 'registering temp file path..,',
            'target_command' => qw| v7.report-temp-path |,
        }
    );
}

return ( $tmp_fh, $tmp_file_path );

#,,,,,,,,,,,.,.,,,..,,.,,,.,,,,..,...,,..,,,,,..,,...,...,,,,,,.,,,,.,..,,.,.,
#X5QED6POZTWTDKANNZUEMW5MNS4CYV2U33DYEIWSL3UQ3FKMVITNBM7R4JJ3NK2DSPMMBBZ6MUVO4
#\\\|YISCHO54KF6JNNQVFTODM4QADIPWZBTGEUMKY6OFOXGCZVTFYB6 \ / AMOS7 \ YOURUM ::
#\[7]5SE3JY6K32MASM7OCK4E52EEOMHLMD24XAU56ZGZ4K3OJPL2IOAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
