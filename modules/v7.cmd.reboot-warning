## [:< ##

# name  = v7.cmd.reboot-warning
# param = <delay> <reason>
# descr = broadcast a reboot warning to all unix users

( my $warn_seconds, my $reboot_reason )
    = split( m| +|, $$call{'args'} // '', 2 );

my $who_bin_path  = <[file.which]>->('who');
my $wall_bin_path = <[file.which]>->('wall');

return {
    mode   => qw| false |,
    'data' => "numerical 'seconds' parameter expected"
    }
    if !length( $warn_seconds // '' )
    or $warn_seconds !~ m|^\d+$|;
return { mode => qw| false |, 'data' => "'reason' parameter expected" }
    if !length( $reboot_reason // '' );
return {
    mode   => qw| false |,
    'data' => "'reason' parameter too long [ max. 32 characters ]"
    }
    if length( $reboot_reason // '' ) > 32;
return {
    mode   => qw| false |,
    'data' => "invalid character '$1' in 'reason' parameter"
    }
    if $reboot_reason =~ m|([^\s\d\w\-\+\'\"\.,_])|;
return { mode => qw| false |, 'data' => "'wall' binary not found" }
    if !length($wall_bin_path);

<[base.log]>->( 1, ":.. sending 'wall' message [ host reboot warning ]" );

if (system( $wall_bin_path,
        "\n\n  <<< REBOOTING SYSTEM IN $warn_seconds SECONDS [ $reboot_reason ]"
            . " >>>\n\n\n\r   < [ TO ABORT REBOOT "
            . "RUN 'p7c system.abort-reboot' ] >\n\n" ) != 0
) {
    my $err_msg = lcfirst($OS_ERROR);
    warn "$err_msg [ $wall_bin_path ]";
    return {
        mode   => qw| false |,
        'data' => "'wall' command error : $err_msg"
    };
}
return { mode => qw| true |, 'data' => 'message sent to all terminals.' };

#,,.,,.,.,.,,,,,.,.,,,...,..,,..,,,,,,.,,,,,,,..,,...,...,.,,,,..,..,,,,.,,,,,
#QCU4GOGU7TYR4DJB3CHSJ6KB4FKFZPQ2IRWURHVTIHJFDEPHKT4J2XOR7N3FLEGXOORKLQZ2GNX5W
#\\\|ZVYRE7DPP7GTS6H737L3XODLJOH4MUBDGZTXOEJVF52A4Y76KVX \ / AMOS7 \ YOURUM ::
#\[7]V7SVMRNUBH3ITW4RE4R2ZWENGQ24OLJWL6QNOKAILOAT6MSJQQDA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
