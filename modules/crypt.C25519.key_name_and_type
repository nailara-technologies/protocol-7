## [:< ##

# name  = crypt.C25519.key_name_and_type
# descr = return key name and type of given key filename

my $C25519_filename = shift // '';

if ( not length $C25519_filename ) {
    warn 'expected key filename parameter <{C1}>';
    return undef;
}

foreach my $type ( keys <crypt.C25519.regex.key_file>->%* ) {
    return ( $LAST_PAREN_MATCH, $type )
        if $C25519_filename =~ <crypt.C25519.regex.key_file>->{$type};
}

<[base.s_warn]>->(
    'key file %s does not match any defined type <{C1}>',
    $C25519_filename
);

return undef;

#,,,.,.,.,...,.,,,.,.,,.,,.,,,...,.,.,..,,.,,,..,,...,...,...,...,,..,,..,,.,,
#6BNDLNIRLXXVY7IBHVM2MXVJWENSP2JXBFJX4NIBEKXDUZTAJFZ4WER2IVENWKYBE5PI7CXMP46A2
#\\\|OLF4P5UJ7E7MITXBLDAOEJ3BPPZ5B53WEC45HF6V66AQOPC4OZS \ / AMOS7 \ YOURUM ::
#\[7]P4TV2XAJ4CCV3URERUOFDXAUTIXFXZLSWPCEHLU7AZ3XWKI26SAQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
