## >:] ##

# name  = base.chk-sum.bmw.filesum
# note  = this will block on large files --> event based async. method ..,
# param = <bit-size> <file-path>

my $bit_size = shift;
return warn 'expected bit-size parameter <{C1}>'
    if not defined $bit_size or $bit_size !~ m,^(224|256|384|512)$,;
return warn 'expected file name parameter <{C1}>' if not my $fname = shift;
return warn sprintf( "file '%s' not found <{C1}>", $fname ) if not -f $fname;

my $bmw = <[chk-sum.bmw.ctx]>->($bit_size);

open( my $SUM_FD, qw| < |, $fname )
    or return warn sprintf '<< %s : %s >>', $fname,
    <[base.format_error]>->($OS_ERROR);

$bmw->addfile($SUM_FD);

close($SUM_FD);

return encode_b32r( $bmw->digest );

#,,,,,,,,,,.,,.,.,,,,,,..,,,.,,.,,,,,,,,.,,.,,..,,...,...,..,,,,,,..,,.,,,,.,,
#AKZEDGO5SJLZNSVJA4LZZDTDMCPTKL3N7JGT4SL5Q3PDMZAZYPLLHBX5O3IVNNKT4LR2MSB73T6DU
#\\\|UTAKUHFNZZFN6Q526SGWS5LO5ML5NC5DAM6DADDIF6JCDIJ5IE5 \ / AMOS7 \ YOURUM ::
#\[7]2FJTTG4OBN4LDGU5BLZRYXBOABDLWLOUHGU7LJWGJFIAJXQBKSDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
