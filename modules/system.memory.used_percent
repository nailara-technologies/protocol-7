# >:]

# name  = system.memory.used_percent
# descr = return ammount of used memory in percent

my $proc_mem_path = '/proc/meminfo';
my $free_bin_path = '/usr/bin/free';

<system.proc_mem_exists> //= 0;
<system.proc_mem_exists> = 1 if !<system.proc_mem_exists> and -f $proc_mem_path;

my $mem_fh;
my $mem_total;
my $mem_avail;
if (<system.proc_mem_exists>) {
    open( $mem_fh, "/proc/meminfo" )
        || die("failed to open '$proc_mem_path'");
    while (<$mem_fh>) {
        $mem_total = $1 if /^MemTotal:\s+(\d+) kB$/;
        $mem_avail = $1 if /^MemAvailable:\s+(\d+) kB$/;
        last if defined $mem_total and defined $mem_avail;
    }
} else {
    die "can't open '$proc_mem_path' or run '$free_bin_path'"
        if !-x $free_bin_path;
    open( $mem_fh, "$free_bin_path |" )
        || die "failed to execute '$free_bin_path' [$!]";
    while (<$mem_fh>) {
        ( $mem_total, $mem_avail ) = ( $1, $6 )
            if /^Mem:\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)\s+(\d+)$/;
        last if defined $mem_total and defined $mem_avail;
    }
}
close($mem_fh);
if ( not defined $mem_total or not defined $mem_avail ) {
    my $source_str
        = <system.proc_mem_exists>
        ? "'$proc_mem_path'"
        : "'$free_bin_path' output";
    die "failed to extract data from $source_str";
}

<system.mem.used_percent>
    = sprintf( "%.1f", ( $mem_total - $mem_avail ) * 100 / $mem_total );

return <system.mem.used_percent>;
