## [:< ##

# name = osd-logo.handler.download_reply

my $params   = shift // {};
my $new_path = $params->{'call_args'}->{'args'};
my $warn_img = <system.root_path> . '/data/gfx/patterns/warning.svg';

if ( $params->{'cmd'} eq qw| FALSE | or !-f $new_path ) {
    my $reason
        = $params->{'cmd'} eq qw| TRUE | ? 'file not found' : $new_path;
    <[base.log]>->( 0, "unable to obtain valid logo image path [ $reason ]" );
}

<osd-logo.logo_path> = $new_path;
<[base.log]>->( 1, ":. $new_path .:" );

if ( defined <osd-logo.cfg.bg_alpha> ) {
    my $mode = <osd-logo.cfg.bg_alpha>;
    <[base.log]>->( 1, "<color_to_alpha> [$mode] $new_path ..," );

    <[base.protocol-7.command.send.local]>->(
        {   'command'   => 'cube.graphics-matrix.filter',
            'call_args' => { 'args' => join( ' ', $mode, $new_path ) },
            'reply'     =>
                { 'handler' => 'osd-logo.handler.graphics-matrix_reply' }
        }
    );

} else {
    <[base.log]>->( 2, ":  : .. skipping color-to-alpha processing .," );

    <[osd-logo.open_window]>;

}

#,,.,,,,.,.,,,..,,,,,,,,,,,.,,,.,,..,,.,.,...,..,,...,...,.,.,..,,.,,,...,..,,
#RCEH75UMJCVAC4H3OPC3YQEKLGFCNLGEVL6QWTH4FVWPAWRLOGYHRJM56ZHFMGGRBUGASLGQ34JAE
#\\\|U3MXJQCFLMQQNDFLUBH32XXAJKUJEX6Z644DH5AN47AGFFPOAEN \ / AMOS7 \ YOURUM ::
#\[7]57P2EOVGFJOY5JBKJPJNLS6AJOQ22MNEU75YR4VJIJSE7HR5BKDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
