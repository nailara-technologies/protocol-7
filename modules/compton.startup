## [:< ##

# name  = compton.startup
# [LLL] = improve error handing . . ,

my $display = <x11.display>;
if ( not defined $display ) {
    <[base.log]>->(
        0, '<< cannot get DISPLAY setting from X-11, aborting startup >>'
    );
    <[base.exit]>->(2);
}

<[base.logs]>->( "starting 'compton' on display %s .,", $display );

my $shadow_def = '#000013';
<compton.default_shadow> //= $shadow_def;
( my $sh_col = <compton.shadow_color> //= <compton.default_shadow> );

if ( $sh_col !~ m|^\#?[0-9A-F]{6}$|i ) {
    <[base.logs]>->(
        0, "<< no a valid background color syntax ['%s'] >>", $sh_col
    ) if defined $sh_col;
    $sh_col = <compton.default_shadow>;    ## <-- fallback color ., ##
}

## [ calculate shadow color values ]
my @sh_val;
my @shadow_opts;
while ( $sh_col =~ s|^#?(\w{2})||i ) {
    push
        @sh_val,
        uc($LAST_PAREN_MATCH) eq qw| FF |    ## <-- white exception ., ##
        ? 1
        : sprintf( qw| %.2f |,
        ord( pack( qw| h* |, $LAST_PAREN_MATCH ) ) / 100 / 2.72 );
}
map { push @shadow_opts, sprintf( qw| --shadow-%s |, $ARG ), pop(@sh_val) }
    qw| blue green red |;
##

# old method: --vsync drm --paint-on-overlay --dbe # caused video tearing..,
my @vsync_options = qw| --unredir-if-possible |;

@vsync_options = qw| --paint-on-overlay --dbe --unredir-if-possible |
    if <x11.driver> eq qw| nvidia |;

@vsync_options = qw|--backend xrender --vsync opengl --paint-on-overlay --dbe|
    if <x11.mode> eq qw| xephyr |;

### start-up ###

my @c = (
    qw| compton -d |, $display, @vsync_options, qw|
        --shadow --no-dock-shadow -t -18 -l -15 -r 10 -o 1 -c -C
        --blur-background-fixed --detect-client-opacity
        --blur-kern 11x11gaussian --resize-damage 5
        -f -D 21 --no-fading-destroyed-argb
        --shadow-exclude name*='mpv'
        --shadow-exclude name*='menu'
        --shadow-exclude name*='ticker'
        --shadow-exclude name*='gkrellm'
        --shadow-exclude name*='osd-logo'
        --shadow-exclude name*='reenc-msg'
        --shadow-exclude name*='universal'
        --shadow-exclude name*='impressive'
        --shadow-exclude name*='start-anim'
        --shadow-exclude name*='web-browser'
        --shadow-exclude name*='storchencam'
        --opacity-rule 97:name*='SciTE'
        --opacity-rule 85:name*='Firefox'
        --opacity-rule 76:class_g*='XTerm'
        --opacity-rule 76:class_g*='Xephyr'
        --opacity-rule 85:name*='amos-desktop'
        |, @shadow_opts
);

### [ logging command arguments ] ###
my $lpw     = <system.start.log_prefix_width> // <[base.get_start_lpw]> // 24;
my $wrap_at = 78 - $lpw;
local $Text::Wrap::columns   = $wrap_at;
local $Text::Wrap::separator = "\n";
my $cmd_string = wrap( '  ', ' ' x 18, join( ' ', @c ) );
$cmd_string =~ s|\n| \\\n|mg;
$cmd_string =~ s|( +\\\n)?$|\n|s;
map { <[base.log]>->( 2, $ARG ) } ( ':.', split( m|\n|, $cmd_string ), '..' );
###

<compton.pid> = my $pid
    = open3( <compton.in_fh>, <compton.out_fh>, undef, @c );
if ( <compton.pid> == 0 ) {
    <[base.logs]>->(
        0, '<< cannot start compton [ %s ] >>',
        <[base.str.os_err]>
    );
    <[base.log]>->( 1, ' : :.. aborting zenka startup .,' );
    <[base.exit]>->(qw| 0110 |);
}

<[base.logs]>->( ': compton process started [PID=%u]', $pid );
my $prio = <compton.priority>;

<[base.log]>->( 1, ": :. reporting process id to 'v7' .," );
<[base.zenki.report_child_pid]>->($pid);

<[base.logs]>->( 2, ": setting child priority [ %u ] to %s", $pid, $prio );
say {<compton.prio_fh>} sprintf '%u %s', $pid, $prio;
close(<compton.prio_fh>);
delete <compton.prio_fh>;

<[event.add_io]>->(
    {   'fd'      => <compton.out_fh>,
        'handler' => qw| base.handler.child_output.simple |,
        'data'    => {
            'bin'           => qw| compton |,
            'pid'           => <compton.pid>,
            'log_whitelist' => [
                'invalid window parameter',
                'XIO:  fatal IO error ',
                'after \d+ requests',
                'no composite extension',
                'another composite manager'
            ],
            'callback_patterns' => {
                'no composite extension' =>
                    qw| compton.callback.not_composited |,
                'another composite manager is already running' =>
                    qw| compton.callback.already_running |
            }
        }
    }
);

#,,.,,,,.,,..,,,.,...,.,.,,,.,.,,,...,..,,,,.,..,,...,.,.,,.,,.,.,,.,,.,.,,,.,
#4ST2FUJZGQVG43IYKY4FOBLXXEBIT7R5CYE5U4NQBXL6CWX43MP6ULXRSLFZH6UKSPMKV5BMSJFEW
#\\\|KIEW5GTKGEUDFFKHQ5XYGSIUD56JOAW2NE5NWENRHLIIPAYY4YR \ / AMOS7 \ YOURUM ::
#\[7]YUWBM54EMVFAMNYP5OPYRDHN2SBGSY2IPL7YML74ECSBUOSI22AQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
