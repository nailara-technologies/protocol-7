# >:]

# name  = crypt.cbc.check_installed
# descr = check cipher module list (for installed ones) [without loading them]

my $cipher_list = shift;
my $sub_name = 'crypt.cbc.check_installed';

die "$sub_name: expected cipher list as array reference"
  if ref($cipher_list) ne 'ARRAY';

# nothing to do
return 0 if !@$cipher_list;

eval 'qx(apropos)';
if ($!) {
  warn "$sub_name: 'apropos' command failed ($!) - cipher list state unknown!\n";
} else {
  foreach my $apropos_line (split /\n/,qx(apropos -r ^Crypt::)) {
    my $descr_txt;
    my $c_list_ref = $data{'crypt'}{'cbc'}{'cipher_list'};
    $descr_txt = $1 if $apropos_line =~ /^[^\-]+\s\-\s+(.+)$/;
    $descr_txt =~ s/^Crypt::CBC compliant |^The |^Perl //g;
    $apropos_line =~ s/\s+.+$//;
    foreach my $cipher_module (@$cipher_list) {
      next if $apropos_line ne $cipher_module;
      # available? (`apropos`)
      $c_list_ref->{$cipher_module}->{'installed'} = 1;
      # extract description..
      $c_list_ref->{$cipher_module}->{'descr_txt'} = $descr_txt;
      # module loaded?
      if ($code{'base.perlmod.is_loaded'}->($cipher_module)) {
        $c_list_ref->{$cipher_module}->{'is_loaded'} = 1;
      } else {
        $c_list_ref->{$cipher_module}->{'is_loaded'} = 0;
      }
    }
    foreach my $mod_name (@$cipher_list) {
      $c_list_ref->{$mod_name}->{'installed'} = 0
        if not defined $c_list_ref->{$mod_name}->{'installed'};
    }
  }
}
