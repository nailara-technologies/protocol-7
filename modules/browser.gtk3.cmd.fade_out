# >:]

# name  = browser.gtk3.cmd.fade_out
# descr = fade out browser window

my $reply_id = $$call{'reply_id'};

<browser.loop_timer>->cancel;
Event->unloop_all();

if ( not <browser.gtk3.obj.window>->is_composited() ) {
    <browser.gtk3.obj.window>->set_opacity(0);
    <window.opacity> = 0;
    return { 'mode' => 'ack', 'data' => 'opacity = 0' };
}

<window.opacity> = <browser.gtk3.obj.window>->get_opacity();
<window.fading_in>  //= 0;
<window.fading_out> //= 0;

return { 'mode' => 'nack', 'data' => 'fading in in progress' }
    if <window.fading_in>;

return { 'mode' => 'nack', 'data' => 'already fading out' }
    if <window.fading_out>;

Glib::Idle->add(
    sub {
        <window.opacity> = <browser.gtk3.obj.window>->get_opacity();
        if ( !<window.fading_out> ) {
            <[base.callback.cmd_reply]>->(
                $reply_id, { 'mode' => 'ack', 'data' => 'fade out aborted' }
            );
            return 0;
        } elsif ( <window.opacity> <= 0 ) {
            <window.opacity> = 0 if <window.opacity> < 1;
            <browser.gtk3.obj.window>->set_opacity(<window.opacity>);
            <window.fading_out> = 0;
            <[base.callback.cmd_reply]>->(
                $reply_id, { 'mode' => 'ack', 'data' => 'fade out complete' }
            );
            return 0;
        } else {
            <window.opacity> -= ( 0.0135 + ( <window.opacity> / 27.5 ) );
            <window.opacity> = sprintf( "%.3f", <window.opacity> );
            <browser.gtk3.obj.window>->set_opacity(<window.opacity>);
            return 1;
        }
    }
);
<window.fading_out> = 1;
return { 'mode' => 'later' };
