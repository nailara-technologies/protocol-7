# >:]

# name = base.swap_subs

my $source_sub_prefix = shift;
my $target_sub_prefix = shift;
my $overwrite_policy = shift || 'overwrite'; # [overwrite|if_missing]

my $moved = 0;
my $logged_yet = 0;
foreach my $sub_name (keys %code ) {
  (my $new_sub = $sub_name) =~ s/^($source_sub_prefix)\./$target_sub_prefix./;
  if ($new_sub ne $sub_name) {
    next if $overwrite_policy eq 'if_missing' and exists $code{$new_sub};
    if (!$logged_yet) {
      [base.log:1,
        "\[!\] moving subs: $source_sub_prefix >> $target_sub_prefix"];
      ++$logged_yet;
    }
    $code{$new_sub} = $code{$sub_name};
    delete $code{$sub_name};
    $moved++;
    if ( exists $data{'code'}{$sub_name} ) {
      $data{'code'}{$sub_name}{'moved_to'} = $new_sub;
    }
  }
}
if (!$moved) {
  [base.log:0,
    "swap_subs: nothing to do ($source_sub_prefix >> $target_sub_prefix)"];
} else {
  my $s = $moved == 1 ? '' : 's';
  [base.log:2,
    " ! \[$source_sub_prefix>$target_sub_prefix\] $moved subroutine$s moved!"];
}
