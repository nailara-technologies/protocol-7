# >:]

# name = rss.ticker.fetch.single

my $rss_url = shift;
if ( not defined $rss_url or !length($rss_url) ) {
    <[base.log]>->(
        0, "<!> WARNING: no RSS-urls set up (referenced hash is empty)"
    );
    return;
}
( my $data_dir = <rss.data.tmp_path> . '/rssdata' ) =~ s,(/|\.\.)/,/,g;
my $output_file = <rss.ticker.txt_data_path>;

<[base.log]>->( 2, "checking RSS feed for new data..." );

my $response = <rss.browser>->get($rss_url);

if ( $response->code == 200 ) {

    <[base.log]>->( 2, ": got fresh RSS content..." );
    my $feed
        = <rss.parser>
        ->parse_string( encode( 'utf-8', $response->decoded_content ) );
    die <rss.parser>->errstr if not defined $feed;

    my @txt_data;
    foreach my $item ( $feed->query('//item') ) {
        my $node = $item->query('title');
        my $line = $node->text_content;
        push( @txt_data, $line );
    }

    if ( !-d $data_dir ) {
        mkdir($data_dir)
            or die "can't create rss data dir '$data_dir'! [$!]";
        chmod( 0700, $data_dir );
    }

    open( my $txt_fh, '>' . $output_file . '.NEW' )
        or die "can't write to TXT data file [$!]";
    {
        no warnings 'utf8';
        print {$txt_fh} join( ' .:. ', @txt_data );
    }
    close($txt_fh);
    move( $output_file . '.NEW', $output_file )
        or die "can't move '$output_file.NEW' to '$output_file' [$!]";
    <[base.log]>->( 2, ": : wrote txt data to '$output_file'" );
    <rss.browser>->commit;
    return 1;

} elsif ( $response->code == 304 ) {
    <[base.log]>->( 2, ": no new content since last request" );
    return 0;
} else {
    <[base.log]>->(
        0, "failed to access RSS url '$rss_url' (",
        $response->status_line, ")"
    );
    my ($dev,  $ino,   $mode,  $nlink, $uid,     $gid, $rdev,
        $size, $atime, $mtime, $ctime, $blksize, $blocks
    ) = stat($output_file);
    my $file_age = sprintf( "%.2f", ( time() - $ctime ) / 3600 );
    if ( $file_age >= <rss.ticker.cache_timeout> ) {
        <[base.log]>->( 0, "local feed data has timed out ($file_age hours)" );
        open( my $txt_fh, '>' . $output_file )
            or die "can't open TXT data file for writing [$!]";
        close($txt_fh);
        return 1;    # update with empty file
    } else {
        <[base.log]>->( 1, "keeping cached feed data ($file_age hours old)" );
    }
    return -1;
}
