## >:] ##

# name  = base.eval.get_params
# descr = safely evaluate subroutine parameters

## print perl code result to stdout ##
my $devmod_output_to_console = 0;

my @params = @ARG;

if ( @params == 0 ) {
    warn 'expected params <{C1}>';
    return undef;
}

## setting up safe namespace ##
my $parse = new Safe;
$parse->permit_only(qw| :base_core :base_orig |);

#### create function to by iteration exclude all uneeded opcodes [man Opcode]
## required from base_core  ## const qr lineseq stringify ##

## evaluate supplied parameters ##
#
my @result = map { $parse->reval($ARG) } @params;
#
##

if ($devmod_output_to_console) {
    say "\n", '< eval result > ',
        join( ', ',
        ( map { defined $ARG ? sprintf "'%s'", $ARG : qw| UNDEF | } @result )
        ),
        "\n";
    <[base.logs]>->( 0, '< eval error > %s', <[base.str.eval_error]> )
        if length $EVAL_ERROR;
}

return undef if length $EVAL_ERROR;
return @result;    ## undef on eval errors ##

#,,,,,,,.,,.,,.,,,,,.,,,,,.,,,,..,,,.,,..,.,.,..,,...,...,...,,,,,...,,.,,...,
#CFKEUFSZXELDRGUWVWLW3UXMPAJU7JZ2BJ57WU7V4V3LTNPPD63ZJICDVILJUD6BQKOQDC7EPJABM
#\\\|IX2WZZDMX6IQFPTWW52T2WTATLQ7N4Z7IC5O5C5KAU2XZPEACWZ \ / AMOS7 \ YOURUM ::
#\[7]I7TE3USPZPKMFIMKKS3VIZHQA55YAWNY22FXICNXAFURY67LTCDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
