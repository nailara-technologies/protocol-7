## [:< ##

# name = ticker-gtk.init_code

<[base.perlmod.autoload]>->('Gtk3');
<[base.perlmod.autoload]>->('Math::Trig');
<[base.perlmod.autoload]>->('Glib::Event');
<[base.perlmod.autoload]>->('Convert::Color');
<[base.perlmod.autoload]>->('Cairo::GObject');
<[base.perlmod.autoload]>->('Font::FreeType');
<[base.perlmod.autoload]>->('Glib::Object::Introspection');

Glib::Object::Introspection->setup(
    qw| basename | => qw| GdkX11 |,
    qw| version  | => qw|  3.0   |,
    qw| package  | => qw| Gtk3::Gdk |
);

<[base.stderr_redir]>;

<ticker-gtk.font.known_offsets> = <[ticker-gtk.font.offsets_table]>;

<ticker-gtk.font.path> //= sprintf qw|%s/data/ttf/droid|, <system.root_path>;
<ticker-gtk.font.name> //= qw| DroidSans-Bold |;   # LLL: <- load from config!
<ticker-gtk.font.size_percent> //= 100;            # LLL: <- load from config!

<ticker-gtk.use_transparency>  //= TRUE;
<ticker-gtk.do_custom_fade_in> //= TRUE;

<ticker-gtk.cfg.draw_outline>       //= TRUE;
<ticker-gtk.cfg.rotate_outline_col> //= TRUE;
<ticker-gtk.cfg.outline_speed>      //= 1.2;       ##  degree per second  ##

<ticker-gtk.animation_started>   //= FALSE;
<ticker-gtk.paused>              //= FALSE;
<ticker-gtk.default_speed>       //= 7;
<ticker-gtk.auto_speed_mode>     //= FALSE;
<ticker-gtk.slowdown.percent>    //= 0;
<ticker-gtk.request_rss_updates> //= FALSE;

<base.callback_hooks.async_online> = ['ticker-gtk.callback.request_updates'];

## LLL ###

<ticker-gtk.speed> = <ticker.redraw_delay>
    if defined <ticker.redraw_delay>    # LLL: change to 'speed' later
    and <ticker.redraw_delay> =~ m|^\d+$|
    and <ticker.redraw_delay> >= 5
    and <ticker.redraw_delay> <= 42;

# [LLL] fix range [1..100???]
<ticker-gtk.speed> = delete <ticker.speed>
    if defined <ticker.speed>
    and <ticker.speed> =~ m|^\d+$|
    and <ticker.speed> >= 5
    and <ticker.speed> <= 42;

<ticker-gtk.font.name> = <ticker.font.name> if defined <ticker.font.name>;

<[ticker-gtk.set_default_values]>;

<[ticker-gtk.calc_colors]>;

##########

# die "[!] font file not found [$font_path]" if !-f $font_path;

# <[base.log]>->( 1, "loading ticker font '$font_name' ..." );
# my $font_name = <ticker-gtk.font.name>;
# my $font_path = <ticker-gtk.font.path> . '/' . $font_name . '.ttf';
# my $freetype = Font::FreeType->new;
# my $ft_face  = $freetype->face($font_path);
# <ticker-gtk.font_face> = Cairo::FtFontFace->create($ft_face);

0;

#,,,.,.,.,,..,,,.,,,.,.,,,...,.,.,..,,...,,.,,.,.,...,...,...,.,,,..,,...,..,,
#SD3APTYAQMLNLITF4XO5Z7RDNRHXIBGUVLNGVTB26ANLDTKHEHUEW35HDBI4MWJYJXECGWPYIA4GO
#\\\|3F5QGQZASGXHA55MP2UBS5XAW3XIVHOA47WLELOAGLOUHDIYFSJ \ / AMOS7 \ YOURUM ::
#\[7]Y5VN5YZIG5R3EUBDUKFTVAPWN6VHN6HK6AL7KFM5H3YAFFS7Q4AY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
