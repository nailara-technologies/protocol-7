## >:] ##

# name  = base.file.path.create-chksum-link

my $chksum_dir  = shift;
my $path_string = shift;
my $chksum_str  = shift;

if ( not defined $chksum_dir or not -d $chksum_dir ) {
    warn 'expected existing checksum directory path <{C1}>';
    return undef;
} elsif ( not -w $chksum_dir ) {
    <[base.s_warn]>->(
        'directory path %s is not writable to zenka <{C1}>', $chksum_dir
    );
    return undef;
} elsif ( not length( $path_string // '' ) ) {
    warn 'expected path str parameter <{C1}>';
    return undef;
} elsif ( not length( $chksum_str // '' ) ) {
    warn 'expected chksum str parameter <{C1}>';
    return undef;
} elsif ( $chksum_str !~ m|^[2-7A-Z]+$| ) {
    warn 'checksum is expected to be in BASE32 encoding <{C1}>';
    return undef;
}

my $abs_chksum_path = abs_path( catdir( $chksum_dir, $chksum_str ) );

if ( not symlink( $path_string, $abs_chksum_path ) ) {
    <[base.s_warn]>->( '[ %s ] %s', $abs_chksum_path, <[base.str.os_err]> );
    return undef;
} else {
    return 5;    ## true ##   [ success ]   ##
}

#,,.,,..,,...,,.,,,,,,.,,,,,,,,,.,..,,.,.,.,,,.,.,...,...,,.,,,..,,.,,...,.,,,
#GJHJOIKC4JOXAA3KY7IT7E5F6FULL4GEWUM3WXS5WMZ6IDFOGA7XPUEAIIAM4DUPYBPSNFT5DUU3U
#\\\|GWRFBKY7WZTR2WFU6OKKCOCIAPLKJR4IRDFLVVX35RMBBDUOVSV \ / AMOS7 \ YOURUM ::
#\[7]BKM4T5PKHG6S4I24NS4BDAQT744F57YM4JUSZDP2WC47E7PBJQDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
