## [:< ##

# name  = protocol.amos-chksum.connect_callback

my $client_fd = shift;

if ( not defined $client_fd or !-S $client_fd ) {
    <[base.log]>->( 2, ': expected valid socket, declining init..,' );
    return 0;
}
my $socket_id = <[chk-sum.amos]>->( \$client_fd );

if ( not defined $data{'handle'}{$client_fd}{'link'}
    or $data{'handle'}{$client_fd}{'link'} ne qw| unix | ) {
    <[base.log]>->(
        0, ": [%s] connection type not 'unix', declining init..,", $socket_id
    );
    return 0;
}

my $unix = $data{'handle'}{$client_fd}{'unix'} // {};

if (   not defined $unix->{'pid'}
    or not defined $unix->{'uid'}
    or not defined $unix->{'gid'} ) {
    <[base.logs]>->(
        0, ": socket %s missing unix credentials, declining init..,",
        $socket_id
    );
    return 0;
}

my ( $pid, $uid, $gid ) = ( $unix->{'pid'}, $unix->{'uid'}, $unix->{'gid'} );

my $user = getpwuid($uid);

if ( not defined $user ) {
    <[base.log]>->(
        0,
        '[%s] cannot retrieve username from passwd file, init declined ..,',
        $socket_id
    );
    return 0;
}

##                                                  ##
##  check credentials here \ user \ group allowed ? ##
##                                                  ##

return ( 5, $user );    ## access approved \ init accepted ## [ testing .., ]

#,,,.,,,,,,.,,...,,.,,...,.,,,...,...,,..,.,,,..,,...,..,,,..,.,,,...,.,.,.,.,
#DEBU74QT6SRZ5BTEZEWYYFYAHFNUR6ISH4MQ2VZOYSTMGHFFHRP43CKBHPBVN6E67XVU2TBV4QQUK
#\\\|XAW47ECMAKNLF4LD2V62YD7C3KXFVRU47C2BEHGEZACVWA22YQY \ / AMOS7 \ YOURUM ::
#\[7]TDSPCWM2QHYDEE44EONP4JS2WUDQ5E3AOX5DNILHBWSE4L4HDMBQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
