## [:< ##

# name  = base.disable_command
# descr = permanently disable / remove a specific command from zenka mem

my @requested = <[base.reverse-sort]>->(@ARG);
if ( @requested == 0 ) {
    warn 'expected list of commands to disable';
    return undef;
}
$data{'disabled_commands'} //= [];

<[base.logs]>->(
    2,
    'disabling command%s : %s',
    <[base.cnt_s]>->( scalar @requested ),
    join( ', ', @requested )
);

my %already_disabled;
map { $already_disabled{$ARG} = 5 } $data{'disabled_commands'}->@*;

foreach my $remove_command (@requested) {
    push $data{'disabled_commands'}->@*, $remove_command
        if not exists $already_disabled{$remove_command};
}

my $remove_count = 0;    ##  count and report how many removed  ##

foreach my $remove_command ( $data{'disabled_commands'}->@* ) {
    my $delcnt = 0;
    $delcnt++
        if defined delete $code{ sprintf qw| base.cmd.%s |, $remove_command };
    $delcnt++       if defined delete <base.cmd>->{$remove_command};
    $delcnt++       if defined delete <base.commands>->{$remove_command};
    $remove_count++ if $delcnt > 0;
}

return $remove_count;    ##  actually unloaded command counter  ##

#,,,,,,.,,.,.,,,,,..,,,,.,,,.,...,,.,,.,.,.,.,..,,...,...,.,,,,.,,,,,,,..,,,,,
#IYXDI7C3RO3ULPMB75Q7PFZ5ZPCA2QPTVSOCUQD3UL5ML6JPEW3ISFKO7VEL7S7A3JFWMCQI64V5Y
#\\\|62VAIYCO425IZRI6W3SALSKCQECFQMHUA73X4PSIFL4R32JE6BY \ / AMOS7 \ YOURUM ::
#\[7]HTWJ6ALOOEKO5THHLLK7OCOQXNNP2BMKVIYOQDMR2DKYC3YUHUCA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
