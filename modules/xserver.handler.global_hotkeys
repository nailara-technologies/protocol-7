# >:]

# name  = xserver.handler.global_hotkeys

my $x11 = <xserver.x11>;

<xserver.hotkeys>            //= {};
<xserver.hotkeys.configured> //= {};
<xserver.hotkeys.triggered>  //= {};
<xserver.hotkeys.last_key>   //= {};

my $qkmap = eval { $x11->QueryKeymap };

if ( not defined $qkmap ) {    # XXX: implement reconnect / restart procedure!!
    <[base.log]>->(
        0, "<!> X11 protocol error during 'QueryKeymap' command <!>"
    );
    return;
}

my $no_key_pressed = $qkmap =~ /^\0+$/ ? 1 : 0;

my @ev_ref = eval { [ $x11->dequeue_event ], [ $x11->next_event ] };
<[base.log]>->( 0, "<!> X11 protocol error while retrieving event <!>" )
    if !@ev_ref;

foreach my $e (@ev_ref) {
    next if !@$e;
    my %event = @$e;
    my $event_type;
    $event_type = lc($1) if $event{'name'} =~ /^Key(Press|Release)$/;
    next if not defined $event_type;

    my $keycode   = $event{'detail'};
    my $mod_state = $event{'state'};
    my $triggered = <xserver.hotkeys.triggered>;

    $triggered->{$event_type}{'keycode'}{$keycode}{'mod_state'}{$mod_state} = 1;
    $triggered->{$event_type}{'mod_state'}{$mod_state}{'keycode'}{$keycode} = 1;
    <xserver.hotkeys.last_key> = {
        'keycode'    => $keycode,
        'mod_state'  => $mod_state,
        'event_type' => $event_type
    };
}

# XXX: process key ...

if ($no_key_pressed) {

    # XXX: process key ...

    delete <xserver.hotkeys.last_key>;
    delete <xserver.hotkeys.triggered>;
}
