## >:] ##

# name  = debug.cmd.eval-code
# descr = directly eval perl code in a command context

my $command_is_enabled = 0;    ##  default disabled for security reasons  ##

my $id = $call->{'session_id'};

my $timed      = 0;            ##  create timing statistics  ##
my $resolution = 7;

if ( not $command_is_enabled ) {
    <[base.logs]>->(
        0, "[%d] call of disabled command 'eval-code' denied [removing]", $id
    );
    <[base.disable_command]>->(qw| eval-code |); ##  removed from cmd list  ##
    return {
        'mode' => qw| false |,
        'data' => 'command disabled for security reasons [enable in code]'
    };
}

my $perl_source_str = $call->{'args'} // '';

if (length $perl_source_str > 7    ## enable timing statistics ##
    and index( $perl_source_str, ':timed: ', 0 ) == 0
) {
    substr( $perl_source_str, 0, 8, '' );
    $timed = 5;                    ## true ##
}

<[base.logs]>->( "[%d] < eval-code > '%s'", $id, $perl_source_str );

return {
    'mode' => qw| false |,
    'data' => 'expected perl source to evaluate'
    }
    if not length $perl_source_str;

##  recording runtime duration  ##
my $time_start = <[base.time]>->($resolution) if $timed;

my $eval_result;
{ use warnings 'FATAL'; $eval_result = eval $perl_source_str }

my $run_duration
    = sprintf( '%.*f', $resolution,
    <[base.time]>->($resolution) - $time_start )
    if $timed;

return {
    'mode' => qw| false |,
    'data' => scalar <[base.format_error]>->( $EVAL_ERROR, -1 )
    }
    if length $EVAL_ERROR;

if ( not $timed and not defined $eval_result ) {
    return {
        'mode' => qw| false |,
        'data' => qw| undef |
    };
} elsif ( not defined $eval_result ) {
    return {
        'mode' => qw| false |,
        'data' => sprintf( ':. duration : %s .: [UNDEF]', $run_duration )
    };
}

if ( length $eval_result and index( $eval_result, "\n", 0 ) == -1 ) {
    if ( not $timed ) {
        return {
            'mode' => qw| true |,
            'data' => $eval_result
        };
    } else {
        return {
            'mode' => qw| true |,
            'data' => sprintf(
                ':. duration : %s .: %s',
                $run_duration, $eval_result
            )
        };
    }
} elsif ( not $timed ) {
    return {
        'mode' => qw| size |,
        'data' => $eval_result
    };
} else {
    my $durationstr = sprintf( "\n.: duration : %s :.\n\n", $run_duration );
    return {
        'mode' => qw| size |,
        'data' => join( '', $durationstr, $eval_result, "\n" )
    };
}

#,,,.,,,,,,,.,..,,,,,,,,,,.,.,.,,,,,.,.,.,.,,,..,,...,...,..,,,,,,...,...,.,.,
#J54M2K2JWUN4UP32GEVR6BZHHFAJSPAAYBPCA7LPLZKGKES5BTPCOZMWHKQPDNTQMPCNHQQSJ46NI
#\\\|66SIXNJLORVYOBXDGKEGOXMLQ4OZPJAQKT5T2YC6X5MY6AA7XC2 \ / AMOS7 \ YOURUM ::
#\[7]MB3CZHXSMNOJ6IJMAXCJX6X2HMOKLSA2MJWTG7JG2DVBWPWAJ6BQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
