# >:]

# name  = xserver.handler.server_output
# descr = reads output from xserver process

<root.patterns.agent_output> //= {};

my $event   = shift->w;
my $read_fh = $event->fd;
my $server  = $event->data;
my $bin     = $server->{'bin'};
my $pid     = $server->{'pid'};

<xserver.output_buffer> //= '';

if (sysread(
        $read_fh, <xserver.output_buffer>,
        4096,     length(<xserver.output_buffer>)
    ) == 0    # ( filehandle has an exception )
    ) {
    $event->cancel;
    close($read_fh);
    <[base.log]>->( 1, "$bin-server [PID:$pid] output filehandle closed." );
    kill( 9, $pid );    # to make sure
    my $err_str
        = defined <xserver.first_error>
        ? ': "' . <xserver.first_error> . '"'
        : ' unexpectedly! (reason unknown)';
    <[base.log]>->( 0, "$bin-server died" . $err_str );
    <[base.log]>->( 1, "done." );
    CORE::exit(2);
}

while ( <xserver.output_buffer> =~ s|^([^\n]*)\n||s ) {
    my $output_line = $1;
    <xserver.first_error> = $1
        if $output_line =~ /\(EE\) +(.+)$/
        and not defined <xserver.first_error>;
    $output_line =~ s/\r//sg;
    <[base.log]>->( 2, "< $bin > " . $output_line );

    # XXX: kill server here?
}
