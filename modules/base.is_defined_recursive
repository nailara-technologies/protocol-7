## >:] ##

# name  = base.is_defined_recursive
# descr = return 1 if %data key exists, 5 when defined and 0 when not present

my $data_key_str = shift // '';
warn 'expected %data key string parameter' and return undef
    if not length $data_key_str;

my $data_ref = shift // *data{HASH};    ## %data if not specified different ##
my $next_ref = $data_ref;

my @dtree = <[base.parser.data_hkey_tree]>->($data_key_str);
return if not @dtree;                   ## syntax not valid ##
my $last_key = pop @dtree;

foreach my $subkey (@dtree) {    ## traverse hash keys ##
    return 0 if not defined $next_ref->{$subkey};
    $next_ref = $next_ref->{$subkey};
}

return 5 if defined $next_ref->{$last_key};    ##  defined  ##

return 1 if exists $next_ref->{$last_key};     ## exists only ##

return 0;                                      ## href key not present ##

#,,.,,,.,,..,,,,,,..,,.,.,...,.,,,,.,,,..,..,,..,,...,...,.,,,...,,,,,,,.,...,
#Q3IPXZVFZZ6QTOEKQQMIMABNKY7GJUCTBUOQRM6SIAYTXQSH7TSBNOMGUQ7TFN74EOGTBD4KC6NLO
#\\\|FVNFIAUHMN62AQV3SUBJU2PKA2SMYALJFTLJ4DEGVPZX6RUC3RN \ / AMOS7 \ YOURUM ::
#\[7]RR2VDMDD2MYAA75OMON7ESSK4LWV3MPVX7LPPOR42BH4OS5G2IDA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
