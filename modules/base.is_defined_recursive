## >:] ##

# name  = base.is_defined_recursive
# descr = return 1 if %data key exists, 5 when defined and 0 when not present

my $data_key_str = shift // '';
warn 'expected %data key string parameter' and return undef
    if not length $data_key_str;

my $data_ref = shift // *data{HASH};    ## %data if not specified different ##
my $next_ref = $data_ref;

my @dtree = <[base.parser.data_hkey_tree]>->($data_key_str);
return if not @dtree;                   ## syntax not valid ##
my $last_key = pop @dtree;

foreach my $subkey (@dtree) {    ## traverse hash keys ##
    return FALSE if not defined $next_ref->{$subkey};
    $next_ref = $next_ref->{$subkey};
}

return TRUE if defined $next_ref->{$last_key};    ##  defined [5] ##

return 1 if exists $next_ref->{$last_key};        ##  only exists [1] ##

return FALSE;                                     ##  key not present [0]  ##

#,,,.,,,,,,..,..,,..,,,..,.,,,,,.,,.,,.,.,,,.,..,,...,...,...,,,,,,,.,.,.,,,.,
#ULDUVKAO76J7ULJVTWXA3EOTOUXQGBONO4PKTRPNTNKNV53HVDABMXNJVYMPWUMRFY4MJNJZ5BESG
#\\\|O7FSX6UP3HP5PCHLMVIAJWRR7YQEWYFTGMZOUEWCMYX46WG7FKC \ / AMOS7 \ YOURUM ::
#\[7]JERURUENN5L4CTQTFQHJFRAQAAL3BBVK6YWWKBWICQ7CIWSWHOAA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
