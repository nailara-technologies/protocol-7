# >:]

# name = config.handler.export_reply

my $reply       = shift;
my $reply_id    = $reply->{'params'}->{'reply_id'};
my $agent_name  = $reply->{'params'}->{'agent_name'};
my $config_type = $reply->{'params'}->{'config_type'};
my $export_dir  = <config.json.export_dir>;
$config_type //= 'config';
my $export_file = "$agent_name.$config_type";
my $export_path = "$export_dir/$export_file";

my $mode      = 'nack';
my $reply_str = $reply->{'call_args'}->{'args'};

if (    $reply->{'cmd'} eq 'NACK'
    and $reply->{'call_args'}->{'args'} eq 'unknown command' ) {
    $reply_str
        = $agent_name eq 'core'
        ? "'core' agent refused reply!"
        : "agent '$agent_name' not online or refusing reply";
} elsif ( $reply->{'cmd'} eq 'RAW' ) {
    $mode      = 'ack';
    $reply_str = 'config written to export directory';
    undef $@;
    eval { <[file.put]>->( $export_path, $reply->{'data'} ) };
    if ( defined $@ and $@ ) {
        $@ =~ s| at base.file.put.+\n$||;
        <[base.log]>->( 0, "config export to '$export_file' failed! [$@]" );
        $@ =~ s|^[^:]+: ||;
        $mode      = 'nack';
        $reply_str = "config export failed [ write error: $@ ]";
    }
}

<[base.callback.cmd_reply]>->(
    $reply_id, { 'mode' => $mode, 'data' => $reply_str }
);
