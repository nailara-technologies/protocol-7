# >:]

# name = root.agent.set_core_sid

my ( $instance_id, $core_sid ) = @_;
my $instance_data = <root.agent.instance>->{$instance_id};

if ( exists $instance_data->{'core_sid'} ) {
    <[base.log]>->(
        0, "[WARNING] core sid for instance $instance_id was already set!"
    );
    <[agent.change_status]>->( $instance_id, 'failed' ); # possibly compromised!
    return;
}

<[base.log]>->( 2, "instance $instance_id : core sid = $core_sid" );
$instance_data->{'core_sid'} = $core_sid;

# acquire local core sid (in case more than one exists)
my $root_sid;
my @agent_ids = @{ <[agent.instance.get_ids]>->( <[agent.get_id]>->('core') ) };
foreach my $core_instance_id (@agent_ids) {
    my $_instance = <root.agent.instance>->{$core_instance_id};
    if ( @agent_ids == 1
        or exists $_instance->{'core_session'}->{$core_sid} ) {
        $root_sid = $_instance->{'root_sid'};
        last;
    }
}

$instance_data->{'root_sid'} = $root_sid;

# send instance verification request
my $verification_str = <[base.rnd_chars_noblock_hex]>->(8);
$instance_data->{'instance_verification'} = $verification_str;

<[base.proto.nailara.command.send.local]>->(
    {   'command' => "$root_sid.$core_sid.verify_instance",
        'call_args' =>
            { 'session_id' => $root_sid, 'args' => $verification_str },
        'reply' => {
            'handler' => 'dev.null',
            'params'  => {}
        }
    }
);
