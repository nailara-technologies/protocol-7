# >:]

# name  = plugin.auth.agent
# descr = perform 'agent' authentication initiated / enabled by root agent

my $id     = $_[0]->w->data;
my $input  = \$data{'session'}{$id}{'buffer'}{'input'};
my $output = \$data{'session'}{$id}{'buffer'}{'output'};

if (   not %key
    or not exists $key{'auth'}
    or not exists $key{'auth'}{'agent'}
    or ref( $key{'auth'}{'agent'} ) ne 'HASH'
    or !keys( %{ $key{'auth'}{'agent'} } ) ) {
    <[base.log]>->(
        0, "[$id] no agent authentication keys set up - access denied"
    );
    $$output .= "FAIL >:|\n";    # XXX: move down?
    return 2;
}

if ( $$input =~ s/^(\w+) (\w+)\n// ) {
    my ( $usr, $key_hash ) = ( $1, <[digest.sha1]>->($2) );
    my $kick_user = 1;
    if ( exists $key{'auth'}{'agent'}->{$usr} ) {

        if ( $key_hash eq $key{'auth'}{'agent'}{$usr} ) {
            delete $key{'auth'}{'agent'}{$usr};
            $$output .= "YEAH >:P\n";

            #            <[net.update.client_conf]>->($id);

            <[base.log]>->(
                1, "[$id] access approved to agent '$1' :)"
            );
            return ( 0, $usr );
        }

        if ($kick_user) {
            <[base.log]>->(
                1, "[$id] access denied to agent '$1' :("
            );
            $$output .= "FAIL >:|\n";
            return 2;
        }
    } else {
        <[base.log]>->( 1, "[$id] agent authentication protocol error" );
        $$output .= ">:[\n";
        return 1;
    }
}
