# >:]

# name = weather.parent.cache.read_current

my $station_id = shift;
my $cache_dir  = <weather.cache_dir> . '/data';
my $max_age    = <weather.cache_timeout> * 3600;

die "expected station_id parameter"
    if not defined $station_id or !length($station_id);

<[base.log]>->( 2, "checking 'current' cache for '$station_id'.." );

my $station_id_hash = <[digest.sha1]>->($station_id);
my $file_path       = "$cache_dir/$station_id_hash";

if ( !-f $file_path ) {
    <[base.log]>->( 2, "no cached station id found for '$station_id'" );
    return undef;
}

my $content_ref = <[file.slurp]>->($file_path);

my ( $timestamp, $data_str );
if ( $$content_ref =~ /^(\d+)\n(.+)\n$/ ) {
    ( $timestamp, $data_str ) = ( $1, $2 );
} else {
    <[base.log]>->( 0, "syntax error in cache file '$file_path'" );
    return undef;
}

my ($current_data) = thaw($data_str);

my $data_age = time - $timestamp;
if ( $data_age >= $max_age ) {
    <[base.log]>->( 1, "weather data has timed out, removing cache file.." );
    unlink($file_path) or die "unlink($file_path): $!";
    return undef;
} else {
    <[base.log]>->( 2, "retrieved 'current' weather data from cache file" );
    return $current_data;
}
