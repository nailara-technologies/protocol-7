## [:< ##

# name  = keys.console.rename
# param = <from> <to>
# descr = change a user key name [ 'list' cmd for names ]

my $param_str = shift // '';

my $key_vars_ref = <[crypt.C25519.key_vars]>;

( my $srckey, my $to_keyname ) = split m| +|, $param_str;

my $keys_re = <keys.regex>;
my $key_dir = $key_vars_ref->{'key_dir'};

my $re_kfiles      = $keys_re->{'key_files'};
my $re_public      = $keys_re->{'key_file'}->{'public'};
my $key_re_private = $keys_re->{'key_file'}->{'private'};

return print "\n  << expected <from> and <to> parameters >>\n\n"
    if not defined $srckey or not defined $to_keyname;

return printf "\n  << key with name '%s' not found >>\n\n", $srckey
    if not <[crypt.C25519.key_exists]>->($srckey);

my $key_filename_ref = <[crypt.C25519.key_vars]>->{'key_filename'};

my @k_files
    = grep {s|^.+/||} grep { -e $ARG }
    <[base.sort]>->( map { $key_filename_ref->{$ARG} }
        <[base.sort]>->($key_filename_ref) );

return print "\n  <<  specified keys identical  >>\n\n"
    if $srckey eq $to_keyname;
return print "\n  <<  target key name contains not valid characters  >>\n\n"
    if $to_keyname !~ m|^[\w\.\-\_]+$|;

return printf "\n  << key with name '%s' not found >>\n\n", $srckey
    if not <[crypt.C25519.key_exists]>->($srckey);

return say sprintf "\n  << destination name '%s' exists >>\n", $to_keyname
    if <[crypt.C25519.key_exists]>->($to_keyname);

map {
    my $k_path = catfile( $key_dir, $ARG );
    return printf "\n << no write access to %s >>\n\n", $k_path
        if not -w $k_path;
} @k_files;

my $maxlen = [ minmax map {length} @k_files ]->[1];

print "\n :\n";

my $ren_count = 0;

foreach my $file_name (@k_files) {
    my $target_name = $file_name;
    next if $target_name !~ s|^$srckey|$to_keyname|;
    printf( " : %-*s  -->  %s\n", $maxlen, $file_name, $target_name );
    return printf "\n rename failed : %s\n\n",
        <[base.str.os_err]>
        unless rename(
        catfile( $key_dir, $file_name ),
        catfile( $key_dir, $target_name )
        );
    $ren_count++;
}

<[crypt.C25519.clear_chksums]>;    ##  cleaning key chksum cache  ##

printf " :\n  .: successfully renamed %02d file%s\n\n", $ren_count,
    <[base.cnt_s]>->($ren_count);

#,,.,,,..,,.,,,,.,...,..,,,..,.,,,..,,..,,,.,,..,,...,...,,,,,,.,,,,,,,,.,,.,,
#7JRQKRSZJPX7HMEOFNX7PROFSNBSGXS3P76Z34NB5T6D7UDDYHQT6FBK3RVWSQNBXYOPO3B66WPIY
#\\\|KFUGJC33RZ3PGWCKEV6LAPX2N56M5CWTGQGOKZD4MBUDXDP5F7W \ / AMOS7 \ YOURUM ::
#\[7]AGYXDMDW766THOV4SS3WGJ6UWBSCBT3TNKU6YXQXJW3IZJMJE6AA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
