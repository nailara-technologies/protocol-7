## >:] ##

# name  = base.handler.connect

my $id     = $_[0]->w->data;
my $fd_srv = $_[0]->w->fd;

##  closed server session  ##
if ( not defined $data{'session'}{$id} ) {
    ## removing from event management ##
    $_[0]->w->cancel if $_[0]->w->is_active;
    return undef;
}

my $type  = $data{'handle'}{$fd_srv}{'link'};
my $proto = $data{'session'}{$id}{'protocol'};
my $state = $data{'session'}{$id}{'state'};
my $mode  = $data{'handle'}{$fd_srv}{'mode'};

my $handler       = $data{'io'}{'type'}{$type}{'handler'}{$mode}{'connect'};
my $banner_string = $data{'protocol'}{$proto}{'connect'}{'banner'} // '';
my $cn_cb         = $data{'protocol'}{$proto}{'connect'}{'callback'};

if ( not defined $data{'handle'}{$fd_srv}{'protocol'} ) {
    <[base.logs]>->(
        0,   '[%s] no protocol defined for submitted handle %s',
        $id, <[base.caller]>
    );
    <[base.session.check_remaining]>;
    return undef;
} else {
    ( my $handler_str = $handler ) =~ s{^io\.|\.connect$}{}g;
    <[base.logs]>->( '[%d] calling connect handler [%s]', $id, $handler_str );
    my $fd_client = $code{$handler}->( $_[0] );
    if ( defined $fd_client and fileno($fd_client) and $fd_client->connected )
    {
        my $name;    ## defined by init callback or by auth handler later ##

        if ( defined $cn_cb ) {
            my $status = 0;    ##  0 <-- disconnect : init declined  ##
            if ( not defined $code{$cn_cb} ) {
                <[base.logs]>->(
                    0,   "[%d] connect callback '%s' subroutine not defined",
                    $id, $cn_cb
                );
            } else {
                <[base.logs]>->(
                    2,   "[%d] calling connect callback [%s]",
                    $id, $cn_cb
                );

                ( $status, $name ) = $code{$cn_cb}->($fd_client);

                if ( $status != 5 ) {    ## init declined : terminate ##
                    eval { shutdown( $fd_client, 2 ) };   ## being polite., ##
                    close($fd_client);
                    return undef;
                } else {    ##  5  <--  init accepts client .,  ##
                    <[base.logs]>->(
                        1,   "[%d] :.. accepting [%s] session ..,",
                        $id, $name
                    );
                }
            }
        }

        my $cid = <[base.session.init]>->( $fd_client, $proto, $mode, $name );

        if ( not defined $cid ) {
            <[base.logs]>->(
                '[%d] session init not successful, closing connection .,', $id
            );
            eval { $fd_client->shutdown(2) };
            $fd_client->close;
            return undef;
        }

        ## sending protocol banner string ., ##
        if ( length($banner_string) and $mode eq qw| input | ) {
            <[base.net.send_to_socket]>->( $fd_client, $banner_string );
        }
        <[base.logs]>->( 1, '[%d] established %s connection', $cid, $proto );

    } else {
        <[base.logs]>->( 1, '[%d] connection was closed [?] .,', $id );
        return undef;
    }
}

#,,.,,.,,,..,,,,.,,..,..,,...,.,.,...,.,.,...,..,,...,..,,...,,,,,.,,,,..,..,,
#77G2BQL3XRGFMTY3M3FGXOOQLMFXAK7PWAH42X7CLDPIWB4V5DTJIQ37KCOB3VZLUQAASK4EWRFQY
#\\\|2TWWMNZBQOOIZEUXMHWNLQBD5OATFXKGM6OHNLAXUR4JSIEEYFV \ / AMOS7 \ YOURUM ::
#\[7]YFVJW2FS3BJCDYTQ2T3DW7PG7GZ2F3D6X266OVOLBVKYLJREQUDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
