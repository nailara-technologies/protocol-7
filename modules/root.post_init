# >:]

# name  = root.post_init
# descr = starts configured agents

my $module_reinitialization = shift;
return 0 if $module_reinitialization;

my @all_agents = keys %{<root.spawn_config.agents.config>};

my @agents = @{<root.spawn_config.agents.startup.spawn_order>};

#print Dumper(<root.spawn_config.agents.config>).join(', ',@all_agents)."\n";

<[root.set_up_agent_dependencies]>->(@all_agents);

foreach my $agent_name (@agents) {
    my $agent_config   = <root.spawn_config.agents.config>->{$agent_name};
    my $agent_id       = <[agent.get_id]>->($agent_name);
    my $obj_id         = <[agent.get_object_id]>->($agent_id);
    my $target_queue   = <[dependency.ok]>->($obj_id) ? 'queued' : 'depending';
    my $instance_count = $agent_config->{'spawn'}->{'instances'} || 1;
    delete $agent_config->{'spawn'} if !keys %{ $agent_config->{'spawn'} };

    while ( <[agent.is_enabled]>->($agent_name) and $instance_count-- ) {
        my $job_id = <[jobqueue.add_job]>->(
            {   'object_id'       => $obj_id,
                'job_callback'    => 'agent.spawn',
                'callback_params' => $agent_name,
                'target_queue'    => $target_queue
            }
        );
        <root.agent.autostart>->{$agent_name}->{'job'} = $job_id;
    }
}

use Data::Dumper qw(Dumper);
$Data::Dumper::Sortkeys = 1;

print Dumper( $data{'jobqueue'} ) if <system.verbosity> > 2;

0;
