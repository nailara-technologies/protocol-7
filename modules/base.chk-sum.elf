## [:< ##

# name  = base.chk-sum.elf
# descr = elf chk-sum of input value [ as numerical value ]

warn 'first parameter is undefined <{C1}>' and return undef
    if not defined $ARG[0];
warn 'content of scalar ref is undefined <{C1}>' and return undef
    if ref $ARG[0] eq qw| SCALAR | and not defined $ARG[0]->$*;
<[base.s_warn]>->( 'reference type %s not supported <{C1}>', ref( $ARG[0] ) )
    and return undef
    if length ref $ARG[0]
    and ref $ARG[0] ne qw| SCALAR |;

return sprintf qw| %09d |, 0
    if @ARG == 0
    or @ARG == 1 and not length( $ARG[0] // '' );

## join words to sentence ##
return <[chk-sum.elf.inline]>->( join ' ', @ARG )
    if ref( $ARG[0] ) ne qw| SCALAR |;

##  call by reference [ SCALAR ]  ##
return <[chk-sum.elf.inline]>->(@ARG);

#,,,,,,,.,,.,,,,,,,,,,,.,,,..,...,,..,...,...,..,,...,...,.,.,..,,..,,.,.,,.,,
#IZBI2FP527YCXEFFLEZR4OWJQDWPKK7PEW54S36OPJZW7YSJ5VKNURK7Z27P4OQXQJ4YVEQSJZ6TK
#\\\|AXPMJC7JLK5XXMW5W3CNLGY6K46EBV42CI2LU2D76UVNSXFSQ57 \ / AMOS7 \ YOURUM ::
#\[7]7XXSRB4TA555KWPKWOSBTADX5L7M3PIZF2SLEWDSIBOBNMIRLYCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
