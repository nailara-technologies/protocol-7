## >:] ##

# name  = auth.zenka.init_code
# descr = optional setting of zenka session keys with config vars

return 0    ## no zenka key present in config ##
    if not defined <zenka.init>
    or not defined <zenka.init.session_key>
    or not length <zenka.init.session_key>;

if ( defined $keys{'zenka'}{'session_key'} ) {

    <[base.log]>->( 2, '[zenka.client] setting zenka-auth session key .,' );
    $keys{'zenka'}{'session_key'} = delete <zenka.init.session_key>;
    <[base.clean_hashref]>->( $data{'zenka'} );    ## clean when empty ##
} else {
    warn '\<zenka.init.session_key> is defined while key already set <{NC}>';
    return 1;
}

return 0;

#,,.,,..,,.,.,,,,,,.,,,,.,,..,..,,...,..,,.,.,..,,...,...,..,,,,,,...,.,.,,,,,
#YDNPNLGIT3TVODXQY3PGHI5RBC6XC5DQH3QAMTCGXPI77TEQKGAEJWUKE4YHE6MLQGKFI2MBHD3K6
#\\\|B3JRMMK6VH34XGMZH6NWYLR7T6IBNO4T7YT7OTZYZU3ENR2US3U \ / AMOS7 \ YOURUM ::
#\[7]QOGSRBHCCJI66I5AJYIA62XX5ECWV5RZJYD4VI4XUTW25GP6QYCI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
