## [:< ##

# name  = auth.zenka.init_code
# descr = optional setting of zenka session keys with config vars

return 0    ## no zenka key present in config ##
    if not defined <zenka.init>
    or not defined <zenka.init.session_key>
    or not length <zenka.init.session_key>;

if ( defined $keys{'zenka'}{'session_key'} ) {

    <[base.log]>->( 2, '[zenka.client] setting zenka-auth session key .,' );
    $keys{'zenka'}{'session_key'} = delete <zenka.init.session_key>;
    <[base.clean_hashref]>->( $data{'zenka'} );    ## clean when empty ##
} else {
    warn '\<zenka.init.session_key> is defined while key already set <{NC}>';
    return 1;
}

return 0;

#,,.,,...,,.,,.,.,..,,.,,,...,,.,,.,.,.,.,.,.,..,,...,...,..,,..,,.,.,...,.,.,
#FF6DODE3BI7NYHLQVHFAVTVVIM74HAVUEJX5IBKGHY5A5LBD5KFWYSH4N7QVPKY7HWJSOE2YD35LQ
#\\\|7N7KT6AX4V7YFBJC7KMBVL6FZZYVTNMW3MUAYP5QORACD247FWF \ / AMOS7 \ YOURUM ::
#\[7]WB5MQSBOAEFVEQ3LF5SX3PA2GKAZAQ2FDOU5BVSSODM3XGIPN4AQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
