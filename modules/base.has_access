## [:< ##

# name  = base.has_access
# descr = verify if user has access to command

my $user = shift;
my $cmnd = shift;

return warn 'has_access : expected <user> parameter <{C1}>'
    if not defined $user or not length $user;
return warn 'has_access :expected <command> parameter <{C1}>'
    if not defined $cmnd or not length $cmnd;

return 1    ## <-- has access ###
    if defined <access.cmd.regex.usr>->{$user}
    and $cmnd =~ <access.cmd.regex.usr>->{$user}
    or defined <access.cmd.regex.usr>->{'*'}
    and $cmnd =~ <access.cmd.regex.usr>->{'*'};

return 0;    ## <-- no access ###

#,,,.,,.,,,,.,.,.,.,,,,,.,.,,,,..,...,,.,,...,..,,...,.,.,.,.,.,.,.,,,.,,,,,.,
#VKGROWVQL2ESG5BRET7Z5NWQCE5PCTRLWQRE2GLGG4HCCJ2RH2ACVDGUGNKEFUPZQZNIJCNX2R4XC
#\\\|V3HPJMXLQCYI64Z37FYS4YW5XCDFSC5OFAKVUB2ZHACRIW4RJGX \ / AMOS7 \ YOURUM ::
#\[7]3J23BXVDN3EJGG7WM6B2FF6AXEWTTAPAZQO5AZ4CR57YKWS4LWDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
