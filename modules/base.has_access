## [:< ##

# name  = base.has_access
# descr = verify if user has access to command

my $user = shift;
my $cmnd = shift;

return warn 'has_access : expected <user> parameter <{C1}>'
    if not defined $user or not length $user;
return warn 'has_access :expected <command> parameter <{C1}>'
    if not defined $cmnd or not length $cmnd;

return 1    ## <-- has access ###
    if defined <access.cmd.regex.usr>->{$user}
    and $cmnd =~ <access.cmd.regex.usr>->{$user}
    or defined <access.cmd.regex.usr>->{'*'}
    and $cmnd =~ <access.cmd.regex.usr>->{'*'};

return 0;    ## <-- no access ###

#,,,.,,.,,,,.,.,.,.,,,,,.,.,,,,..,...,,.,,...,..,,...,...,...,,,,,...,.,.,.,.,
#XD5XQHPWM3XHIFVQAGTRQUJJ77ROANNWMG2AA2IMBMW43Y2IAUMRRH3DXWZURNINMXQPBEBOXR2IA
#\\\|W33DC3YG3GU5B4QHA7UAUJF5MR7G7SQ3U7KGOBINEFB5WKR6GOW \ / AMOS7 \ YOURUM ::
#\[7]FBRCM7RS5PAYHOTLA72VWL33YI2DXEWBJ7Y4NBNG6LGFP2CIMSBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
