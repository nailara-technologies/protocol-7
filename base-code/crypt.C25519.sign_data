# >:]

# name = crypt.C25519.sign_data

my $data_ref = shift // \'';

my $key_vars = <[crypt.C25519.key_vars]>->(shift); # <-- <key_name> [optional]
my $key_name = $key_vars->{'key_name'};

die "expected scalar reference to payload data" if ref($data_ref) ne 'SCALAR';
die "found no key named '$key_name' [ cannot sign without ]"
    if not exists $KEYS{'C25519'}{$key_name}
    or ref( $KEYS{'C25519'}{$key_name} ) ne 'HASH'
    or ( keys( %{ $KEYS{'C25519'}{$key_name} } ) < 2
    and exists $KEYS{'C25519'}{$key_name}{'root'} );

die "no C25519 private key loaded for key name '$key_name'"
    if not defined $KEYS{'C25519'}{$key_name}{'secret'};

return Crypt::Ed25519::sign(
    ${$data_ref},
    $KEYS{'C25519'}{$key_name}{'public'},
    $KEYS{'C25519'}{$key_name}{'secret'}
);

#.............................................................................
#UDCQHCWVFOECSXZV74IBMLNIDPDVCWDB5V7KB6LYIL455R4JLULBPRF27J4LJXNCASZOLR7D6K36I
#::: 2676FEWYUAEHVCWSPD56MEU3NAWADRSYWFE3E5X2O3OLXCYJS3O :::: NAILARA AMOS :::
# :: UHE72BWTEH3ISWJIWSGLFUBPQ7NNUUDBH5HKD6JULYALYAO5YOCQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
