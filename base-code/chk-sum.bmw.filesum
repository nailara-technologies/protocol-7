## >:] ##

# name  = chk-sum.bmw.filesum
# note  = this will block on large files --> event based async. method ..,
# param = <bit-size> <file-path>

my $bit_size = shift;
return warn 'expected bit-size parameter <{C1}>'
    if not defined $bit_size or $bit_size !~ m,^(224|256|384|512)$,;
return warn 'expected file name parameter <{C1}>' if not my $fname = shift;
return warn sprintf( "file '%s' not found <{C1}>", $fname ) if not -f $fname;

my $bmw = <[chk-sum.bmw.ctx]>->($bit_size);

open( my $SUM_FD, qw| < |, $fname )
    or return warn sprintf "<< %s : %s >>", $fname,
    <[base.format_error]>->($OS_ERROR);

$bmw->addfile($SUM_FD);

close($SUM_FD);

return encode_b32r( $bmw->digest );

#,,..,,,.,.,,,...,..,,,,.,.,,,,,,,.,,,,.,,,..,..,,...,...,...,...,.,.,,..,.,.,
#7JQTCEOAU6QZW6RRSR5HHPIJ33GVRA2IU7S5YYQZMI5GKVXBWQ62FLRZV5GVMAQFBL7JPYYMHS5FG
#\\\|YN3MKLS6SYROLE5DKCHXORZ72J6FEFPZTGVWDMOUKB6MKV2NU2F \ / AMOS7 \ YOURUM ::
#\[7]YCIVXLCFQHUW4KRL7OJFGOIOCZ5HQVF4KT66NZ5O5U4HFVPMFYCI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
