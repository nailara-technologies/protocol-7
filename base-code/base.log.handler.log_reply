## >:] ##

# name  = base.log.handler.log_reply
# descr = handle responses from log zenka [ 'append' command ]

my $reply        = shift;
my $name         = $reply->{'params'}->{'name'};
my $buffer_count = @{ $data{'buffer'}{$name}{'data'} };
my $log_data     = <log.file>->{$name};
my $retry
    = ( $reply->{'cmd'} eq 'FALSE' and defined $reply->{'call_args'}->{'args'}
        and $reply->{'call_args'}->{'args'} =~ m|^command | ) ? 1 : 0;

if ( $reply->{'cmd'} eq qw| TRUE | ) {    # success =)

    $log_data->{'resend_delay'} = 0.113;

    if ( $log_data->{'next_index'} < $buffer_count ) {    # more to send .,
        $log_data->{'retry_timer'} = <[event.add_timer]>->(
            {   qw| handler | => qw| base.log.handler.send_timer |,
                qw| after   | => 0.07,
                qw| data    | => $name
            }
        );
    } else {
        $log_data->{'complete'} = 1;
    }
} elsif ($retry) {    ##  was not written  ##  <--  use notify_online  [LLL]

    $log_data->{'resend_delay'} *= $log_data->{'resend_slowdown'};

    $log_data->{'retry_timer'} = <[event.add_timer]>->(
        {   qw| handler | => qw| base.log.handler.send_timer |,
            qw| after   | => $log_data->{'resend_delay'},
            qw| data    | => $name
        }
    );

} else {    # giving up \ parameter mismatch
    ## <[base.log]>->( 0, "[ '$name' buffer ] log line $buffer_count lost" );
}

#,,..,,..,..,,..,,.,.,,,,,.,,,,..,..,,,.,,,.,,..,,...,...,..,,,.,,,,.,..,,..,,
#WPSLDBYD4TZ3UBMTFQYYJEPZMIZ62JNB62VM3NIJHLF5TKMHSZZDQ3IJ7HBLBL4IEETFCOUIO7TXW
#\\\|HSBTRVTQC7DBUM5UJOEHT4ZDBXPB5FQ4JAXINYITYNYKBP5MXO3 \ / AMOS7 \ YOURUM ::
#\[7]GZTZ6EJ6MV4M34QI5ZJETAKHGJF2GXKFSDM7CDFFKEERXUKRF4CQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
