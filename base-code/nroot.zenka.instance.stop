# >:]

# name  = nroot.zenka.instance.stop

my $instance_id = shift;

if ( exists <zenka.instance.shutdown>->{$instance_id} ) {
    <[base.log]>->(
        1,
        "instance $instance_id already shutting down, skipping stop command."
    );
    return;
}

my $instance = <nroot.zenka.instance>->{$instance_id};

return warn "instance.stop: instance id $instance_id does not exist."
    if not defined $instance;

if ( exists $instance->{'timer'}->{'verify_instance'} ) {
    $instance->{'timer'}->{'verify_instance'}->cancel;
    delete $instance->{'timer'}->{'verify_instance'};
    delete $instance->{'timer'} if !keys %{ $instance->{'timer'} };
}

my $zenka_name = $instance->{'zenka_name'};
my $job_id     = $instance->{'job_id'};

<[base.log]>->( 1, "terminating instance $instance_id ['$zenka_name'].," );

<zenka.instance.shutdown>->{$instance_id} = <[base.time]>->(5);

<[nroot.cancel_instance_timers]>->($instance_id);

delete <callback.session.closing_last> if $instance->{'is-cube'};

if ( my $process_id = $instance->{'process'}->{'id'} ) {
    <nroot.process.instance_cache>->{$process_id} = $instance_id;
    delete <nroot.child>->{$process_id};
    <[nroot.terminate_process]>->($process_id);
}

# <[zenka.change_status]>->( $instance_id, 'shutdown' );
<[jobqueue.remove_job]>->($job_id);

# undef $zenka_instance->{'output_buffer'}; # -> done in output_handler

#.............................................................................
#JHOQFY3U3WWOM5ME2J2F3JVE3AXX3UFWKTDGWHOPHBJRU3TFQY4YQ63AIKJCDNWLGG4THOBJ6VHKU
#::: Q6FP4XQFYIN3SJGUKV73WJHTF5VQVEJCHQLD3HCWOXUKKQYH6ID :::: NAILARA AMOS :::
# :: QD7GUN6VQFGSGD6U27LY6LGE5CPQOETA4WPFCQYKUFSYP33KXYDY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
