# >:]

# name       = ssl.server

my $key_file = $data{'system'}{'root_path'} . '/configuration/ssl.pem';
if ( !-f $key_file ) {
    <[base.log]>->( 0, "cert file '$key_file' not found" );
}
my $lsock = new IO::Socket::SSL(
    LocalAddr     => $_[0],
    LocalPort     => $_[1],
    Proto         => 'tcp',
    Listen        => 23,
    ReuseAddr     => 1,
    TimeOut       => 1,
    SSL_Server    => 1,
    SSL_key_file  => $key_file,
    SSL_cert_file => $key_file
);
if ( not defined $lsock ) {
    my $ssl_err = &IO::Socket::SSL::errstr();
    $ssl_err =~ s/\n.+//mg;
    <[base.log]>
        ->( 0, "ssl: unable to launch server $_[0]:$_[1] [$ssl_err]" );
    return -1;
} else {
    $lsock->listen()
        or <[base.log]>->( 0, "ssl.server: listen: $OS_ERROR" );
    <[base.log]>->( 1, "SSL server launched [$_[0]:$_[1]]" );
    return $lsock;
}

#.............................................................................
#TCZGCJH77DCA4KZ7ZSDEB3PSA7A2SPBUHMBIU5PMMAROWWYPY72G4PBCJYEGQELCQHH4CL27FM3VU
#::: MHNKCMTIZVQRYP3CWA533X5NVPU6SZDQRVE2HFOXKEH7JBP37E6 :::: NAILARA AMOS :::
# :: QWQUELXPLRLVJWG53YBARS5YROUZUQMHNYNFZUCLYCGVFNB2ZWCA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
