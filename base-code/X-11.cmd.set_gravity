# >:]

# name  = X-11.cmd.set_gravity
# param = <w_id> <direction>
# descr = move window to the specified screen border

my ( $id, $gravity ) = split( / +/, $$call{'args'}, 2 );

return { 'mode' => 'nak', 'data' => 'required x11 window id and <gravity>' }
    if not defined $id or not defined $gravity;
return { 'mode' => 'nak', 'data' => 'invalid <id> syntax' }
    if $id !~ /^\d+$/;
return {
    'mode' => 'nak',
    'data' =>
        "invalid gravity keyword, valid are: left, right, top and bottom"
    }
    if $gravity !~ /^(left|right|top|bottom)$/;

my $xtops = <X-11.WM>;
<[X-11.update_X11_WM]>;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'nak', 'data' => 'no such window' } if not defined $window;

my ( $w, $h, $x, $y ) = $window->geometry;
my ( $nx, $ny ) = ( "+$x", "+$y" );

if ( $gravity eq 'top' ) {
    $ny = '+0';
} elsif ( $gravity eq 'bottom' ) {
    $ny = '-0';
} elsif ( $gravity eq 'left' ) {
    $nx = '+0';
} elsif ( $gravity eq 'right' ) {
    $nx = '-0';
}

$window->move("${w}x${h}$nx$ny");
<[X-11.update_X11_WM]>;

return { 'mode' => 'ack', 'data' => "gravity set to '$gravity'" };

#.............................................................................
#LVNB3LR27Q2SVPOLCLLAC7M6VAWFNHU3DN7CIXVIB4PEC7UHLADKZQ2EZQMI5WN4V4GBU5W2JTNTM
#::: AKP37VNCONMXTGMCEBQ6WFQLTC4DJPEF5WQAK56BCFBIOQ42QG4 :::: NAILARA AMOS :::
# :: MWWLIVTC32VSVUMLLCATP3ZWMLGHL5ZSPF7NM6Q3SR2JZVOGXIAA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
