# >:]

# name  = plugin.auth.zenka
# descr = perform 'zenka' type authentication initiated \ enabled by v7 zenka

my $id     = $_[0]->w->data;
my $re     = <regex.base>;
my $input  = \$data{'session'}{$id}{'buffer'}{'input'};
my $output = \$data{'session'}{$id}{'buffer'}{'output'};

my $link_type = $data{'handle'}{ $data{'session'}{$id}{'handle'} }{'link'};

if (<[plugin.auth.zenka.no-keys-defined]>) {
    if ( $data{'session'}{$id}{'last-bytes-read'} ) {
        my $id_len = length($id);
        my $l      = $link_type eq qw| unix | ? 0 : 1;
        <[base.logs]>->( $l, "[%d] cannot authenticate zenka session", $id );
        $l++ if $l > 0;
        <[base.log]>->( $l, ':,. zenka user not expected [ no keys ] .,:' );
        my $keyless_user
            = $$input =~ m{^($re->{usr_str}|$re->{usr_subn_str}) }
            ? $LAST_PAREN_MATCH
            : undef;
        <[base.logs]>->( $l, ":., attempted: %-24s ,.:", "\"$keyless_user\"" )
            if defined $keyless_user;
        $$output .= "AUTH_ERROR :|\n";
    }
    return 2;
}

if ( $$input =~ s{^($re->{usr_str}|$re->{usr_subn_str}) (\S+)\n}{} ) {
    my ( $user, $key_hash ) = ( my $auth_name = $1, blake2b_384_b64($2) );
    my $subname = $user =~ s|\[($re->{subname})\]$|| ? $1 : '';

    if ( exists $KEYS{'auth'}{'zenka'}->{$user} ) {

        if ( $key_hash eq $KEYS{'auth'}{'zenka'}{$user} ) {

            if ( length($subname) ) {
                $data{'session'}{$id}{'subname'} = $subname;
                $data{'user'}{$user}{'subname'}{$subname}++;
            }

            delete $KEYS{'auth'}{'zenka'}{$user};
            $$output .= "AUTH_TRUE >:]\n";

            ## <[net.update.client_conf]>->($id);

            <[base.log]>->(
                1, "[$id] zenka '$auth_name' session authorized."
            );
            return ( 0, $user );
        } else {
            <[base.log]>->(
                0, "[$id] '$auth_name' [zenka] access denied [ key ]"
            );
            $$output .= "AUTH_ERROR :|\n";
            return 1;
        }
    } else {
        <[base.log]>->(
            0, "[$id] '$auth_name' [zenka] access denied [ usr ]"
        );
        $$output .= "AUTH_ERROR :|\n";
        return 1;
    }
} else {
    <[base.log]>->(
        0, "[$id] authentication protocol mismatch [ zenka ] `:|"
    );
    $$output .= ">:[\n";
    return 1;
}

#.............................................................................
#7SVN33PONCZTJKE3OAHTX47YTOSMIZF32UTO4MBQXG2F4TBK37IUGWWLZA7C5MTBDR253VK4ELNOE
#::: JREF2BFQFLICBOXMTTYDNONZHCP7DO7Z4GAYYWLV5XB6VMBWU56 :::: NAILARA AMOS :::
# :: IGTOK3KQUN5X2EMIX2LNAEK42RNU7OUQWT5BCLPLMU4375DUIIAY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
