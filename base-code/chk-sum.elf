# >:]

# name  = chk-sum.elf
# descr = elf chk-sum of input value [ as numerical value ]
# note  = becomes unreliable for input longer than 47 bytes

die 'expected single argument' if scalar @ARG > 1;
return sprintf( '%09d', 0 )    if not length( $ARG[0] // '' );

return <[chk-sum.elf.inline]>->( $ARG[0] ) if defined &inline_elf;

my $elf_chksum = Digest::Elf::elf( $ARG[0] );

return sprintf( '%09d', $elf_chksum )
    if $elf_chksum > 0 and $elf_chksum <= 999999999;

my $use_external_fallback = <chk-sum.elf.external.fallback-enabled> //= 0;

if ( not $use_external_fallback ) {
    if ( $elf_chksum == 0 ) {
        warn 'input data too long [ external fallback not enabled ]'
            . " ['$ARG[0]']";
    } else {
        warn 'elf checksum error [ external fallback not enabled ]'
            . " ['$ARG[0]'] == $elf_chksum";
    }

    return sprintf( '%09d', 0 );    ## returning 0 on errors ##

} else {
    my $external          = <chk-sum.elf.external>;
    my $limit             = $external->{'warn-after-count'} //= 4200;
    my $count             = ++$external->{'fallback-counter'};
    my $col_buffer_name   = $external->{'collect-buffer-name'};
    my $collect_offending = $external->{'collect-error-input'} //= 0;

    <[base.log]>->( 2, 'elf checksum error [ calling external command ]' );
    <[base.logs]>->( 2, ': %s', <[base.caller]> );
    if ($collect_offending) {
        <[base.buffer.add_line]>->( $col_buffer_name, $ARG[0] );
        my $collected_len = length( $ARG[0] );
        <[base.log]>->( 2, ": input data captured [ ${collected_len}B ]" );
    }
    <[base.logs]>->(
        0, ":. excessive elf checksum errors detected [ %04d ]", $count
    ) if $count % $limit == 0;

    return <[chk-sum.elf.external]>->( $ARG[0] );
}

#.............................................................................
#SH5YZCD4XNXEBN46IBDHYXQCYEERUZPUVIYGK6G4FZGGUDMCKRVCGTZVYP5RSA3FXIMVOQ2LOXOIU
#::: RVE5RAYEMNEY4WZWROAQEI3HBWSU3XH5OWYEKTESRIKXMAH75IV :::: NAILARA AMOS :::
# :: MHLV37BDZGJV7CU6X2BFTV25NRQWDRNKMX2IQNQT6REXW3UZO2AQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
