## >:] ##

# name  = base.event.add_timer
# descr = install a timer watcher

return undef
    if ref( $_[0] ) ne 'HASH'
    and warn 'base.event.add_timer: expected hash reference <{C1}>';
my $callback = ${ $_[0] }{'handler'};
return undef
    if not defined $callback
    and warn "base.event.add_timer: callback ['handler'] is missing <{C1}>";
return undef
    if not defined $code{$callback}
    and warn
    "base.event.add_timer: callback '$callback' does not exist <{C1}>";

my @event_time;
map {
    push( @event_time, ( $ARG => ${ $_[0] }{$ARG} ) )
        if defined ${ $_[0] }{$ARG}
} ( 'at', 'after' );

my $repeat
    = ( defined ${ $_[0] }{'interval'} and ${ $_[0] }{'interval'} ) ? 1 : 0;

my $timer;
eval {
    $timer = Event->timer(
        'reentrant' => ${ $_[0] }{'reentrant'} // 1,
        'repeat'    => ${ $_[0] }{'repeat'}    // $repeat,
        'prio'      => ${ $_[0] }{'prio'}      // 1,
        'async'     => ${ $_[0] }{'async'}     // 0,
        'desc'      => ${ $_[0] }{'desc'}      // $callback,
        'cb'        => sub { &{ $code{$callback} } },
        'time'      => ${ $_[0] }{'time'},
        'interval'  => ${ $_[0] }{'interval'},
        'hard'      => ${ $_[0] }{'hard'},
        'data'      => ${ $_[0] }{'data'},
        @event_time
    );
};

warn "add_timer: $EVAL_ERROR <{C}>" if $EVAL_ERROR or not defined $timer;

return $timer;

#,,,.,.,,,.,.,.,,,,.,,..,,...,,,,,,..,,..,..,,..,,...,...,.,.,,,.,...,,..,.,,,
#YHASTNYPAC6Q5BITT4RARLPU3UZBPR6LX7YACDIBUITTEYP4AS3MVK2OB7GPPNTNZUPMIRTDSOLWS
#\\\|EYVUSOCF5I65R6VBDDL7W4JFWTXOH5HMJDJ5G364YQQI7Q6T2OH \ / AMOS7 \ YOURUM ::
#\[7]BJ3WTA6OTNHIQRWKN4SQYPNNX3C37TKF2UNFT7OZBBXQHSU7XIAA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
