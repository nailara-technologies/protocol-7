# >:]

# name  = base.cmd.list
# param = [list_name]
# descr = display named lists with content

my $list_name = $call->{'args'};

my $list_nam_chars = qr|\w\d\-\_\.\+|;

if (    defined $list_name
    and $list_name =~ m|^[$list_nam_chars]+$|
    and defined $data{'list'}{$list_name} ) {

    my $list = $data{'list'}->{$list_name};

    $list->{'mask'} //= sprintf( qw| <key>:%s |, $list->{'key'} );

    return {
        qw| mode | => qw| size |,
        qw| data | => <[base.parser.list]>->(
            {   qw| var      | => $$list{'var'},
                qw| key      | => $$list{'key'},
                qw| sub_key  | => $$list{'sub_key'},
                qw| sort_key | => $$list{'sort_key'},
                qw| defaults | => $$list{'defaults'},
                qw| filters  | => $$list{'filters'},
                qw| align    | => $$list{'align'},
                qw| mask     | =>
                    [ split( m|\s+|, $data{'list'}{$list_name}{'mask'} ) ]
            }
        )
    };
} elsif ( not defined $list_name ) {
    return {
        qw| mode | => qw| size |,
        qw| data | => <[base.parser.list]>->(
            {   qw| var |   => qw| data |,
                qw| key |   => qw| list |,
                qw| mask |  => [qw| <key>:list_name descr:description |],
                qw| align | => { qw| list_name | => qw| right+5 | },
            }
        )
    };
} elsif ( defined $list_name and $list_name =~ m|([^$list_nam_chars]+)| ) {
    $$reply{'data'} = "characters in list name ['${^CAPTURE}[0]'] not valid";
} else {
    $$reply{'data'} = sprintf("no such list [ see 'list' command ]");
}

#.............................................................................
#2RJJ4C4B7GDNYUM3I4MZKAMDWXT7Q3H32F4AOAXHKEZGF6HJJJTBF74WU4BRNWJN5XDPENENFXWLK
#::: GL3JTQJ6CRXMYI276LEQGDOF7DUWEEGNS2JRJIZXJPMBLZRBUCI :::: NAILARA AMOS :::
# :: 2DDEKZBCLD6W4GYSFSVSGQK4W3DH4HQ6HRFA6HWKLKIBOEBVKOBY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
