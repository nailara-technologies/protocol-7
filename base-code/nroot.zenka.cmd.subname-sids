# >:]

# name  = nroot.zenka.cmd.subname-sids
# param = <pattern>
# descr = list cube sid[s] for given subname pattern

my $subname_query = $$call{'args'} // '';
return { 'mode' => 'false', 'data' => 'expected zenka subname pattern' }
    if !length($subname_query);

my @reply_list;
foreach my $instance_id ( keys %{<nroot.zenka.instance>} ) {
    my $instance = <nroot.zenka.instance>->{$instance_id};
    next
        if not exists $instance->{'subname'}
        or not exists $instance->{'cube_sid'}
        or $instance->{'subname'} !~ qr/$subname_query/;
    push(
        @reply_list,
        join( ' ',
            $instance->{'cube_sid'},
            "$instance->{zenka_name} \[ $instance->{subname} ]" )
    );
}

if (@reply_list) {
    return {
        'mode' => 'data',
        'data' => join( '', map {"$ARG\n"} @reply_list )
    };
} else {
    return {
        'mode' => 'false',
        'data' => "no match for subname pattern /$subname_query/"
    };
}

#.............................................................................
#WJ772Y3XQW5DJRF7PAUB3L5O5QC7UZDKUJKVBJYCMKCSO35LVFKOL6GY5F7UBVI2KSWTBJSVCDMD2
#::: VAAODZXQ3Q7NJLJFU5SQWHB3DTCKBO3YW6IQZTJXQK74HHIZOQB :::: NAILARA AMOS :::
# :: AQ6NQFY5FQ6ESZE25NTNUL6O7BUBCOJ7COOGQAM6LIBA5DG7EMAQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
