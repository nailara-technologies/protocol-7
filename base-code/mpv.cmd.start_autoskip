## >:] ##

# name  = mpv.cmd.start_autoskip
# param = <seconds>
# descr = set up timer to skip to next playlist entry

my $skip_interval = $$call{'args'};

return {
    'mode' => 'false',
    'data' => 'autoskip timer already active ('
        . <mpv.timer.autoskip>->interval
        . ' sec interval)'
    }
    if exists <mpv.timer.autoskip>;

return { 'mode' => 'false', 'data' => 'expected interval in seconds (>=1)' }
    if $skip_interval !~ /^\-?\d+(\.\d+)?$/ or $skip_interval < 1;

<[mpv.cmd.loop]>->( { 'args' => 'playlist' } );

<mpv.timer.autoskip> = <[event.add_timer]>->(
    {   'after'    => $skip_interval,
        'interval' => $skip_interval,
        'handler'  => 'mpv.callback.play_next',
        'repeat'   => 1
    }
);

return {
    'mode' => 'true',
    'data' => "timer started [$skip_interval seconds interval]"
};

#,,,,,,..,,.,,.,.,...,,,,,,..,,,,,...,...,..,,..,,...,...,...,.,.,,..,,,.,,,.,
#XJ3BMA7BTYQGI5DPWMYM6LEQVYCAX4OHE34MW55IWXSROIQP4NNEW6RODQDMCMBVOH3HVNOYW2RBI
#\\\|DZTKXMMG2HAX2CZGAKO2DIHYGWEJ4PNIYK3L7WII6FZHLEHXRXG \ / AMOS7 \ YOURUM ::
#\[7]U7XYB36AS774MGK4NPGQTBMBR55LHVV4B4BEIMNIDNAHXUWPJGDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
