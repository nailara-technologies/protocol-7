# >:]

# name  = base.file.broken_links

my @error_list;
my @check_dirs = @_;
die 'expected path name parameter[s]' if !@check_dirs;

foreach my $check_path (@check_dirs) {
    my $pth_str = $check_path;
    <[base.parser.ellipse_center]>->( \$pth_str, 17 );
    <[base.log]>->( 2, "checking symlink resolution [ '$pth_str' ] .," );
    if ( !-d $check_path or !-r $check_path ) {
        my $reason_str
            = -d $check_path ? 'unaccessable directory' : 'directory missing';
        <[base.log]>->( 0, ":. $reason_str : '$check_path' :" );
        warn '[ aborting symlink scan ] <{C1}>';
        push( @error_list, ( $reason_str => [$check_path] ) );
    }

    map { <[base.log]>->( 2, $ARG ) } ( ':', "::[ $check_path ]", ':' );

    <[file.all_links]>->( $check_path, \my %all_links );

    my $previous_cwd = Cwd::cwd();
    chdir($check_path) or warn "cwd : \l$OS_ERROR [ '$check_path' ]";

    my $err_reason = 'missing link target';

    foreach my $lnk_src ( <[base.reverse-sort]>->( \%all_links ) ) {
        my $lnk_dst      = $all_links{$lnk_src};
        my $abs_dst_path = abs_path($lnk_dst);   ## implicit symlink resolving

        if ( !length($abs_dst_path) or !-e $abs_dst_path ) {  # missing target

            <[base.log]>->( 0, ": [ missing ] '$lnk_dst' <-- '$lnk_src'" );
            <[base.log]>->( 2, ": ::[ $abs_dst_path ]" );

            push( @error_list,
                ( $err_reason => "'$lnk_dst' <-- '$lnk_src'" ) );
        } else {                                              # target exists
            <[base.parser.ellipse_center]>->( \$lnk_dst, 17 );
            <[base.parser.ellipse_center]>->( \$lnk_src, 14 );
            <[base.log]>->( 2, ": [ resolved ] '$lnk_dst' <-- '$lnk_src'" );
        }
    }
    chdir($previous_cwd) or die "[ chdir ] \l$OS_ERROR [ $previous_cwd ]";
    <[base.log]>->( 2, ":" );
}

return @error_list;

#.............................................................................
#JYAM4RHDZFCH3JWA2PA6DB5ADZOKMDN4XVBQAUUPCUWIWPHJSNOCPMGUTHBB7K4OJ5P3FCZDJKLWU
#::: EKTJFODVZONXBTTTTRAHDKPIDJX43IRGUW3V7C72XW7ISFOXTGK :::: NAILARA AMOS :::
# :: P6HWH3JXYPWIONDWISX4UCZHVNLDYDZMQFDI6NFZY3ACHIXEAEAY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
