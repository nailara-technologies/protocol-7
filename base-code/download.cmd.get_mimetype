## >:] ##

# name  = download.cmd.get_mimetype
# param = <url>
# descr = return reported mime-type for given url

my $content_type;
my $url = shift->{'args'} // '';

return { 'mode' => 'false', 'data' => 'url parameter expected' }
    if !length($url);

my $uagent = <download.obj.ua>;

$uagent->protocols_allowed( [ 'http', 'https' ] );
$uagent->agent("Mozilla/5.0");
$uagent->cookie_jar( {} );

return { 'mode' => 'false', 'data' => 'url parameter expected' }
    if not defined $url
    or !length($url)
    or $url !~ m|^http[s]?://|;

<[base.log]>->( 2, "checking content type for '$url'" );

my $method   = 'HEAD';
my $response = $uagent->head($url);

if ( $response->status_line =~ /^(4\d{2}|5\d{2})/ ) {
    <[base.log]>->( 2, "HEAD failed for '$url', trying GET request.." );
    $uagent->max_size(0);
    $method   = 'GET';
    $response = $uagent->get($url);
}

if ( $response->is_success ) {
    $content_type = $response->{'_headers'}->{'content-type'};
    $content_type //= 'unknown';
} else {
    my $err_reason = $response->status_line;
    return { 'mode' => 'false', 'data' => $err_reason };
}
my $mode = $content_type eq 'unknown' ? 'false' : 'true';
return { 'mode' => $mode, 'data' => $content_type };

#,,,.,,,.,.,,,,.,,.,.,,,,,,..,,,.,.,.,..,,,..,..,,...,...,..,,,,,,,..,.,,,.,.,
#GUNA6CG24T7GBVWFTUYAXIH2HE5HA3NKHC4S2V72WPU2TOR6WPR3CNC3PV2OSPQ3KKKVUJSKOMHSA
#\\\|QCOB6KYP5KJOUZRGUZQKGBFEFWSPVVBUYUI4FLDEPHZBCQTOACI \ / AMOS7 \ YOURUM ::
#\[7]5R6RT3HQJ7ASLLR2STVTVUD6PSJ7Y5VOI27A3F7K4P6NJVYNN6CA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
