# >:]

# name  = source.sign_data

my $src_data_ref = shift;
die 'expected source data scalar reference'
    if not defined $src_data_ref
    or ref($src_data_ref) ne 'SCALAR';

my $bit_size   = <source.chksum_bitsize>;
my $chksum_b32 = shift
    // <[chk-sum.bmw.strsum]>->( $bit_size, $$src_data_ref );
my $data_len = length($$src_data_ref);

<[base.log]>->( 2, sprintf ":-: signing %03d bytes of data .,", $data_len );

return encode_b32r(
    <[crypt.C25519.sign_data]>->(
        \join( "\n",
            $chksum_b32,
            utf8::is_utf8($$src_data_ref)
            ? Encode::encode_utf8($$src_data_ref)
            : $$src_data_ref )
    )
);

#.............................................................................
#KXGUY72JZXC67YEVWHS6GW5WDB5ANBWTHTH5RWMZD42DZ2PKLFOPOS5YQ6MDYJB3SH2A2BKWCAWHK
#::: YF2VG3BIW3GJG3X75QOUY75IQBVCIPGZRJL34EO3UZWMXWLQKE3 :::: NAILARA AMOS :::
# :: UA2UV7MECIVTM47P2VTYVEW2W5GLGKS3RCTA3KXUFS63WLPIDMDQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
