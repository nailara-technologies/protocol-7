# >:]

# name     = base.parser.command_list
# args     = <cmd_aref>, [section_name]
# return   = plain(formatted client list)
# descr    = format command list with short descriptions

my $cmd_aref  = shift;
my $section   = shift // 'cmd';    # [cmd|console]
my $max_len   = shift // 0;
my $reply_str = '';
my @commands;
my %param;

map {
    if ( not exists $data{'base'}{$section}{$ARG} ) {
        my $cli = " $section";
        $cli = '' if $section eq 'cmd';
        warn $cli . " cmd '$ARG' does not exist! <{C1}>";
    } else {
        my $cmd_str = $ARG;
        if ( exists $data{'base'}{'commands'}{$section}{$ARG}{'param'} ) {
            my $param_str
                = $data{'base'}{'commands'}{$section}{$ARG}{'param'};
            $cmd_str .= ' ' . $param_str;
            $param{$ARG} = $param_str;
        }
        $max_len = length($cmd_str) if length($cmd_str) > $max_len;
        push( @commands, $ARG );
    }
} @$cmd_aref;
$max_len += 2;

foreach my $cmd (@commands) {
    my $cmd_descr;
    my $call_cmd = $data{'base'}{$section}{$cmd};
    if ( exists $code{$call_cmd} and defined &{ $code{$call_cmd} } ) {
        if ( defined $data{'base'}{'commands'}{$section}{$cmd} ) {
            $cmd_descr = $data{'base'}{'commands'}{$section}{$cmd}{'descr'};
        }
        $cmd_descr = 'n/a' if not defined $cmd_descr or $cmd_descr eq '';
    } else {
        $cmd_descr = "<!> broken command <!> [ '$cmd' ]";
    }
    $cmd .= ' ' . $param{$cmd} if exists $param{$cmd};
    my $dots = $max_len - length($cmd);
    $reply_str .= "$cmd " . '_' x $dots . " $cmd_descr\n";
}

return ( \$reply_str, $max_len );

#.............................................................................
#DM3HDMQ52TZMKQC46TM4R3UWGZOMH4ICYFNTTNNJG5STFHSYEPXMFSVFMDQZN23FAUPU2PDJKY24I
#::: E432UGCL76XEPSRCXX5ODJN3LQNCYJ4P7E3O74PTZKYALFPEKLS :::: NAILARA AMOS :::
# :: UHNEMXW5TSEXWYBOOODEKGEHIQJA3BJFVRPHC75DX7IX2N4PUUCI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
