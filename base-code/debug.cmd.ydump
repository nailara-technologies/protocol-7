# >:]

# name  = debug.cmd.ydump
# param = [key_pattern]
# descr = dump internal program state

my $d_ref;
my $keyword = $$call{'args'} // '';
if ( length($keyword) and not eval {qr{$keyword}} ) {
    ( my $regex_err = lc($EVAL_ERROR) ) =~ s| in regex.+\n$||;
    return {
        'mode' => 'false',
        'data' => "expected a valid pattern .:[ $regex_err in regex ]::"
    };
} elsif ( length($keyword) ) {
    $d_ref = ${ <[base.resolve_key]>->($keyword) };
} else {
    $d_ref = \%data;
}

return {
    'mode' => 'false',
    'data' => "failed to resolve key '$keyword'"
    }
    if !length( ref($d_ref) );

$reply = {
    'mode' => qw| size |,
    'data' => "#:Y::['$keyword'].\n\n"
        . YAML::XS::Dump($d_ref)
        . "\n#:Y::.\n"
};

#.............................................................................
#YC5BWWZLVNJ33W2WCDQ2N6IUTT23CNYIOZ5K57KWAWNSKW6HFEEV4CRXNVUA4AFHL57DKLUA3VGCC
#::: KUDUMH2KMVN56IZO6ESVNWGBE6B6VEYY7KXNEMVWZEZHQWIFIGV :::: NAILARA AMOS :::
# :: YL3GXBP2QVU37NMJ26XRWRGG2O2FKSUFRFRJBEIQKGHLXS5X72CQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
