# >:]

# name  = p7.zenka.get_id
# descr = return zenka id for given name from setup
# note  = doesn't deal with multiple zenka setups for same name yet!

my $zenka_subname;
my $zenka_name = shift;

$zenka_subname = $1 if $zenka_name =~ s|\[([^\]]+)]$||;

die 'expected zenka name' if not defined $zenka_name or !length($zenka_name);

foreach my $id ( keys %{<p7.zenka.setup>} ) {
    my $setup_zenka = <p7.zenka.setup>->{$id}->{'name'};
    return $id if defined $setup_zenka and $setup_zenka eq $zenka_name;
}

<[base.log]>->( 2, "p7.zenka.get_id: no zenka '$zenka_name' found in setup" );
return undef;    # no such zenka

#.............................................................................
#J3KE6RAAW6YMSSYRL5PO3HXOQLQ6NAKPEG4CFB2MCOKZJH5BRBZA5CFX6SCYO7MIT5USTQQFUKSDO
#::: NFMAWSPVZZIOAFPQ4PHOGWW2LGU3VKLR7CA2JHFHN2SCTY53LJL :::: NAILARA AMOS :::
# :: YYWNAV3J3DOKHDCRAEOETHWEBDLTLTWZKHJLEHKI56NASIFR3EBA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
