# >:]

# name  = base.parser.txt_box
# descr = render an ascii frame around the supplied text and return the result

my $param     = shift;
my $title_str = shift // '';   # <-- optional title string as second parameter

my $t_ref = ref($param) eq 'SCALAR' ? $param : \$param;
my @lines = split( "\n", $$t_ref );

my $max_len   = max map {length} ( @lines, " $title_str " );
my $len_2     = $max_len + 5;               # include third parameter length ?
my $title_bar = '  ,' . '.' x $len_2 . ',';

if ( length($title_str) ) {
    substr(
        $title_bar,
        -7 - length($title_str),
        length($title_str) + 4,
        "[ $title_str ]"
    );
}

return join( "\n",
    '',
    $title_bar,
    '  :' . ' ' x $len_2 . ':',
    ( map { sprintf '  :   %-' . $max_len . "s  :", $ARG } sort @lines ),
    '  :' . ' ' x $len_2 . ':',
    '  :' . '.' x $len_2 . ":\n",
    '' );

#.............................................................................
#7KVAKTY3FZS5IGKDK4POF5EY2NB3LIJMZM3B4OGNX227LV2SHZOWOM5GJBWB63VUZJKLHK23UKBX2
#::: EJUA2KOVDVONSXO57FL5B7LOXRO7BIERVPUUJLE62FJM5WEFWOX :::: NAILARA AMOS :::
# :: VJTZD2H4HF4D4T6UA6XEBH5JG7JGQKT2HGKYPBFBI5X23EXFACBQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
