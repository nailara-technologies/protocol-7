# >:]

# name  = base.handler.ondemand_startup
# param = error reason [ FALSE reply ]

my $reply = shift;

my $v_id = $reply->{'params'}->{'v_id'};

if ( $reply->{'cmd'} eq 'FALSE' ) {
    delete <zenki.virtual>->{$v_id}->{'starting'};
    my $reason = $reply->{'call_args'}->{'args'};
    <[base.log]>->( 0, "ondemand zenka startup error [ $reason ]" );
    while ( my $element = shift @{ <zenki.virtual>->{$v_id}->{'queue'} } ) {
        my $sid    = $element->{'source_id'};
        my $cmd_id = $element->{'cmd_id'};
        next if not exists $data{'session'}{$sid};
        $data{'session'}{$sid}{'buffer'}{'output'}
            .= $cmd_id . "FALSE command unknown\n";
    }
} else {
    <[base.protocol-7.command.send.local]>->(
        {   'command'   => qw| v7.notify_online |,
            'call_args' => { 'args' => <zenki.virtual>->{$v_id}->{'name'} },
            'reply'     => {
                'handler' => 'base.zenki.ondemand.handler.startup_reply',
                'params'  => { 'v_id' => $v_id }
            }
        }
    );
}

#.............................................................................
#YKBUPCQJORRAT2UE5WFPBZTOKEGSF7AAXKLBY77TNO4KOMYUCKXLJEBJXWPZ2E2RED5YHFS5HEGLK
#::: QRRZSEEKFCGQPD5YVZK25FUOP5ZXXOZGOF3S5SMKRAPSOCHJW3M :::: NAILARA AMOS :::
# :: 2VHR3RAYXHDZJKUHCM57ERLOFNF3JZLO5ABIJ5TUSWG7BVNPMABA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
