## >:] ##

# name = discover.handler.incoming_packet

my $event = shift;
my $fh    = $event->w->fd;

my $key_name = qw| default |;

my $packet_buffer = '';
my $read_size     = 65507;
if ( my $bytes = <[base.s_read]>->( $fh, \$packet_buffer, $read_size ) ) {
    $event->w->again if $bytes == $read_size;
}

return if length $packet_buffer < 142;

# print "\n\n<----PACKET---->\n$packet_buffer<---/PACKET---->\n\n\n";

( my $packet_copy = $packet_buffer ) =~ s|:\S+\n$|:|s;

return if substr( $packet_buffer, 0, 3,  '' ) ne qw| [:< |;
return if substr( $packet_buffer, 0, 10, '' ) ne '|ANNOUNCE|';

chomp( my $peer_pub = substr( $packet_buffer, 0, 44, '' ) );

my $keys_matched = 0;
while ( $packet_buffer =~ s|^([^:\s]+):(\S+)\n|| ) {
    my ( $root_name, $root_sig ) = ( $1, $2 );
    next if not defined $KEYS{'C25519'}{$key_name}{'root'}{$root_name};
    return
        <[base.logs]>->( 2, ": '%s' root key signature [ERROR]", $root_name )
        if not Crypt::Ed25519::verify(
        sprintf( "%s\n", $peer_pub ),
        decode_b32r(
            $KEYS{'C25519'}{$key_name}{'root'}{$root_name}{'public'}
        ),
        decode_b32r($root_sig)
        );
    $keys_matched++;
}

return if not $keys_matched or substr( $packet_buffer, 0, 1, '' ) ne "\n";
return if $packet_buffer !~ s|\n(\d+):(\S{86})\n||s;
my ( $tstamp_str, $packet_sig ) = ( $1, $2 );
my $payload_len = length $packet_buffer;
return if not $payload_len;

return <[base.log]>->( 0, ": packet signature verification [ERROR]" )
    if not Crypt::Ed25519::verify( $packet_copy, decode_b32r($peer_pub),
    decode_b32r($packet_sig) );

<[base.logs]>->( 'received [valid] packet payload [%d bytes]', $payload_len );

## printf " \--< peer: %s >--\n<--payload-->\n<-/payload-->\n", $peer_pub,
##    $packet_buffer;

#,,,.,,..,...,...,,.,,,,.,,..,,,,,,..,..,,..,,..,,...,...,.,.,,,,,,,.,,,,,,..,
#UYDLHREPDL2A7TGWQXBDLSK72PIFULF7MFWBFKLJ6TG53D3M6GWPZWOADW66IFEJHUUHQMIADECWI
#\\\|GFATXQRTXRAWOF26REJXPESRENEWX2BUILHNS65CGKDIJON24L6 \ / AMOS7 \ YOURUM ::
#\[7]RJ4DQA6XHT7U4PI4WSDK4ROR6X6G27KSAPXPHTW24DKHYEXM7CCA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
