## >:] ##

# name  = system.admin_reboot_warning
# descr = sends out reboot warning if an administrator is logged in \ present

my $reboot_delay_seconds = shift // 13;
my $who_bin_path         = <[file.which]>->('who');
my $wall_bin_path        = <[file.which]>->('wall');
my $regular_reboot_delay = <system.X-11_crash.reboot_delay_secs> // 7;

if ( !length($wall_bin_path) ) {
    $reboot_delay_seconds = 0;
    warn "'wall' binary not found, skipping admin reboot delay ..,";
} else {
    if ( length($who_bin_path) and !length(qx| $who_bin_path -lu |) ) {
        $reboot_delay_seconds = 0;    ## <-- no admin present ###
        <[base.log]>->( 2, ': no admin present - reboot imminent .,' );
    } else {
        if ( !length($who_bin_path) ) {
            warn "'who' binary not found, warning and waiting regardless.,";
        } else {
            <[base.log]>->(
                0, 'system-admin is present << ! >> delaying host reboot ..,'
            );
        }
        <[base.log]>->(
            1, ":.. sending 'wall' message [ host reboot warning ]"
        );
        my $warn_secs = $regular_reboot_delay + $reboot_delay_seconds;
        <[base.log]>->( 2, ": asking 'v7' to broadcast warning .," );
        <[base.protocol-7.command.send.local]>->(
            {   'command'   => qw| cube.v7.reboot-warning |,
                'call_args' => { 'args' => "$warn_secs xorg crashed" }
            }
        );
    }
}

## additional reboot delay when admin is present ###
return $regular_reboot_delay + $reboot_delay_seconds;

#,,,,,.,,,,..,,,.,,..,.,.,,,.,,.,,,..,.,.,...,..,,...,...,,,.,,,,,..,,.,.,,,.,
#2YJMLWU2BKT7LJAOQ5ZECRKSYYOOC5JATIB2APHSCU4CSYZKSNPYABKEI2FBB52VSVEHBYHP4YHK2
#\\\|MQ5STIW3PRQSWZNMY3PDFHWMMZ7ZXMLDZMA2CY7E5HGGYPLRV4B \ / AMOS7 \ YOURUM ::
#\[7]ILSBFESL6XMT5MT7I4DNIRKYRU5N7OO6N5CW6WRF5K2QNIN2PUCA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
