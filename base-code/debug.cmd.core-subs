# >:]

# name  = debug.cmd.core-subs
# param = [pattern]
# descr = matching list of core-subroutines

my $pattern = $$call{'args'};
my $coderef = <base.core_subs>;

return {
    'mode' => 'data',
    'data' => "\n### list of loaded core-subroutines ###\n\n"
        . join( "\n", <[base.reverse-sort]>->($coderef) ) . "\n\n"
    }
    if not defined $pattern;

my $pattern_re;
eval { $pattern_re = qr|$pattern| };

if ($EVAL_ERROR) {
    ( my $reason = $EVAL_ERROR ) =~ s| at .+\n$||;
    return {
        'mode' => 'false',
        'data' => "invalid regular expression '$pattern' [ $reason ]"
    };
}

my @sub_list = grep {m|$pattern|} <[base.sort]>->($coderef);

return {
    'mode' => 'false',
    'data' => "no loaded subroutines match '$pattern'"
    }
    if !@sub_list;

return {
    'mode' => 'data',
    'data' => "\n# .: core-subroutines matching '$pattern' :.\n\n"
        . join( "\n", @sub_list ) . "\n\n"
    }

#.............................................................................
#GAN6C5TVS2NFOCOH3OA66JXE6GXFKDAKHBOKUYN2BAXOOR7C6WCOGLHNC7JKIPDXWUIUBM67PXMQS
#::: KEC4Y6CRZTDCFLNFVJLI5K4LUPOBPT5Q32V2CW6AMMYHMQ25DKA :::: NAILARA AMOS :::
# :: PI2FXYJ7POMKBMMVL7PM54VXW4P3BQY5RBNQWDQG4MWG3FGF2WAQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
