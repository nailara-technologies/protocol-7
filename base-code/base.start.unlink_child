## >:] ##

# name = base.start.unlink_child

<system.path.perl_bin> //= <[base.get_path.perl_exec]>;

if ( not defined <process.unlink_child.w_fh> and ( $EUID == 0 or $UID == 0 ) )
{
    my $zenka_name_chars = qr|0-9A-Za-z_\-|;
    <[base.log]>->( 2, ': : starting unlink-child ..,' );
    ( my $zenka_name = <system.zenka.name> ) =~ s|[^$zenka_name_chars]+||g;

    my $child_code = <<~ "EOT";
    use v5.24; use strict; use warnings; use English;
    map { \$SIG{\$ARG} = qw| IGNORE | } qw| INT TERM QUIT |;
    \$PROGRAM_NAME = q|$zenka_name-<root>-unlink-child|;
    foreach my \$file (<STDIN>){ chomp(\$file); unlink(\$file) if -e \$file }
    EOT

    <process.unlink_child.pid>
        = open2( undef, <process.unlink_child.w_fh>, <system.path.perl_bin>,
        qw| -e |, $child_code )
        || die sprintf( 'unable to start perl unlink child process [ %s ]',
        <[base.format_error]>->($OS_ERROR) );
    <[base.logs]>->(
        2, qq|: started unlink child [pid=%s]|,
        <process.unlink_child.pid>
    );

    return <process.unlink_child.w_fh>;
}

#,,,.,..,,,..,.,,,,..,..,,,,,,,..,,.,,..,,..,,..,,...,...,,.,,...,..,,,,,,,,.,
#IMS34AQYPZO5XUQNSYC24S5SYDDDNBWEAL3OXH2XFUV7FGJ4GBELONNYLE6MXTRN5HVBOJVPAEQ5O
#\\\|KHBEPN73FTIQZH2T3VQ3F2NDPYEB4ZK2LFXGIM5ID3LVO66SQW6 \ / AMOS7 \ YOURUM ::
#\[7]OOWLR6WH3KBU7GB3NHMKAYJ5BOTZALT6W55TPTVB2H647M5SWMDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
