# >:]

# name    = plugin.auth.pwd
# args    = int(session id)
# return  = str(user name) (success), undef [error]

my $id = $_[0]->w->data;
my $re = <regex.base>;

my $input  = \$data{'session'}{$id}{'buffer'}{'input'};
my $output = \$data{'session'}{$id}{'buffer'}{'output'};

if ( $$input =~ s|^auth ($re->{usr_str}) (\S+)\n|| ) {

    if ( <[auth.pwd.success]>->( $1, $2 ) ) {
        $$output .= "AUTH_TRUE >:]\n";
        <[base.log]>->( 1, "[$id] user session authorized to '$1'" );
        return ( 0, $1 );
    } else {
        $$output .= "AUTH_ERROR `:|\n";
        <[base.log]>->( 0, "[$id] [ auth pwd ] access denied to user '$1'" );
        return 2;
    }
} elsif ( $$input =~ m|\n| ) {
    $$output .= ">:[\n";
    <[base.log]>->( 0, "[$id] authentication protocol mismatch [ pwd ] >:[" );
} else {
    return 1;
}

return 2;

#.............................................................................
#LRUV6FDCKPTO6V5OO4UUNICAESNN4BO642FZYKU7MOZF2SJMXQ7OFLMPLU5LOMD5KDBOMKUX2G4PM
#::: 7V2NQD4VYIGRH5HU5RLJ5IQM43OIXNDOWND62UKKOI6JQ5JBDYP :::: NAILARA AMOS :::
# :: CFYIO5S3YT2TJQUVEU7U7BVGSBVS2EXQWKTGVXRVXPRMIC3GMYCY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
