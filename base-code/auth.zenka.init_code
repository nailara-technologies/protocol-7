## >:] ##

# name  = auth.zenka.init_code
# descr = optional setting of zenka session keys with config vars

return 0    ## no zenka key present in config ##
    if not defined <zenka.init>
    or not defined <zenka.init.session_key>
    or not length <zenka.init.session_key>;

if ( defined $KEYS{'zenka'}{'session_key'} ) {

    <[base.log]>->( 2, '[zenka.client] setting zenka-auth session key .,' );
    $KEYS{'zenka'}{'session_key'} = delete <zenka.init.session_key>;
    <[base.clean_hashref]>->( $data{'zenka'} );    ## clean when empty ##
} else {
    warn '\<zenka.init.session_key> is defined while key already set <{NC}>';
    return 1;
}

return 0;

#,,.,,...,,..,.,.,,,.,,,,,,.,,.,.,.,.,.,,,..,,..,,...,...,,..,.,.,,..,,,.,,,.,
#K4QGZF2KU3YTTOAHYD3OP3CBQUHUM2W6CB2J7TVMAXHJXX6Q4RQWGCDFPPSQVBKZQYC7V5YIWCPEQ
#\\\|HUVD5BJQVH5W3BKYTR3ERA7GGR2F3TK3NYBJAXGTDW65YKBMN5J \ / AMOS7 \ YOURUM ::
#\[7]HC5L3ZLF2HJ5GB4TZPDC7IM3VIMTSQH2F3IB3APPA4SOLD7SCWBQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
