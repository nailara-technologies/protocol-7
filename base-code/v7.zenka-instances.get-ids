# >:]

# name  = v7.zenka-instances.get-ids
# descr = matching instance ids for zenki name[s]

my $names = shift // '';
return warn 'zenka name param[s] expected <{C1}>' if not length $names;

my @instance_ids;
my $not_found    = 0;
my $found_set_up = 0;
my $unknown_name;
foreach my $param_str ( split m| +|, $names ) {
    my $zenka_name = $param_str;

    my $zenka_subname;
    my $re_sn = <regex.base.subname>;
    $zenka_subname = ${^CAPTURE}[0] if $zenka_name =~ s|\[($re_sn)\]$||;

    my $zenka_id = <[zenka.get_id]>->($zenka_name);

    if ( defined $zenka_id ) { $found_set_up++ }
    else { $not_found++; $unknown_name //= $zenka_name; next }
    foreach my $iid (<[v7.instance_ids]>) {

        next
            if defined $zenka_subname
            and not exists <v7.zenka.instance>->{$iid}->{'subname'}
            or defined $zenka_subname
            and exists <v7.zenka.instance>->{$iid}->{'subname'}
            and <v7.zenka.instance>->{$iid}->{'subname'} ne $zenka_subname;

        push( @instance_ids, $iid )
            if <v7.zenka.instance>->{$iid}->{'zenka_id'} == $zenka_id;
    }
}

return {
    'ids'          => \@instance_ids,
    'found'        => $found_set_up,
    'not-found'    => $not_found,
    'unknown-name' => $unknown_name
    }
    if not wantarray;

return @instance_ids;    ## list context ##

#.............................................................................
#KJCTD5YTHD3SW6E2V45GBFTEH3DZNEMAWHRBXKL6YJLPMJCUUGM4NM6B3PQXYUNOL7XRULUPKR7OG
#::: ZGPQIJFVL4IJE4IEU4JDW5FNVOQ7HUBDBW5K2BS2GXQO24ZOJZN :::: NAILARA AMOS :::
# :: 2HVXB4PPXJN4PDVSTR5M3D6F3EXVPOZMZAFA36LBNXBKBSECEQCY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
