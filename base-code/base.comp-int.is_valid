## >:] ##

# name  = base.comp-int.is_valid
# descr = assert validity of BER compressert integer [ pack template 'w' ]

my $compressed_int = shift;

warn 'expected compressed integer parameter <{C1}>'
    if not length( $compressed_int // '' );

my @azurum_byte = split( '', $compressed_int );
my $zulum_byte  = pop(@azurum_byte);

foreach my $azurum (@azurum_byte) {
    return 0 if not( ord $azurum & 0b10000000 );    ## first bit must be 1 ##
}

return 0 if ord($zulum_byte) & 0b10000000;          ## first bit 0 == valid ##

return 1;    ## assertion complete \ encoding valid ##

#,,.,,.,,,,,,,,,.,..,,..,,,.,,,,.,,..,.,,,..,,..,,...,...,...,..,,,,,,...,.,.,
#HJ5IDMEPDHEVITQGC2EX7L5DBKMLQ7ZU2MFSNOZRXKLWTUC5PSGOROVTXR6U27ZK67T3UKGGWHEZE
#\\\|MOOYQ5LU5EM2S524NQYQ5XMCR5F74W7L5PXKLCTIUC4DZAJVDI4 \ / AMOS7 \ YOURUM ::
#\[7]WFFCDITJC6KFKGQWFCE6JWAX7CXLMGMQ3QKVV37BSZIXZPTSUWBY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
