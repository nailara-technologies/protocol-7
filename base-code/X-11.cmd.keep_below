## >:] ##

# name  = X-11.cmd.keep_below
# param = <w_id>
# descr = keep specified window mapped on bottom

my $X         = <X-11.obj>;
my $window_id = $$call{'args'};

return { 'mode' => qw| false |, 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => qw| false |, 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <X-11.WM>;
<[X-11.update_X11_WM]>;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => qw| false |, 'data' => 'no such window' }
    if not defined $window;

eval {
    for ( 1 .. 2 ) {    # <-- workaround (ignored state requests)
        X11::Protocol::WM::change_net_wm_state( $X, $window_id, "remove",
            "ABOVE" );
        X11::Protocol::WM::change_net_wm_state( $X, $window_id, "add",
            "BELOW" );
    }
};
return {
    'mode' => qw| false |,
    'data' => "unable to set window state 'below'"
    }
    if $EVAL_ERROR;
return { 'mode' => qw| true |, 'data' => "set window state 'below'" };

#,,.,,..,,,,.,...,,..,.,.,.,,,,,,,,,.,...,.,,,..,,...,...,,..,...,..,,...,,,,,
#D563GGTADEMZAWD7BCTIAGDT6P5DOUWYLXXSRCLVIPWVTSWTAF5G7BZAO4NHUXKTEHK3ZUUPZ7GFM
#\\\|PNLPJADBVS7LZTCIILNSQR7PLJUE3HSWVB6IJD3GJGZCKXRAFWW \ / AMOS7 \ YOURUM ::
#\[7]YKBGZZMRI74XTES2MSWXMNCTT5PSPEG6CZ5BV72DINIVWS3HUOCY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
