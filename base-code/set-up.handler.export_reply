# >:]

# name = set-up.handler.export_reply

my $reply       = shift;
my $reply_id    = $reply->{'params'}->{'reply_id'};
my $zenka_name  = $reply->{'params'}->{'zenka_name'};
my $config_type = $reply->{'params'}->{'config_type'};
my $export_dir  = <set-up.json.export_dir>;
$config_type //= qw| config |;
my $export_file = "$zenka_name.$config_type.json";
my $export_path = "$export_dir/$export_file";

my $mode      = qw| false |;
my $reply_str = $reply->{'call_args'}->{'args'};

if (    $reply->{'cmd'} eq qw| FALSE |
    and $reply->{'call_args'}->{'args'} =~ m|^command | ) {
    $reply_str
        = $zenka_name eq qw| cube |
        ? 'cube zenka refused reply'
        : "zenka '$zenka_name' not online [ or refusing reply ]";
} elsif ( $reply->{'cmd'} eq qw| SIZE | ) {
    $mode      = 'true';
    $reply_str = "config written to export directory ('$export_file')";
    undef $EVAL_ERROR;
    eval { <[file.put]>->( $export_path, $reply->{'data'} ) };
    if ( defined $EVAL_ERROR and $EVAL_ERROR ) {
        $EVAL_ERROR =~ s| at base.file.put.+\n$||;
        <[base.logs]>->(
            0,            "config export to '%s' failed. [%s]",
            $export_file, <[base.format_error]>->($EVAL_ERROR)
        );
        $EVAL_ERROR =~ s|^[^:]+: ||;
        $mode      = qw| false |;
        $reply_str = sprintf 'config export failed [ error writing : %s ]',
            <[base.format_error]>->($EVAL_ERROR);
    }
}

<[base.callback.cmd_reply]>->(
    $reply_id, { qw| mode | => $mode, qw| data | => $reply_str }
);

#.............................................................................
#LKVK62H7MPDE6TZSQ6LWERESZBNXLF46PZKCTPHHJDZ2G5CESEU3CT3U54NAQ2RGFGNZJ7PJJ22OI
#::: ZRUY23MPFJJAU4OAUP7N24OLVGXQKMKSKF5PBVEF3IN7UBO6NP5 :::: NAILARA AMOS :::
# :: JLTW3MVYWYA3VGVI7LFY3HQB3IYSRWNP4EHACHVBVA24YCX5QABA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
