## >:] ##

# name  = base.put_file

my $file_name = shift;

<[base.log]>->( 2, "will overwrite existing file \'$file_name\'.." )
    if -f $file_name;

if ( !open( my $file_fh, ">$file_name" ) ) {
    <[base.log]>->(
        0, 'unable to open file ' . "'$file_name' for writing [ \l$OS_ERROR ]"
    );
    return undef;
} else {
    my $bytes_written = 0;
    foreach my $content (@_) {
        if ( ref($content) eq 'SCALAR' ) {
            my $bytes_to_write = length($$content);
            while (
                $bytes_written < $bytes_to_write
                and my $bytes += <[base.s_write]>->(
                    $file_fh, $$content, $bytes_to_write, $bytes_written
                )
            ) {
                $bytes_written += $bytes;
            }
        } else {
            print {$file_fh} $content;
            $bytes_written += length($content);
        }
    }
    <[base.log]>->( 2, "wrote $bytes_written bytes to \'$file_name\'" );
    return $bytes_written;
}

#,,.,,.,.,...,,,.,,,,,,,,,.,,,...,,,,,.,,,,.,,..,,...,...,,..,...,.,,,...,...,
#B3ECWL6TJS3KUMLEYJMIUB3SLPZ6XPP3KIOQETPMBQ3AE62ZDTUHFI6XW4CVA55HBRDHUHLRJDW5U
#\\\|OTF3UUJOBER7KYMTCNTKAL26TDGON3ASDGACMTKOCOQCOGNO7C7 \ / AMOS7 \ YOURUM ::
#\[7]4MRKEPDYDDWPQK6JUGVNYHLAAMQF2WOK36PPECY255YLEQMUEGBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
