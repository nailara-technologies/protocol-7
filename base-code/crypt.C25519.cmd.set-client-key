## >:] ##

# name  = crypt.C25519.cmd.set-client-key
# param = <pub_key_B32>
# descr = set client C25519 public key [BASE32 encoded]

my $params  = shift;
my $key_str = $params->{'args'};
my $sid     = $params->{'session_id'};
my $session = $data{'session'}{$sid};
my $base_re = <regex.base.base_32>;

return {
    'mode' => 'false',
    'data' => 'expected [ RFC 4648 base32 encoded ] C25519 public key'
    }
    if not defined $key_str
    or length($key_str) != 52
    or $key_str !~ m|^$base_re$|;

$session->{'client_key'} = decode_b32r($key_str);

if ( length( $session->{'client_key'} // '' ) != 32 ) {
    delete $session->{'client_key'};
    return {
        'mode' => 'false',
        'data' => 'decoding not successful [ BASE32 expected ]'
            . length( $session->{'client_key'} // '' )
    };
}

my $base_ntime  = <[base.ntime.b32]>->(3);
my $key_sig_str = <[crypt.C25519.sign_data]>->( \"[$base_ntime|$key_str]" );

return {
    'mode' => 'true',
    'data' => '[' . join( '|', $base_ntime, encode_b32r($key_sig_str) ) . ']'
};

#,,.,,..,,,,.,,,.,,,.,,..,,..,...,.,.,..,,..,,..,,...,...,,.,,.,.,.,,,.,,,.,,,
#73VXCWQ2STQQARLAOWKHBZ22OGF3RPW6H3CJGVDGTEV4EOFJVHJJJI32I3SMLPC2ZTXCXQ6POS442
#\\\|DPLUXYY24OVYHJLAMCBHZHW2ODSK4BFDRX4XG3MM7XQZGHF6YRB \ / AMOS7 \ YOURUM ::
#\[7]LREFOJVTANS3DT5QMZ7LBC6WIYXQDK4YI3QVWPU4Z4ZLFQPL6UCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
