# >:]

# name  = download.cmd.get_file
# param = <url>
# descr = download file from specified url

my $url = $$call{'args'} // '';

return { 'mode' => 'false', 'data' => 'expected url parameter' }
    if !length($url);

my $download_dir  = <download.cfg.download_path>;
my $url_md5u_hash = <[chk-sum.md5.b64u]>->($url);
( my $target_dir = "$download_dir/$url_md5u_hash" ) =~ s|//|/|g;
my $temp_filename = 'part.' . $url_md5u_hash;
my $file_path     = "$target_dir/$temp_filename";

return { 'mode' => 'true', 'data' => $url } if defined $url and -f $url;
return { 'mode' => 'true', 'data' => $1 }
    if defined $url
    and $url =~ m{^file://(.+)$}
    and -f $1;

if ( defined $url
    and ( $url =~ m{^(file://)?(/.+)$} and !-f $2 or $url eq 'file://' ) ) {
    return { 'mode' => 'false', 'data' => 'file not found' };
}

<[base.log]>->( 1, ".: $url" );

if ( !-d $target_dir ) {
    my ( undef, undef, $uid, $gid ) = getpwnam(<system.amos-zenka-user>)
        or die "user '" . <system.amos-zenka-user> . "' not in passwd file";
    <[base.log]>->( 2, "creating target directory '$target_dir'.." );
    make_path( $target_dir,
        { 'mode' => 0750, 'uid' => $uid, 'group' => $gid } )
        or warn
        "unable to create target directory '$target_dir' [ \l$OS_ERROR ]";
}

unlink($file_path) if -f $file_path;

my $response;
eval {
    $response = <download.obj.ua>->get( $url, ':content_file' => $file_path );
};

if ( not defined $response or !$response->is_success ) {
    my $err_msg = 'download error';
    if ( defined $response ) {
        $err_msg .= ' [' . $response->status_line . ']';
    } else {
        $err_msg .= ' (' . $url . ')';
    }
    <[base.log]>->( 0, $err_msg );
    return {
        'mode' => 'false',
        'data' => $err_msg
    };
}

( my $filename = $response->filename // 'index.html' ) =~ s|^.*/||g;
$filename =~ s| +|_|g;
my $target_path = "$target_dir/$filename";
rename( $file_path, $target_path ) or die "< rename > \l$OS_ERROR";

my $bytes_downloaded = File::stat::stat($target_path)->size;
<[base.log]>->( 1, "ok <$bytes_downloaded bytes> $url_md5u_hash" );

return { 'mode' => 'true', 'data' => $target_path };

#.............................................................................
#VVAHJWK7X7SZX2FG4QX24P4735XSNRLDZY36B56FMG2WQPTPS7Y443U75WOZ2HQULP2ZPCULPXULW
#::: B4T73HX3OXP5ABMJF3XLTO433JD62KWGJGA5QPJHGLZTACK5BAW :::: NAILARA AMOS :::
# :: DCQ6NVCMOTRAGZNSPNKC2LPLDQF4TFWJGWKZ4IQ7RINHX7NMD6AY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
