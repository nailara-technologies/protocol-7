## >:] ##

# name  = base.event.add_signal
# descr = assigns new signal handler and cancels old one if it existed

my $signal  = $_[0]->{'signal'};
my $handler = $_[0]->{'handler'};

die "nonexistent callback '$handler' configured"
    if not defined $code{$handler};

<watcher.signal> //= {};

<watcher.signal>->{$signal}->cancel if exists <watcher.signal>->{$signal};

eval {
    <watcher.signal>->{$signal} = Event->signal(
        'signal' => $signal,
        'cb'     => sub { &{ $code{$handler} } },
        'desc'   => "signal handler [$signal]",
        'prio'   => 0
    );
};

if ($EVAL_ERROR) {
    delete <watcher.signal>->{$signal};
    ( my $reason = "$EVAL_ERROR" ) =~ s| at .+$|<{C}>|;
    warn $reason;
    return undef;
}

return <watcher.signal>->{$signal};

#,,..,,.,,..,,,.,,,.,,,,.,.,,,..,,,,,,,..,,..,..,,...,...,...,.,,,.,,,.,,,,..,
#CJF56N73BQ43DO5IYTTHM5TVIKPELJXYC3V6BJMNN6X7S22DZGO6BOQEQ6B7UA27EID5M6HDKSRI2
#\\\|LAQLMVNUGAM4LGX52UADB6ZSAVVPCVWMXFXPXOEKPMAODSNW4XP \ / AMOS7 \ YOURUM ::
#\[7]EASSGJ77XV7VXXXGMIRLCQMYZ2KDEV64K73QQWEE66AOM3MECEBQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
