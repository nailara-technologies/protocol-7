# >:]

# name  = X-11.handler.server_output
# descr = reads output from X-11 process

<v7.patterns.zenka_output> //= {};

my $event   = shift->w;
my $read_fh = $event->fd;
my $server  = $event->data;
my $bin     = $server->{'bin'};
my $pid     = $server->{'pid'};

<X-11.output_buffer> //= '';

my $read_bytes = <[base.s_read]>->(
    $read_fh, \$data{'X-11'}{'output_buffer'},
    4096,     length(<X-11.output_buffer>)
);
if ( not defined $read_bytes or $read_bytes == 0 )
{    # [ filehandle exception ]
    $event->cancel;
    close($read_fh);
    <[base.log]>->( 1, "$bin-server [ PID $pid ] filehandle closed .," );
    kill( 9, $pid );    ##  <--  making sure .,
    my $err_str
        = defined <X-11.first_error>
        ? ': "' . <X-11.first_error> . '"'
        : ' unexpectedly. [ unknown reason ]';
    <[base.log]>->( 0, "$bin-server shut down" . $err_str );
    <[base.log]>->( 1, "done." );
    exit(2);
}

while ( <X-11.output_buffer> =~ s|^([^\n]*)\n||s ) {
    my $output_line = $1;
    <X-11.first_error> = $1
        if $output_line =~ m|\(EE\) +(.+)$|
        and not defined <X-11.first_error>;
    $output_line =~ s|\r||sg;
    <[base.log]>->( 2, "< $bin > " . $output_line );

    # LLL: terminate server here ?
}

#.............................................................................
#RUAKJUGELHZ2RAET4MR4W63RV3OMTZZVFCHBATQQ53ETITCP3FL4GOTYUOJU74ETSGRLQWZVKYB6G
#::: OHNLJR3S5ONTLFQWHGD4UDBPRNJC4N3V544AM3I4WBQ43ADHUPQ :::: NAILARA AMOS :::
# :: R24IROEGUHAZDPEDJXDRODWEDAQLN7UIXL55NBGII5X7Y6M4G4AY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
