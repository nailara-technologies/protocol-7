# >:]

# name = ssl.cmd.read_data

local ( $id, $com_id, $name, $mode, $count ) = @_;
if ( -S $buffer{'link'}{$name}{'handle'} ) {
    if ( $mode eq 'bytes' ) {
        my $buffer;
        if (<[base.s_read]>->(
                $buffer{'link'}{$name}{'handle'},
                \$buffer, $count
            )
        ) {
            <[base.log]>->( 0, "length: " . length($buffer) );
            <[net.raw_out]>->( $buffer, $com_id );
            <[base.log]>->( 1, "ok - wrote" );
            $buffer{'link'}{$name}{'handle'}->flush();
            <[base.log]>->( 1, "ok - flushed" );
        } else {
            <[net.false]>->( "link terminated", $_[1] );
            <[base.log]>->( 0, "link '$name' terminated" );
            $buffer{'link'}{$name}{'status'} = 'closed';
        }
    }
} else {
    <[net.false]>->( "not a valid link", $_[1] );
    <[base.log]>->( 0, "[$id] read_data: not a valid link '$name'" );
}

#.............................................................................
#PPUDD7FMGHFOV2PIFVNNHB6ZG3XPZ5OWQT23AN2RLRWAV7KAGTQSVE47KQABMEEMDDWP57SQWU2EA
#::: VNEYHS2OKPEX6EJDE7CCPZFGT2UB5GNS3SJWE4SBGZE6IPDTGRH :::: NAILARA AMOS :::
# :: JLDXWIWCGMUZ3JZKWPTRGWJCNNQ74HOOHJI74SQAGWWZVUKFTQBI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
