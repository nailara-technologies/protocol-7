## >:] ##

# name  = tile-groups.cmd.get-layer
# param = <tile|zenka>
# descr = return configured layer for tile or zenka

return { 'mode' => qw| false |, 'data' => 'expected zenka name' }
    if not defined $$call{'args'}
    or $$call{'args'} !~ /^(\S+)( +(\S+))?$/;

my ( $source_zenka, $zenka_name ) = ( $1, $3 );
$source_zenka =~ s|^.+\.||g;
$zenka_name = $source_zenka if not defined $zenka_name;

if ( $zenka_name =~ /^\[([^\]]+)\]$/ ) {    # <-- only subname given
    my $subname = $1;
    my %zenka_names;
    map { $zenka_names{$ARG} = 1 if $ARG =~ /\[$subname\]$/ }
        keys %{<tile-groups.layers>};
    my $err_msg;
    if ( !keys(%zenka_names) ) {
        $err_msg = "no zenka matches subname '$subname'";
    } elsif ( keys(%zenka_names) > 1 ) {
        $err_msg = 'multiple zenki are matching, zenka name required';
    }
    return { 'mode' => qw| false |, 'data' => $err_msg } if defined $err_msg;
    ($zenka_name) = keys(%zenka_names);
}

if ( not exists <tile-groups.layers>->{$zenka_name} ) {
    my $last_match;
    my $match   = 0;
    my $msg_str = "no set-upured layer found for zenka '$zenka_name'";
    if ( $zenka_name !~ /[\[\]]+/ ) {
        map {
            if ( $ARG =~ /^([^\[]+)\[/ and $1 eq $zenka_name ) {
                $last_match = $ARG;
                $match++;
            }
        } keys %{<tile-groups.layers>};
    }
    $msg_str
        = "multiple '$zenka_name' instances defined, zenka subname required!"
        if $match > 1;
    return {
        'mode' => qw| false |,
        'data' => $msg_str
        }
        if $match != 1;
    $zenka_name = $last_match;
}

return {
    'mode' => qw| true |,
    'data' => <tile-groups.layers>->{$zenka_name}
    }

#,,,,,.,,,,,,,,,,,..,,...,.,,,.,,,,,,,,..,..,,..,,...,...,.,,,...,,.,,,..,.,.,
#SQ7HNDTVDE5MMCNSC3XFVAMQFDK5ILTKP7ONLYV6YVSHMU6FKYDVOYBBKP25BZKA4GGEFFQFYARHY
#\\\|2I6HVZUG6JQPMGB356XWMIDGCGL26RMNBIC5JBDVGUBJUV6J73D \ / AMOS7 \ YOURUM ::
#\[7]FANXOVLZZOLFRFOXJ6XRIMNSRSFKBST4C3EINUGFXCESRG7HRGDQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
