## >:] ##

# name  = crypt.C25519.generate_session_keypair

my $key_name     = shift // <system.zenka.name>;
my $key_name_str = $key_name eq <system.zenka.name> ? 'zenka' : "'$key_name'";

## regenerate? <-- log level 2 [ less noise on timer interval ]
my $log_level = defined $KEYS{'C25519'}{'session'}{$key_name} ? 2 : 1;

<[base.log]>->( $log_level, ":[ creating $key_name_str session keys ]" );

my ( $public_key, $secret_key ) = Crypt::Ed25519::generate_keypair();

my $creation_ntime = <[base.ntime.b32]>->(3);
my $key_sig
    = <[crypt.C25519.sign_data]>->( \"[$creation_ntime|$public_key]" );

return $KEYS{'C25519'}{'session'}{$key_name} = {
    'name'      => $key_name,
    'public'    => $public_key,
    'secret'    => $secret_key,
    'created'   => $creation_ntime,
    'signature' => $key_sig,
    'key-reply' => encode_b32r($public_key),
    'sig-reply' =>
        sprintf( "[%s|%s]", $creation_ntime, encode_b32r($key_sig) )
};

#,,..,.,,,,..,,,,,,.,,.,.,.,.,,.,,,,.,.,,,,..,..,,...,...,.,,,,,.,.,,,...,..,,
#3FISMLVGNH5ZG2FEC27ONI4EDMULM6RCOX4ESMBVESZKNFFM6HA73JTRK3QWM5RT2W6ZYGUCKLVUQ
#\\\|SNMBFAZF7T2ZD6OA5Z6XYTBEZITIAPWHJSDFOE7E65OCT7DU57D \ / AMOS7 \ YOURUM ::
#\[7]ECPNCLHDXZX6ZV3NMH5B5WDT3OAG6MPTBHN4CW5XT7UI7W4OXACY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
