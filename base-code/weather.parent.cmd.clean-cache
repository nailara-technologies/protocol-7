# >:]

# name  = weather.parent.cmd.clean-cache
# param = [html|data|stations]
# descr = erase weather data disk cache

my $param     = $$call{'args'} // '';
my $cache_dir = <weather.cache_dir>;
my $city_file = "$cache_dir/city.current";

return { 'mode' => 'false', 'data' => "cache dir '$cache_dir' not found!" }
    if !-d $cache_dir;

return { 'mode' => 'false', 'data' => 'parameter not recognized' }
    if length($param)
    and $param !~ /^(html|data|stations)$/;

my @subdirs = ( 'data', 'html', 'station_ids' );    # default (all)

@subdirs = ('data')     if $param eq 'data';
@subdirs = ('html')     if $param eq 'html';
@subdirs = ('stations') if $param eq 'stations';

my $which_str = '';
$which_str = " $param"     if length($param);
$which_str = " station-id" if $param eq 'stations';

<[base.log]>->( 1, "cleaning up weather$which_str cache... (requested)" );

map { remove_tree( "$cache_dir/$ARG", { 'keep_root' => 1 } ) } @subdirs;

# unlink($city_file) if -f $city_file; # LLL: would likely break restart!

# LLL: update weather data and files... ; clean up weather data in ram..,

return { 'mode' => 'true', 'data' => "weather$which_str disk cache cleared" }

#.............................................................................
#UVPIKMX7XM4SL623QP2PVUAVR7CXQ4M3M7KGMVLUL3HP43HI43TLMTFE3UM6GA5GVL5T4AQG4QRA2
#::: TXSIJG6NVGQGCME2KG6DMWUXR6LCISKCHCBWSHB7MWCX7C7XVRS :::: NAILARA AMOS :::
# :: UTS5ZHJTGC2GNDP5KVURVVQBCFPX5AMDHVE64BR3RA4OLRHRSCBY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
