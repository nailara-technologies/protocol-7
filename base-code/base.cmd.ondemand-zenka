# >:]

# name  = base.cmd.ondemand-zenka
# param = <add|del> <name>
# descr = register/remove ondemand zenki

my $re = $data{'regex'}{'base'};

return { 'mode' => 'false', 'data' => 'expected <add|del> <zenka_name>' }
    if not defined $$call{'args'}
    or !length( $$call{'args'} )
    or $$call{'args'} !~ m{^(add|del) ($re->{'usr_str'})$};

my ( $cmd, $zenka_name ) = split m| +|, $$call{'args'};

if ( $cmd eq 'add' ) {
    map {
        return {
            'mode' => qw| false |,
            'data' => "there already is one registered ondemand type zenka "
                . "'$zenka_name'"
            }
            if <zenki.virtual>->{$ARG}->{'type'} eq 'ondemand'
            and <zenki.virtual>->{$ARG}->{'name'} eq $zenka_name
    } keys %{<zenki.virtual>};

    my $zenka_id = <[base.list.element.add]>->(
        {   'key_ref' => \$data{'zenki'}{'virtual'},
            'val_ref' => \{
                'name'    => $zenka_name,
                'type'    => 'ondemand',
                'status'  => $zenka_name,
                'session' => $zenka_name,
                'queue'   => []
            }
        }
    );
    <[base.logs]>->(
        2,           "registered ondemand zenka '%s' [id=%d]",
        $zenka_name, $zenka_id
    );
    return {
        'mode' => qw| true |,
        'data' => "zenka registered [ id = $zenka_id ]"
    };

} elsif ( $cmd eq qw| del | ) {
    my $_zenka;
    my $del_id;
    map {
        if (    <zenki.virtual>->{$ARG}->{'type'} eq qw| ondemand |
            and <zenki.virtual>->{$ARG}->{'name'} eq $zenka_name ) {
            $_zenka = delete <zenki.virtual>->{$ARG};
            $del_id = $ARG;
        }
    } keys %{<zenki.virtual>};
    return {
        'mode' => qw| false |,
        'data' => "no such zenka registered ['$zenka_name']"
        }
        if not defined $del_id;
    <[base.log]>
        ->( 1, "unregistered ondemand zenka $del_id ['$zenka_name']" );
    return {
        'mode' => qw| true |,
        'data' => "virtual zenka $del_id ['$zenka_name'] unregistered"
    };
}

#.............................................................................
#OXNGL5NRKQK6MK5FSPZ4NWDEHQIRDBSVJRH4TL7WZSR5U2XJLE4GRKFDGUEGJ7SPUD2ARDWFFD77Y
#::: EMUCNETB5XOVGKSUVLYGXDL32BFYIVNQ7JKKO7MNI4425PEE2XP :::: NAILARA AMOS :::
# :: EQ4IXNBOMOQ7N6QKDJVJ4FBEGEQZPZVCUAHRNQRFABDGI3TYHIDY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
