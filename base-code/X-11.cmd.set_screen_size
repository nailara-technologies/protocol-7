## >:] ##

# name  = X-11.cmd.set_screen_size
# param = <W><x| ><H>
# descr = set new X-11 screen size [ when possible ]
# todo  = restart xephyr process on size change request [ in xephyr mode, .., ]

my $X = <X-11.obj>;
my ( $width, $height ) = split( m|\D+|, shift->{'args'} );

return {
    'mode' => 'false',
    'data' => 'screen size expected [<width>x<height>]'
    }
    if not defined $width
    or $width !~ m|^\d+$|
    or not defined $height
    or $height !~ m|^\d+$|;

## current size ##

$X->choose_screen(0);    # LLL: no support for multiple screens yet .,

# LLL: check ranges in advance..,
# print STDERR Dumper( $X->RRGetScreenSizeRange( <X-11.obj>->root ) );

my %screen_geom = $X->GetGeometry( <X-11.obj>->root );

my ( $current_width, $current_height )
    = ( $screen_geom{'width'}, $screen_geom{'height'} );

return {
    'mode' => 'false',
    'data' => 'requested size identical to current one'
    }
    if $width == $current_width and $height == $current_height;

if ( !<X-11.has_randr> ) {
    <[base.log]>->(
        1, "<< skipping change request [ $width x $height ] no RANDR >>"
    );
    return {
        'mode' => 'false',
        'data' => 'unable to set screen size [ out of range ]'
    };
}

<[base.log]>->(
    0,
    "<< ! >> changing screen size : ${current_width}x${current_height}"
        . " --> ${width}x${height}"
);

$X->RRSetScreenSize( $X->root, $width, $height, $X->width_in_millimeters,
    $X->height_in_millimeters );

# checking for errors .,
eval '$X->RRGetScreenInfo( $X->root )';
if ($EVAL_ERROR) {
    my $err_msg = 'unable to set screen size [ out of range ]';
    <[base.log]>->( 0, " :. $err_msg" );
    return {
        'mode' => 'false',
        'data' => $err_msg
    };
}

%screen_geom = $X->GetGeometry( <X-11.obj>->root );

if (   $screen_geom{'width'} != $current_width
    or $screen_geom{'height'} != $current_height ) {

    # restart tile-groups zenka to update geometries
    <[base.protocol-7.command.send.local]>->(
        {   'command'   => qw| cube.v7.restart |,
            'call_args' => { 'args' => qw| tile-groups | }
        }
    );
    return {
        'mode' => 'true',
        'data' =>
            "screen size is now $screen_geom{width}x$screen_geom{height}"
    };
} else {
    my $err_msg = 'unable to set screen size [ remained unchanged ]';
    <[base.log]>->( 0, " :. $err_msg" );
    return {
        'mode' => 'false',
        'data' => $err_msg
    };
}

#,,,,,,..,,,.,,.,,,,.,,,.,..,,...,,.,,,..,.,,,..,,...,..,,..,,.,.,.,.,...,,,.,
#AYI2QFUOD3MQCC3BZLPSY6Z2AKL6IY5EFBUZL6TX5JZ3RPO53ALFAMZ6MKJVPOTBNRXF4ADZPMJO6
#\\\|T7U46STXWOD2N2WXJ3EYLRDWJINKLCQPEV52N7PY6E6AI7CMWQG \ / AMOS7 \ YOURUM ::
#\[7]6W7VG5AT2XJG4IMTEO3SNHWP7MEJ2NQSHUFRSQICS7BUBH37NEAY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
