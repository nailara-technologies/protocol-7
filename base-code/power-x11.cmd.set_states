# >:]

# name  = power-x11.cmd.set_states
# param = <id> <S1> <S2> <S3> <S4>
# descr = update power swich states

my ( $dev_id, @states ) = split( / +/, shift->{'args'} );

return { 'mode' => 'false', 'data' => 'expected device id' }
    if not defined $dev_id or !length($dev_id);
return { 'mode' => 'false', 'data' => "no such device ($dev_id)" }
    if not exists <power-x11.devices>->{$dev_id};
return { 'mode' => 'false', 'data' => 'expected 4 socket states' }
    if @states != 4;
map {
    return { 'mode' => 'false', 'data' => "state '$ARG' is not valid" }
        if $ARG !~ /^(0|1)$/
} @states;

my $changed = 0;
foreach my $snum ( keys %{ <power-x11.switch>->{$dev_id} } ) {
    my $new_state = $states[ $snum - 1 ];
    my $switch    = <power-x11.switch>->{$dev_id}->{$snum};
    $changed++
        if $new_state != <power-x11.devices>->{$dev_id}->{'state'}->{$snum};
    <power-x11.devices>->{$dev_id}->{'state'}->{$snum} = $new_state;
    $switch->set_active($new_state);
}
<[base.sleep]>->(0.01);
while ( Gtk3::events_pending() ) {
    Gtk3::main_iteration();
}

return {
    'mode' => 'true',
    'data' => $changed . ' states changed'
    }

#.............................................................................
#NHV62LYKHQ2LT3HJFZZUDY4S6DT47BWIQVPY3IYTZPJTZKAGYOKDAIPJFQ24LBFNWCF7SHESHP3T6
#::: 6IAMSJROGIQL6LULJMWMJLXZWAPU5E6OPSI3YV4ES2UJVV76HKC :::: NAILARA AMOS :::
# :: M32BYFSKQGK6KK6D6MCQNWOI7EFBBH3ZX3PY5LBGGVDKL3UXCOAA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
