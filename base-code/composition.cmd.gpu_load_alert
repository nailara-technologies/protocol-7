# >:]

# name  = composition.cmd.gpu_load_alert
# param = <secs> <percent>
# descr = activate GPU load countermeasures
# todo  = ask web-browser and ticker zenka to slow down ..,

return {
    'mode' => 'false',
    'data' => 'expected <secs> <percent> parameters'
    }
    if not defined $$call{'args'}
    or $$call{'args'} !~ m|^\d+ +\d+(\.\d+)?$|;

my ( $sec, $percent ) = split( / +/, $$call{'args'}, 2 );
my $perc_str = sprintf( "%.2f", $percent );
<[base.log]>
    ->( 1, "<< received GPU load alert [ ${sec}s at $perc_str% ] >>" );

my $restart_delay = 0;
<composition.counter.gpu_alerts> //= 0;
if ( !<composition.counter.gpu_alerts> ) {
    my $warn_txt = "'GPU Load Alert' 'activating countermeasures .,'";
    <[base.protocol-7.command.send.local]>->(
        {   'command'   => "cube.notify.warn",
            'call_args' => { 'args' => $warn_txt }
        }
    );
    $restart_delay = 3;
}
<composition.counter.gpu_alerts>++;

<[composition.gpu_alerts.enable_auto_speed]>;

<[event.add_timer]>->(
    {   'after'   => $restart_delay,
        'handler' => 'composition.impressive.increase_light_mode'
    }
);

return { 'mode' => 'true', 'data' => 'countermeasures activated' }

#.............................................................................
#OED5FZB7SYTM5WOKXJAIOFHPALULGVTLSCNDH3UDN3LO3BMMUBFZU3BFD3I3LIG7DOFNV27KPUAU2
#::: Y2NVT266FEOLCTSSXPI3V2PK4D4V6NPE6IUV6BKI4M7LK3BYPXT :::: NAILARA AMOS :::
# :: BBEK3FFHQTMLGUY5BINRPEZV43IJ3MIW3N2MQB24L5VSRLZPQCAA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
