# >:]

# name  = composition.cmd.gpu_load_alert
# param = <secs> <percent>
# descr = activate GPU load countermeasures
# todo  = ask web-browser and ticker zenka to slow down ...

return { 'mode' => 'nak', 'data' => 'expected <secs> <percent> parameters' }
    if not defined $$call{'args'}
    or $$call{'args'} !~ /^\d+ +\d+(\.\d+)?$/;

my ( $sec, $percent ) = split( / +/, $$call{'args'}, 2 );
my $perc_str = sprintf( "%.2f", $percent );
<[base.log]>->( 1, "<!> received GPU load alert [ ${sec}s at $perc_str% ]" );

my $restart_delay = 0;
<composition.counter.gpu_alerts> //= 0;
if ( !<composition.counter.gpu_alerts> ) {
    my $warn_txt = "'GPU Load Alert' 'activating countermeasures...'";
    <[base.protocol-7.command.send.local]>->(
        {   'command'   => "cube.notify.warn",
            'call_args' => { 'args' => $warn_txt }
        }
    );
    $restart_delay = 3;
}
<composition.counter.gpu_alerts>++;

<[composition.gpu_alerts.enable_auto_speed]>;

<[event.add_timer]>->(
    {   'after'   => $restart_delay,
        'handler' => 'composition.impressive.increase_light_mode'
    }
);

return {
    'mode' => 'ack',
    'data' => 'countermeasures activated'
    }

#.............................................................................
#FQHGHHJ2IMOPMESRH4JEPVKPMWIHBACZ2HRDLZNLRAXKUGC6GYCNYLYM3QZSGDM5NAKD67PJ27CBC
#::: HWFH3E6K2AWLY7IRJOGZBQSXWPVWHUOCOXO6IIFV2P4ZJZYHED3 :::: NAILARA AMOS :::
# :: H4J3DD43WD2FFDGDNZPUBGP5YMBF4JY2R75J3VA7NZ5G64JNNQCQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
