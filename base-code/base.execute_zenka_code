## >:] ##

# name  = base.execute_zenka_code
# descr = execute protocol-7 zenka code

<[base.log]>->( 2, ': executing protocol-7 zenka code .,' );

my $noerr = 1;
foreach my $code_line (@_) {
    $code_line =~ s|&cmd\.([^\(]+)|<[base.check_alias]>->($1)|eg;
    if ( $code_line ne '' ) { eval($code_line) }
    if ($EVAL_ERROR) {
        if ( $EVAL_ERROR =~ m|^Can't use string \(""\) as a subroutine ref| )
        {
            my $code_line_copy = $code_line;
            while ( $code_line_copy =~ s|(\$code\{'([^\']*)'\})|| ) {
                my ( $sub_call, $sub_name ) = ( $1, $2 // '' );
                next if length($sub_name) and exists $code{$sub_name};
                <[base.log]>->(
                    0, "unknown subroutine '$sub_name' called [ $sub_call ]"
                );
                $noerr = 0 if $noerr;
            }
        }
        if ($noerr) {
            $EVAL_ERROR =~ s| at ([^\s]+) line (\d+).+\n||;
            <base.eval_error.name> = $1;
            <base.eval_error.line> = $2;
            warn("no success on eval '$code_line' [ '$EVAL_ERROR' ] <{C3}>");
        }
        $noerr = 0 if $noerr;
    }
}
return $noerr;

#,,.,,,,,,,,.,,,,,...,,,,,...,,,,,...,,,.,.,.,..,,...,...,...,,,.,,..,,.,,.,,,
#5NOPYOOLEVACBTKRSY7KYZU4VUZTUJTRIHRARLH65QXWVLYU2HZVT6S4I5A2ZI4HQSEPYM62HV7V2
#\\\|7OHVL5V7HA56J4CIBIXLXDCQCCWCXDYAYXANCMM2J3TUBMBK5BZ \ / AMOS7 \ YOURUM ::
#\[7]AJ6EMUODZP3FA5BIWGRV7G7L2WBW7LXB5VXOBDSWDZ353T6M3MDI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
