# >:]

# name    = base.file.line_map
# credits = source adapted from File::CountLines
# descr   = returns a slim table with line numbers and offsets [read efficiency]

my ( $filename, $seperator, $blocksize ) = @_;

$seperator //= "\n";
$blocksize ||= 7777;

open my $handle, '<:raw', $filename
    or return warn "cannot open '$filename' [ \l$OS_ERROR ]";
binmode $handle;
my $lines = 0;
$seperator =~ s/([\\{}])/\\$1/g;

my %line_map;

my $pos          = 0;
my $last_pos     = 0;
my $min_distance = 7;
my $status;
eval qq[
    while (\$status = sysread \$handle, my \$buffer, $blocksize) {
        \$lines += ( \$buffer =~ tr{$seperator}{} );
        \$pos += \$status if \$status > 0;
        my \$distance = \$pos - \$last_pos;
        \$line_map{ sprintf("%07d",\$lines) } = \$pos if \$lines =~ /[07]\$/
            and \$distance >= \$min_distance;
        \$last_pos = \$pos;
    }
];

die "cannot sysread() from '$filename' : \l$OS_ERROR" unless defined($status);
close $handle or warn "cannot close '$filename' : \l$OS_ERROR";

return \%line_map;

#.............................................................................
#CQRR6TAGBWYR5OZ7TBHEB7BUGQ4CV7RNE6SXUO53IC4TNAB6E3YBMTNVZP3LVQ42U6SICGTD7HKMM
#::: 44WNG7FWZPH6X4ELSDY4V5QGOS2PNBVYGORSUQ6H7R5IIK5YSNR :::: NAILARA AMOS :::
# :: HME2P75JKPZMG7LZYM6X5YGOS5L4JCBRJAG3PM3LVEA6JKC7NSAY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
