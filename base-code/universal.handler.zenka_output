# >:]

# name  = universal.handler.zenka_output

my $event      = shift->w;
my $read_fh    = $event->fd;
my $zenka_name = $event->data;
my $self_name  = <system.zenka.name>;

<universal.zenka.output_buffer>->{$zenka_name} //= '';

my $read_bytes = <[base.s_read]>->(
    $read_fh, \$data{'universal'}{'zenka.output_buffer'}{$zenka_name},
    4096,     length( <universal.zenka.output_buffer>->{$zenka_name} )
);
if ( not defined $read_bytes or $read_bytes == 0 )
{    # ( filehandle exception )
    $event->cancel;
    close($read_fh);
    <[base.log]>->( 1, "( $zenka_name ) output pipe closed." );
    undef <universal.zenka.output_buffer>->{$zenka_name};
    return;
}

while ( <universal.zenka.output_buffer>->{$zenka_name} =~ s|^([^\n]*)\n||s ) {
    my $output_line = $1;
    $output_line =~ s/^(.+?)(\.$zenka_name )/$1.$self_name$2/;
    print $output_line . "\n";
}

#.............................................................................
#W52GD5NZROSX2EFE2WOLZWZMWHWYVGILZORDVP4K3UAW34AL5S6D6VP642T6INTVB5XIBVOZ26XAI
#::: VGRTDBWFBMCXTEP4AJJ34X2S6Z2RT7LD3Z6P2DAPUYHMIWQKIYY :::: NAILARA AMOS :::
# :: PATV5OWGATC6CBHZ5KOX4S7GTVD5SCDN4C7BTWKBULFYE4DNQGCI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
