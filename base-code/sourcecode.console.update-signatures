# >:]

# name  = sourcecode.console.update-signatures
# descr = regenerate source code signature sections

my $source_version  = <protocol-7.src-ver>;
my $release_version = <protocol-7.rel-ver>;

my $exclude_files = { 'bin/p7c' => 1 };    ## <-- expand as required., ###

# my @copy_sources = (<system.code_path>);   # <-- use previous version path ..,

my $paths = <sourcecode.path>;    # <-- prepared in 'sourcecode.init_code'

my $work_tree    = $paths->{'work_tree'};
my $source_root  = $paths->{'source_subdir'};
my $version_root = $paths->{'version_root'};

my @copy_sources;
map {
    my $source_path = catfile( $work_tree, $ARG );
    die "source path $source_path does not exist" if !-d $source_path;
    if ( !-w $source_path ) {
        <[base.log]>->(
            0, "<<< write permission missing for '$source_path' >>>"
        );
        <[base.exit]>->(1);
    }
    push( @copy_sources, $ARG );
    } qw|
    bin
    bin/dev
    read-me
    base-code
    read-me/md
    configuration
    bin/dev/scripts
    bin/dependencies
    |;

<[base.log]>->( 1, '.:[ UPDATING SOURCE SIGNATURES ]:.' );

my @all_files;
foreach my $directory (@copy_sources) {
    my $src_path = catfile( $work_tree, $directory );
    <[file.all_files]>->( $src_path, \@all_files );
}

my @source_paths
    = grep { $ARG =~ s|^$work_tree/?||; not exists $exclude_files->{$ARG} }
    grep { !m{/\.|~$} } @all_files;

my $file_count = scalar @source_paths;

map {
    <[log.error]>->("source file ./$ARG is not writable")
        if not -w "$work_tree/$ARG"
} @source_paths;

<[base.log]>->( 1, "* updating $file_count source file signatures..," );
foreach my $path_rel (@source_paths) {
    my $path_abs = catfile( $work_tree, $path_rel );

    <[base.log]>->( 2, '.' );
    <[base.log]>->( 2, ":::[ $path_rel ]::" );
    <[base.log]>->( 2, '::' );

    my $code_data_ref = <[source.cmd.get-code-signed]>
        ->( { 'args' => $path_rel, 'skip-valid' => 1 } );
    next
        if $code_data_ref->{'mode'} eq 'ack'
        and $code_data_ref->{'data'} eq 'still valid. =)';

    die "failed to create signature for \"$path_rel\""
        if $code_data_ref->{'mode'} ne 'data'
        or !length( $code_data_ref->{'data'} );

    <[base.log]>->( 1, ':.' );
    <[base.log]>->( 1, ":::[ $path_rel ]:.<+>.::" );
    <[base.log]>->( 1, ':' );

    $file_count--;
    <[file.put]>->( $path_abs, $code_data_ref->{'data'} );
}

<[base.log]>->( 1, ': : success =)' ) if !$file_count;  # log files changed..,

#.............................................................................
#5T5S3KVIPCCDKTSSIZ62GUGXMHQLSSHY6GWRWOLMFU6WVZH7YONGS4D632HUTHGGRNX4KTRFMABHE
#::: PMLVZVTBMJZLFFNAO7JPXWDTZQVF7JW2BINPAZ7GSLVGS5ZZPFS :::: NAILARA AMOS :::
# :: BPHD4DKRLPC2TWY3CMGJRLKBNJY3VE7UB6L7DEI7JM47FAJAPYBA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
