## >:] ##

# name  = v7.zenka.cmd.search
# param = <pattern>
# descr = search zenka names and short descriptions

my $search_pattern = $$call{'args'} // '';
my @matching_zenki;

return { 'mode' => 'false', 'data' => 'expected search pattern' }
    if !length($search_pattern);

foreach my $zenka_name ( keys %{<v7.zenki.available>} ) {
    push( @matching_zenki, $zenka_name )
        if $zenka_name =~ /\Q$search_pattern\E/i
        or <v7.zenki.available>->{$zenka_name}->{'short_desc'}
        =~ /\Q$search_pattern\E/i;
}

return {
    'mode' => 'false',
    'data' => 'no matches ( see \'v7.list available\' for a complete list )'
    }
    if !@matching_zenki;

my $reply_str;
my $max_cmd_len = 0;
map { $max_cmd_len = length($ARG) if length($ARG) > $max_cmd_len }
    @matching_zenki;

foreach my $zenka_name ( sort @matching_zenki ) {
    $reply_str .= sprintf( "  %-${max_cmd_len}s   #  %s\n",
        $zenka_name, <v7.zenki.available>->{$zenka_name}->{'short_desc'} );
}

return { 'mode' => qw| size |, 'data' => $reply_str }

#,,,.,,,.,,,.,,.,,.,,,.,.,..,,,..,,.,,,,.,,.,,..,,...,...,..,,...,,.,,...,...,
#FK5PVGF73MAR3Q6SX2PTPVXUDKF5NISMIXIM7HBZVVBRH37V4BVTOHEBELJC735RKXSDIV474UO2A
#\\\|T5ZL2KPLOGKDTSJE2WLUFOJHVPHOWI37OMP5QB6DPHSWNBOCOWX \ / AMOS7 \ YOURUM ::
#\[7]LYGYHXNEMQHQOFO7JPOY5XIFC6UFFDQ2SSUX2JSYSLIPTAZVXQAQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
