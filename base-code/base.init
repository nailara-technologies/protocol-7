## >:] ##

# name  = base.init
# descr = initialize [execute] zenka

if ( $ARG[0] =~ m|~$| ) {
    <[base.log]>->(
        0, '<-- zenka subroutine name not valid [ backup file ], aborting ..,'
    );
    <[base.exit]>->(4);
}

$SUB_NAME = qw| base.init |;    ##  <--  used for warnings  ###

$PROGRAM_NAME = $ARG[0];

if ( $_[0] =~ m{([^\.]+)\.([\w|\.]+)$} ) {
    ( <system.node.name>, <system.zenka.name> )
        = ( ${^CAPTURE}[0], ${^CAPTURE}[1] );
}

<[base.process-into-background]> if <system.background_mode>;

my $success = 1;
if ( <system.startup_initcode> and @{<startup.init_code>} ) {
    $success = <[base.execute_zenka_code]>
        ->( <[base.parser.config]>->(<startup.init_code>) );
    delete <startup.init_code>;  # clean up., [could contain auth key strings]
    delete $data{'startup'} if not keys %{ $data{'startup'} };
}

if ( !$success or $EVAL_ERROR ) {
    <[base.log]>->( 0, 'warning : start-up init code contained errors.,' );
    undef $EVAL_ERROR;
}

my $zenka_cfg_path = <[base.get_path.zenka_cfg]>->(<system.zenka.name>);

if ( !-e "<system.conf_path>/$zenka_cfg_path" ) {
    my $zenka_name = <system.zenka.name>;
    local <system.zenka.name> = qw|error|; # <-- changed zenka name to 'error'
    $SUB_NAME = undef;
    return <[log.error]>->("<< no such zenka ['$zenka_name'] >>");
}

<system.path.rel.cur_zenka_cfg> = $zenka_cfg_path;

<base.config_parser.cfg_name> = qw| zenka |;
<base.config_parser.cfg_type> = qw| start_cfg |;

# note : load_config_file will not return for zenki invoking the event loop..,
<[base.load_config_file]>->($zenka_cfg_path)
    or
    <[log.error]>->("startup of zenka '<system.zenka.name>' not successful");

$SUB_NAME = undef;

#,,..,..,,...,.,,,,..,.,.,.,,,...,..,,,..,.,.,..,,...,..,,,.,,,,,,.,,,,,,,,.,,
#FXIVVGQQ3SPCV4MAWNP2AOEEVF6RYBF7KGIZBIXWB6W6X6YNRQBSWI3LLGQSES3PBEYA4G2UWWJWI
#\\\|RWZMBN47G63G374QOICSVKNJ7RXKCE2KOHXK42Z4EHY7SCHOAHA \ / AMOS7 \ YOURUM ::
#\[7]ZR45FEB5IYTJMYXLIGDEPMETQF6FUISZ7ZO7EE2QX6MP5U4XG4DI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
