# >:]

# name = X-11.start_gpu_top

return if defined <X-11.gpu_top.process_started>;

my $refresh_period = 1137; # def.: 1000 [ careful with too low values --> CPU ]
my $gpu_top_bin    = <X-11.bin_path.intel_gpu_top>;
my $gpu_freq_bin   = <X-11.bin_path.intel_gpu_frequency>;
return <[base.log]>->(
    0, "<< not found : 'intel_gpu_top' [ 'intel-gpu-tools' installed ? ] >>"
) if !-x $gpu_top_bin;

return <[base.log]>->( 0, "<< cannot run 'intel_gpu_top' >>" )
    if qx($gpu_top_bin -h) !~ m|usage|;

return
    <[base.log]>->( 0, '<< apparently no intel GPU [intel_gpu_frequency] >>' )
    if length($gpu_freq_bin)
    and -x $gpu_freq_bin
    and qx($gpu_freq_bin) =~ m|no intel gpu found|i;

<[base.log]>->( 1, "starting 'intel_gpu_top' process .," );

<X-11.gpu_top.pid>
    = open3( undef, my $out_fh, undef,
    $gpu_top_bin, qw| -s |, $refresh_period, qw| -o - | );

if ( !<X-11.gpu_top.pid> ) {
    <[base.log]>->(
        0, "<< cannot open 'intel_gpu_top' pipe [ \l$OS_ERROR ] >>"
    );
    return;
}
push( @{<system.kill_list>}, <X-11.gpu_top.pid> );

<X-11.gpu_top.process_started> = <[base.time]>->(2);

<[event.add_io]>->(
    {   'fd'      => $out_fh,
        'handler' => 'X-11.handler.read_gpu_top',
        'data'    => { 'pid' => <X-11.gpu_top.pid> }
    }
);

#.............................................................................
#UVTKL5F27UAKQJ7WG56PD3NQYQUDQKXIA4LWRA6WUMGZB2NBPF6GWKYQWH2O2XWLEL4H3UWCS6Q6S
#::: O3JZK3BYMRN7VYCAT3WBRFUAP24PVQ74BIVEBUW66Y76IS2GFKQ :::: NAILARA AMOS :::
# :: 6DYMR3BJ4JNWXZUYFS2VW6BOAUIM4PYGDRN7DC3LUVELM3HSSICA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
