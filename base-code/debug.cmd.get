# >:]

# name  = debug.cmd.get
# param = <key>
# descr = return internal 'data' hash value
# note  = todo: implement access control filter and root namespace

my ( $cid,    $requested_key ) = ( $_[0]->{'session_id'}, $_[0]->{'args'} );
my ( $key_ok, $err_msg )
    = <[base.validate.data_key_syntax]>->($requested_key);
if ( !$key_ok ) {
    <[base.log]>->( 0, "[$cid] get: $err_msg" );
    return { 'mode' => 'false', 'data' => $err_msg };
}
my $key_ref;
if ( $key_ref = <[base.resolve_key]>->($requested_key) and defined $key_ref )
{
    return {
        'mode' => 'true',
        'data' => $$key_ref
        }
        if ref($key_ref) eq 'SCALAR';
    return {
        'mode' => 'false',
        'data' => 'only references to scalars are currently implemented'
    };
}
return { 'mode' => 'false', 'data' => 'requested key not found' };

#.............................................................................
#KKOOKTFS3YTASYUL4JS2ZF2UA5CQNZGRQRNOZDSOH5DOIKTJ4KVGEI6BSUYNUQ7I4D3PHBI3ZRO2O
#::: AJAOOYMWCUVQL2X3QRHKOU44BR5BWRRNMGYTIV2L5VIZDHSVUQW :::: NAILARA AMOS :::
# :: IZ5575O3SSKGDRSXHUWCRVNGUASO2OBG3MUS72MK25FVDHZ22UDI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
