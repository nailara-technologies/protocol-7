## >:] ##

# name  = v7.zenka.change_status
# descr = wrapper function for zenka status change handler

my ( $instance_id, $new_status ) = @ARG;
return warn 'no instance id specified <{C1}>'   if not defined $instance_id;
return warn 'no status string submitted <{C1}>' if not defined $new_status;
return warn 'no such instance defined <{C1}>'
    if not defined <v7.zenka.instance>->{$instance_id};

map {    ## validity check ##
    if ( not defined <v7.zenka.instance>->{$instance_id}->{$ARG} ) {
        delete <v7.zenka.instance>->{$instance_id};    ## cleaning up ##
        return warn sprintf "instance entry %d had undefined '%s' <{C1}>",
            $instance_id, $ARG;
    }
} qw| status zenka_name |;

my $zenka_name = <v7.zenka.instance>->{$instance_id}->{'zenka_name'};

<v7.online-zenki> //= {};
my $online_count = scalar keys %{<v7.online-zenki>};
if ( $new_status eq qw| online | ) {
    <v7.online-zenki>->{$zenka_name}++;
} elsif ( $new_status ne qw| starting |
    and exists <v7.online-zenki>->{$zenka_name} ) {
    delete <v7.online-zenki>->{$zenka_name}
        if --<v7.online-zenki>->{$zenka_name} == 0;
}
<[v7.calc_prefix_lengths]>->( keys %{<v7.online-zenki>} )
    if $online_count != scalar keys %{<v7.online-zenki>};

<[v7.handler.zenka_status]>->( $instance_id, $new_status );

#,,.,,...,,,,,.,.,..,,...,.,.,,.,,.,.,,,,,..,,..,,...,...,,..,,,.,.,,,..,,..,,
#CJQKBJDNHI4POPN3UAZBNK6AFREIUWRIA6CLHR4V6O6HYLEYI44DA4GYJZAEG346B5GAOCIPW7OWI
#\\\|JYER322VHHD4UCF54MOGWR6VOPHZI6YT4QM7MZ6ILPNU2AKBXX2 \ / AMOS7 \ YOURUM ::
#\[7]ZZJZFYM6PWL3JJAYCEXO7UFJV4J7N6ACO5YYZ666VZ2Q7V5USICI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
