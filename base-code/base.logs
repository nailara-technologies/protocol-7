## >:] ##

# name = base.logs
# desc = 'base.log' sprintf wrapper

return warn 'expecting sprintf template and parameters <{C1}>' if @ARG < 2;
my $param_index = 0;

map {
    if ( not defined $ARG ) {
        my $call_lvl = 0;
        $call_lvl++ if [ <[base.caller]>->(1) ]->[0] eq qw| base.s_warn |;
        my $warn_string = sprintf '%s parameter %d not defined %s',
            $call_lvl == 1 ? qw| base.logs | : qw| base.s_warn |,
            $param_index, scalar <[base.caller]>->($call_lvl);
        <[base.log]>->( 0, $warn_string );
        return undef;
    }
    $param_index++;
} @ARG;

my $log_level    ## log level 1 when parameter omitted ##
    = ( scalar @ARG > 1 and $ARG[0] =~ m|^\d$| )
    ? shift @ARG
    : 1;

my $log_str = eval {
    use warnings FATAL => qw| all |;    ##  catches all warnings  ##
    sprintf( shift @ARG, @ARG );
};

if ( length $EVAL_ERROR ) {    ##  report sprintf warnings  ##
    my $e_msg = <[base.format_error]>->( $EVAL_ERROR, -1 );
    $e_msg =~ s|sprintf|base.logs|;
    warn sprintf( '%s <{C1}>', $e_msg );
}

<[base.log]>->( $log_level, $log_str );

#,,.,,,..,.,.,,,.,..,,..,,,,.,,.,,.,.,,.,,,,,,..,,...,...,.,,,..,,,.,,.,.,.,,,
#67YJPJ5IYJW5GCCEQRWWYV6XB3VZG5UOGEX45KTIO75VU4Q5ASA6FESAUW2TD7EZVSE7G7G6DTZJG
#\\\|23OGWKJBX3ZGZMRWQQTHKDBM4JIO5JWWSSZPVHPKSJV4MBPU2OS \ / AMOS7 \ YOURUM ::
#\[7]Q7KHJOCPI3LAKSRT7BOY4MPFKOBXEAACI3FA32JFKL25OOPG3OCI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
