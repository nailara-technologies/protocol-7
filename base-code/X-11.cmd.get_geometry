## >:] ##

# name  = X-11.cmd.get_geometry
# param = <w_id>
# descr = return window position, width and height

my $window_id = $$call{'args'};

return { 'mode' => 'false', 'data' => 'x11 window id required' }
    if not defined $window_id;
return { 'mode' => 'false', 'data' => 'invalid x11 window id syntax' }
    if $window_id !~ /^\d+$/;

my $xtops = <X-11.WM>;
<[X-11.update_X11_WM]>;

my $window;
for my $w ( @{ $xtops->sorted } ) {
    if ( $w->id eq $window_id ) {
        $window = $w;
        last;
    }
}

return { 'mode' => 'false', 'data' => 'no such window' }
    if not defined $window;

return { 'mode' => 'true', 'data' => join( ' ', $window->geometry ) };

#,,..,.,,,,.,,,,.,,.,,...,...,,.,,.,.,.,.,...,..,,...,...,,,,,,,,,..,,,.,,,.,,
#TN3NXHV6ESZ6ZZINFTUEXOTMPIGXIW4E33RB62BPHOTI45XCXKN4AMWISS7INWQTOEPYSQSH44OZE
#\\\|TGW5FO2CAEUHHERFVL6ZNKTNETBKJ4CWLEKCHAQYAIHJQYL2R2M \ / AMOS7 \ YOURUM ::
#\[7]JZNJSHN3DRC46YNRGOKI4S4HCXW27MPGK2B5XNDN45POJGRYPWDY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
