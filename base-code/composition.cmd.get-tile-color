# >:]

# name  = composition.cmd.get-tile-color
# param = <zenka-|tile_name>
# descr = average region color for zenka \ tile name

my $reply_id          = $$call{'reply_id'};
my $get_color_command = 'cube.screenshot.get_region_color';

return { 'mode' => 'nak', 'data' => "expected valid tile or zenka name" }
    if not defined $$call{'args'}
    or $$call{'args'} !~ /^(\S+)( +(\S+))?$/;
my ( $source_zenka, $zenka_name ) = ( $1, $3 );

$source_zenka =~ s|^.+\.||g;
$zenka_name = $source_zenka if not defined $zenka_name;

if ( $zenka_name =~ /^\[([^\]]+)\]$/ ) {    # <-- only subname given
    my $subname = $1;
    my %zenka_names;
    map { $zenka_names{$ARG} = 1 if $ARG =~ /\[$subname\]$/ }
        keys %{<composition.coordinates>};
    my $err_msg;
    if ( !keys(%zenka_names) ) {
        $err_msg = "no zenka matches subname '$subname'";
    } elsif ( keys(%zenka_names) > 1 ) {
        $err_msg = 'multiple zenki are matching, zenka name required';
    }
    return { 'mode' => 'nak', 'data' => $err_msg } if defined $err_msg;
    ($zenka_name) = keys(%zenka_names);
}

if ( not exists <composition.coordinates>->{$zenka_name} ) {
    my $last_match;
    my $match   = 0;
    my $msg_str = "no coordinates defined for zenka '$zenka_name'";
    if ( $zenka_name !~ /[\[\]]+/ ) {
        map {
            if ( $ARG =~ /^([^\[]+)\[/ and $1 eq $zenka_name ) {
                $last_match = $ARG;
                $match++;
            }
        } keys %{<composition.coordinates>};
    }
    $msg_str
        = "multiple '$zenka_name' instances defined, zenka subname required!"
        if $match > 1;
    return {
        'mode' => 'nak',
        'data' => $msg_str
        }
        if $match != 1;
    $zenka_name = $last_match;
}

my $coordinates_data = <composition.coordinates>->{$zenka_name};

my @coordinates;
my @borders = ( 'left', 'top', 'right', 'bottom' );
foreach my $border_name (@borders) {
    return {
        'mode' => 'nak',
        'data' => "coordinates for $border_name border are missing"
        }
        if not exists $coordinates_data->{$border_name};
    push( @coordinates, $coordinates_data->{$border_name} );
}

<[base.protocol-7.command.send.local]>->(
    {   'command'   => $get_color_command,
        'call_args' => { 'args' => join( ' ', @coordinates ) },
        'reply'     => {
            'params'  => $reply_id,
            'handler' => 'composition.handler.get-tile-color_reply'
        }

    }
);

return { 'mode' => 'deferred' }

#.............................................................................
#3X3UMAHOENTYWKLEQSFDNKGLXKCXGVMGB3HUW4WWPWWR6QWJYLOYDDUEUSW2OJZYH2HGZXSQ6OYS4
#::: Q3VGWUQEBBNED4WD5W5HFWJU7LCYFKHHM3BZMOQRXYQ4YTSX44K :::: NAILARA AMOS :::
# :: FLRCQ2POJLZYNZRWE7BW23WVVG3KDVQKCCWL7U3OGVPTS7HIPIAI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
