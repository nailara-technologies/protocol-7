## >:] ##

# name  = debug.cmd.switch-user
# param = <user>
# descr = switch session to a different user

my $params = shift;

my $new_usr = $params->{'args'};
my $id      = $params->{'session_id'};
my $old_usr = $data{'session'}{$id}{'user'};

return { 'mode' => qw| false |, 'data' => "you are '$new_usr' already!" }
    if $new_usr eq $old_usr;

if ( not defined $new_usr or !length($new_usr) ) {
    $$reply{'data'} = 'no username specified';
} elsif ( $new_usr =~ <regex.base.usr> ) {

    return { 'mode' => qw| false |, 'data' => "no user '$new_usr' found!" }
        if not defined <auth.setup.usr>->{$new_usr};

    <[base.log]>->(
        0,
        "[$id] << ! >> switching session from user '$old_usr' to '$new_usr' << ! >>"
    );

    $data{'session'}{$id}{'user'} = $new_usr;

    $data{'user'}{$new_usr}{'connected_since'} = <[base.time]>->(5);

    $data{'user'}{$new_usr}{'session'}{$id}
        = delete $data{'user'}{$old_usr}{'session'}{$id};

    if ( !keys( %{ $data{'user'}{$old_usr}{'session'} } ) ) {
        delete $data{'user'}{$old_usr}{'connected_since'};
        $data{'user'}{$old_usr}{'last_seen'} = time();
        delete $data{'user'}{$old_usr}{'session'};
    }

    return {
        'mode' => qw| true |,
        'data' => "switched session to user '$new_usr'"
    };

} else {
    return { 'mode' => qw| false |, 'data' => 'invalid user name syntax' };
}

#,,..,...,,,,,.,,,,.,,,,,,..,,,.,,...,,.,,,,,,..,,...,...,.,,,.,,,,..,,.,,,,.,
#DMFCVCF5K6NSUDTYE2DFFLCALI7K7S2OCW56DIUN4W3BHRYUPYTOT7HXJYIKCBEWBJBWATPT5Y3G4
#\\\|MFWTXCNIQUG5TSPWOGUXFDQAEVVODKQSO3WDGVBMZYY4A3FHAUS \ / AMOS7 \ YOURUM ::
#\[7]MNKQOANC3PNN5OKH37WY7ZXR4D4QPFRBFQGEWJIXNXIYIWGMROBI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
