# >:]

# name  = chk-sum.amos
# descr = AMOS-checksum calculation
# param = input string or scalar reference [ + <follow_truth> ]

return warn 'expected input string for AMOS-checksum calculation <{C1}>'
    if not @ARG;

my $input;
my $follow_truth = 0;    ## adjust output harmony for input truth state ? ##

if ( ref( $ARG[0] ) eq 'SCALAR' ) {

    $input        = shift(@ARG);                             ## scalar ref ##
    $follow_truth = <[base.cfg_boolean]>->( shift(@ARG) );   ## input truth ##

    $AMOS::CHKSUM::follow_truth = $follow_truth;    ## temporary switch ##

} else {
    $input = join( ' ', @ARG );
    $input = \$input if ref($input) ne 'SCALAR';
}

return warn '< chk-sum.amos > undefined input <{C1}>' if not defined $$input;

##[ CHECKSUM CALCULATION ]####################################################

return AMOS::CHKSUM::amos_chksum($input);    ## passing by reference ##

#.............................................................................
#DLXMHHENODCQB74UHWXB3GGVEQI7ET7GAUC3F2HM5RSYKB4JJSOOPQVYAA3KNHH5UPGURYPOD7NDA
#::: IPWJRDCATF2NMGH2EQ3DUWZ7DSHNQHPW6RSUJ4HOBQM65HSIJP7 :::: NAILARA AMOS :::
# :: NCAAQHFWTYFVA2GY7AQ5PXYGA6LK664IX3CXXJVUIML4WWMABICI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
