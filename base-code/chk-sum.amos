# >:]

# name  = chk-sum.amos
# descr = AMOS-checksum calculation
# param = input string or scalar reference [ + <follow_truth> ]

my $input;
my @modes = @{ $AMOS::CHKSUM::algorithm_set_up{'elf_truth_modes'} };

return warn 'expected input string for AMOS-checksum calculation <{C1}>'
    if not @ARG;

if ( not length ref( $ARG[0] ) ) {
    $input = \join( ' ', @ARG );    ## CREATING REFERENCE TO DATA ##
} else {
    $input = shift(@ARG);           ## PASSED BY REFERENCE ##
    @modes = grep {m|^\d{1,2}$|} @ARG if grep {m|^\d{1,2}$|} @ARG;
}

return warn '< chk-sum.amos > undefined input <{C1}>' if not defined $$input;

##[ CHECKSUM CALCULATION ]####################################################

return AMOS::CHKSUM::amos_chksum( $input, @modes ); ## passing by reference ##

#.............................................................................
#B6ZPHOGBYVUQJGKOKRRKEU4G5TMUXDEZ3VIFHOM5D7YSMJX6TL7I4XAEIYDEXQZIQ7MTBUYLAJUYM
#::: XOUY6NE365J54SNKFYKRRYLEELOQ7SR5ZTFPTWP5J2JRDKRUTEE :::: NAILARA AMOS :::
# :: 2UMZ77QEH25WE4T47OQ6FDLYNRXDBFTLIW7VBQRTXU2A5BJ5VKBY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
