# >:]

# name  = fs.cmd.unmount
# param = <mount-point>
# descr = mount the specified device / filesystem

my $mount_point = $$call{'args'};
return { 'mode' => 'false', 'data' => 'expected mount-point parameter' }
    if not defined $mount_point;
$mount_point =~ s|/+$|| if length($mount_point) > 1;
return {
    'mode' => 'false',
    'data' => 'specified mount-point does not exist'
    }
    if !-d $mount_point;

my $status = <[fs.is_mounted]>->($mount_point);

return {
    'mode' => 'false',
    'data' => "no filesystem mounted on $mount_point"
    }
    if $status != 1;

<[base.log]>->( 1, "unmounting '$mount_point'.." );
my $msg = 'unmounted';
if ( system( '/bin/umount', $mount_point ) != 0 ) {
    <[base.log]>->( 0, ": unable to unmount '$mount_point', using force!" );
    $msg = 'unmounted [forced!]';
    if ( system( '/bin/umount', '-f', '-l', $mount_point ) != 0
        or <[fs.is_mounted]>->($mount_point) ) {
        <[base.log]>->( 0, ": forced unmount of '$mount_point' failed!" );
        return { 'mode' => 'false', 'data' => 'unmount failed!' };
    } else {
        <[base.log]>->( 1, ": : forced unmount was successful" );
    }
}

return { 'mode' => 'true', 'data' => $msg };

#.............................................................................
#SHBTZK2EPRLODCD2B5WQCXIYHLJHI4FB467Z3MZHLHGTMS7BTCCM57WVR75EKX22IHQUDBBPLKLAG
#::: QXTPFXP7O7OJB42VAZLLSPHFR3QGLGFZU2EIHRO5QZCXC57M3OC :::: NAILARA AMOS :::
# :: LQAFICK5JCF34LHIFY5QEH4ZHBXDBKZW343NGGZLA46JHYF7MABA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
