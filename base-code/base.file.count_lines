# >:]

# name    = base.file.count_lines
# credits = source adapted from File::CountLines

my ( $filename, $seperator, $blocksize ) = @_;

$seperator //= "\n";
$blocksize ||= 4096;

open my $handle, '<:raw', $filename
    or return warn "cannot open '$filename' [ \l$OS_ERROR ]";
binmode $handle;
my $lines = 0;
$seperator =~ s/([\\{}])/\\$1/g;

my $sysread_status;
eval qq[
    while (\$sysread_status = sysread \$handle, my \$buffer, $blocksize) {
        \$lines += (\$buffer =~ tr{$seperator}{});
    }
];

die "cannot sysread() from '$filename' : \l$OS_ERROR"
    unless defined($sysread_status);
close $handle or warn "cannot close '$filename' : \l$OS_ERROR";

return $lines;

#.............................................................................
#A57GX5YL456KWWSASFSYRA5PV4RFRWG4IZZ5RMVMUJFGBNF3DVEIKZNGZHXOD766BNDTCWEIW3NUO
#::: JUOA45N4GUKS4DYUDG5GVKXCIT24NIIS37ITTNRHYME33EBJLZA :::: NAILARA AMOS :::
# :: 27IPL4RYPVKSP3MD4SZDBXMLW4ZHUV26PLN2CQ6SRUXA7BSEZKCY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
