# >:]

# name  = base.handler.read
# descr = session input handler

my $id = $_[0]->w->data;
my $fd = $_[0]->w->fd;

if (   not defined $id
    or not defined $data{'session'}{$id}
    or defined $data{'session'}{$id}
    and (  $data{'session'}{$id}{'shutdown'} // 0
        or $data{'session'}{$id}{'flush_shutdown'} // 0 )
) {
    $_[0]->w->cancel; ## removing from event management ##
    $id //= '---';    ## <-- !!! session p7-log ?                        [LLL]
    my $type = defined $data{'session'}{$id} ? qw| removed | : qw| closing |;
    if ( $type ne qw| closing | or not $fd->eof ) {
        <[base.log]>->( 1, "[$id] handler of $type session called." );
        return undef;
    }
}

my $session = $data{'session'}{$id};

if ( not fileno $session->{'handle'} ) {    ##  filehandle gone ?  ##
    $session->{'last-bytes-read'} = 0;
    $session->{'flush_shutdown'}  = 1;
    $_[0]->w->cancel;
    return;
}

$data{'handle'}{ $session->{'handle'} }->{'paused'} //= 0;

#    'read-mode'      => 'line',  ## line | bytes ## [ protocol state ]
#    'read-to-fh'     => undef,   ##  bypass buffer when set  ##

my $return_code = <[net.read_proto_line]>->($id);    ##  read one line  ##

if ( $return_code > 1 ) {    ##  disconnect  ##
    $session->{'last-bytes-read'} = 0;
    $session->{'flush_shutdown'}  = 1;
    $_[0]->w->cancel;
} else {

    ##  pause session input when no size left or target not reading  ## [LLL]

    my $bfs       = length( $session->{'buffer'}->{'input'} ) // 0;
    my $size_left = $data{'size'}->{'buffer'}->{'input'} - $bfs;

    if ( $size_left > 0 ) {

    $_[0]->w->start ;  ##  when == 0 : set timeout  ##  [LLL]

    } else {
        warn "<< input paused >> size left : $size_left";
     }
}

return $return_code; ##  2 : disconnect | 1 : more to read | 0 : completed  ##

#.............................................................................
#2WAU62X4ADSQTI4KTDUEGPE5Q42YZ4K4CDSHC2PCJL5FW76JGWUGY4VVEMCAGWN363T53FMXT2AFC
#::: QQ5BEGA5O5HI7EX5TUEDPI3PBHBEPTQZB4QBXRYXBWGXUFTMVZX :::: NAILARA AMOS :::
# :: WEHGPGICATJRBH4DXGJ776CR3MVGSQEVRT6SSJ7NLY44VA2G4MDY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
