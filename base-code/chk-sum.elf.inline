# >:]

# name  = chk-sum.elf.inline

my $input_ref = \'';    ## empty ##
my $start_sum = 0;      ## new input ##
my $elf_mode  = 4;      ## base elf mode ##

if ( ref( $ARG[0] ) eq 'SCALAR' ) {
    $input_ref = shift;
    $start_sum = shift if @ARG and $ARG[0] =~ m{^(0+|\d{7,9})$};
    $elf_mode  = shift if @ARG and $ARG[0] =~ m|^\d{1,2}$|;

    warn '< elf.inline > option not expected [ '
        . shift
        . ' ] redundant mode param ? <{C1}>'
        if @ARG;

} elsif ( @ARG and ref( $ARG[0] ) eq '' ) {    ## string input \ no mode ., ##
    $input_ref = \$ARG[0];
}

## add start checksum and mode parameters ## [LLL]

warn 'inline_elf() not available [ compilation successful ? ] <{C1}>'
    if not defined &inline_elf;

## use AMOS call version ## [LLL]

my $len = length($$input_ref);

## parameters : < elf-mode > , < start-csum > , < input-data >, < data-len >
return
    sprintf( '%09d', inline_elf( $elf_mode, $start_sum, $$input_ref, $len ) );

#.............................................................................
#OQEKVUKQAM2WBKKC7BE3DHXYZLMWP6EO3FKI5UYBAH7A4AN3AG7OJRO22X4TNAWYJBY5L6ZKFWHAM
#::: DITRQL7CHXFTUFQHQRPYWUA4NCFUW7RSVH23M32GTMDB2Q272FH :::: NAILARA AMOS :::
# :: RB2W55N6Y6MQHLRYLTLBD5RQ3J4LLTB36QLDFI4L6DG7LWPHQUCA :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
