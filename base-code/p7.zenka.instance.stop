# >:]

# name  = p7.zenka.instance.stop

my $instance_id = shift;

if ( exists <zenka.instance.shutdown>->{$instance_id} ) {
    <[base.log]>->(
        1,
        "instance $instance_id already shutting down, skipping stop command."
    );
    return;
}

my $instance = <p7.zenka.instance>->{$instance_id};

return warn "instance.stop: instance id $instance_id does not exist."
    if not defined $instance;

if ( exists $instance->{'timer'}->{'verify_instance'} ) {
    $instance->{'timer'}->{'verify_instance'}->cancel;
    delete $instance->{'timer'}->{'verify_instance'};
    delete $instance->{'timer'} if !keys %{ $instance->{'timer'} };
}

my $zenka_name = $instance->{'zenka_name'};
my $job_id     = $instance->{'job_id'};

<[base.log]>->( 1, "terminating instance $instance_id ['$zenka_name'].," );

<zenka.instance.shutdown>->{$instance_id} = <[base.time]>->(5);

<[p7.cancel_instance_timers]>->($instance_id);

delete <callback.session.closing_last> if $instance->{'is-cube'};

if ( my $process_id = $instance->{'process'}->{'id'} ) {
    <p7.process.instance_cache>->{$process_id} = $instance_id;
    delete <p7.child>->{$process_id};
    <[p7.terminate_process]>->($process_id);
}

# <[zenka.change_status]>->( $instance_id, 'shutdown' );
<[jobqueue.remove_job]>->($job_id);

# undef $zenka_instance->{'output_buffer'}; # --> done in output_handler

#.............................................................................
#DSGOUHPNWXSLJFXAL7R2JPOHUHXFDYQIEFNH5VTF2VD3SNZK27VANJNH6TJXOEUDXJLBETWHRCGTW
#::: BHPELYXTYANPB6UCTOQS2477VRVJF7PH4DS7PM7PBHMHU4H3EXX :::: NAILARA AMOS :::
# :: OV5DT5NMLMAWE6U7LNNBQ4JWQQFAJLOM3VRZW6OORY6TIB5QPMAQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
