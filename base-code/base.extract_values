# >:]

# name = base.extract_values

my $entries        = 0;
my $conf_key       = shift;
my $file_ref       = shift // [];
my $resolve_values = ( @_ and $_[0] eq 'resolved' ) ? 1 : 0;
if ( $conf_key and $conf_key !~ /[{}]/ ) {
    $conf_key =~ s/'//g;
    $conf_key =~ s/\./'}{'/g;
    $conf_key = "{'$conf_key'}";
}
<base.parser.config.errors> //= 0;
my $reload_mode = <base.parser.config.reloading> // 0;
my $last_line   = '';
foreach my $conf_line ( @{$file_ref} ) {
    $conf_line =~ s/[ \t]*#.*|[ \t]*\.:.*| +$|[\r\n\t]+//g;
    if ( $conf_line =~ s|\\ *$|| ) {
        $last_line .= $conf_line;
        next;
    } elsif ( length($last_line) ) {
        $conf_line =~ s|^[ \t]+||;
        $conf_line = "$last_line$conf_line";
        $last_line = '';
    }
    $conf_line =~ s/(^[^=]+=)[ \t]+/$1/;
    ( my $name, my $value ) = split( /=/, $conf_line );
    if ( defined $value ) {
        $name  =~ s/[ \t]+//g;
        $name  =~ s/\./'}{'/g;
        $value =~ s/'//g;
        if ($resolve_values) {
            while ( $value =~ m{<([^>]+)>} ) {
                my $key      = $1;
                my $resolved = <[base.resolve_key]>->($key);
                $resolved = ref($resolved) eq 'SCALAR' ? $$resolved : '';
                $resolved //= '';
                $value =~ s|<$key>|$resolved|g;
            }
        }
        my $conf_hash = "\$data" . $conf_key . "{'$name'}";

      # do not overwrite results of init commands with raw nailara cmd strings
        next if $reload_mode and $value =~ /^\[[^\]]+\]/;

        my $cmd = "$conf_hash='$value'";
        if ( defined $data{'system'}{'verbosity'}{'console'}
            and $data{'system'}{'verbosity'}{'console'} > 2 ) {
            <[base.log]>->( 1, $cmd );
        }
        eval("$cmd");
        if ($EVAL_ERROR) {
            <base.parser.config.errors>++;
            <[base.log]>->(
                0, "WARNING: ERROR DURING CONFIG PARSING: ($cmd) $OS_ERROR"
            );
            undef $EVAL_ERROR;
        } else {
            $entries++;
        }
    }
}
return $entries;

#.............................................................................
#ONV47LLMZGJANDJPVLHSRFPMBJ66WISP2LQG7TG64G2JOWYHBWRTETMQU3CPIBHLKJ3GRQERTJMLI
#::: 4NVBDAHUEH6SYUUFA2RGIQBK2BP67MYBCZRERCHLCT5VAYHRJHS :::: NAILARA AMOS :::
# :: IH3XBACU7DCY5AOI2J2BTZPFI6W3D3XXZN4NGSY7S3KOQWZUF4DQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
