## >:] ##

# name = base.X-11.get_geometry

my $user     = shift // 'cube';
my $cmd_path = shift // '';
$cmd_path .= '.' if length($cmd_path);
my $zenka_subname = <system.zenka.subname>;

my ($local_sid) = keys( %{ $data{'user'}{$user}{'session'} } );

my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $sn_str
    = defined $zenka_subname
    ? ' ' . <system.zenka.name> . "[$zenka_subname]"
    : '';

my $sn_log_str = length($sn_str) ? " for zenka$sn_str" : '';
<[base.log]>->( 1, "requesting geometry$sn_log_str .," );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[net.out]>->(
    $cube_fh, "($cmd_id)${cmd_path}composition.get_geometry$sn_str\n"
);

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$cube_fh>;
    die '<< cube handle had an exception >>'
        if not defined $reply_string or !length($reply_string);

    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(TRUE|FALSE) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)TRUE ([^\n]+)\n$} ) {
    <x11.geometry> = ${^CAPTURE}[0];
    <[base.logs]>->( 'received window geometry ., [%s]', <x11.geometry> );
    return <x11.geometry>;
}

# else [ no composition zenka present or no geometry for zenka configured ]
my $err_msg = "unexpected reply from composition zenka ['$reply_string']";

$err_msg = sprintf( ': << geometry not defined%s >>', $sn_log_str )
    if $reply_string =~ m|FALSE no geometry|
    or $reply_string =~ m|FALSE command |;

<[base.log]>->( 1, $err_msg );

# use full X server geometry as window geometry..,
$cmd_id = <[base.gen_id]>->( $data{'route'} );
<[net.out]>->( $cube_fh, "($cmd_id)${cmd_path}X-11.get_screen_size\n" );

$matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$cube_fh>;
    die '<< cube handle had an exception >>'
        if not defined $reply_string or not length $reply_string;

    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(TRUE|FALSE) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)TRUE ([^\n]+)\n$} ) {
    ( my $size_str = $1 ) =~ s| |x|;
    <x11.geometry> = "$size_str+0+0";
    <[base.log]>->( 1, "geometry taken from X-11 screen size [$size_str]" );
    <x11.geometry_was_undefined> = 1;
    return <x11.geometry>;
} else {
    <[base.log]>->( 1, '<< window geometry not defined >>' );
    return undef;
}

#,,..,,,.,.,.,.,.,,..,,..,,.,,.,,,.,.,,,.,.,,,..,,...,...,,.,,.,,,.,,,.,,,,..,
#NYJKRBAGBX3H76NGP4VK4FZNALIQU7NX56556Z6K3LPAOG5EIQ7FMMBO4KBENDLAFXMZJNBNYF7E4
#\\\|VNIFVROYKJ7VULDM4OPU4CMWMF5BFDIV5BHEKZTP4CSH3KZVKRB \ / AMOS7 \ YOURUM ::
#\[7]32BQCXP2V7TRLMD3JNEU5OJWBNSTZIJL6HQ2O46UZFVAVCQQUWCA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
