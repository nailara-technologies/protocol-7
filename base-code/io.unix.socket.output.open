# >:]

# name = io.unix.socket.output.open

my $socket_file = $_[0];

if ( !-S $socket_file ) {
    <[base.log]>->(
        0, "[!] unix domain socket '$socket_file' does not exist.,"
    );
    return undef;
}

my $return_socket = IO::Socket::UNIX->new(
    Type => SOCK_STREAM(),
    Peer => $socket_file,
    )
    or <[base.log]>->(
    0, "io.unix.socket.output.open : \l$OS_ERROR! ('$socket_file')"
    );

if (    defined $return_socket
    and -S $return_socket
    and $return_socket->connected ) {
    <[base.log]>->( 1, "connected to unix socket [$socket_file]" );

    $data{'handle'}{$return_socket}{'link'} = 'unix';
    $data{'handle'}{$return_socket}{'mode'} = 'output';

    return $return_socket;
} else {
    <[base.log]>->(
        0, "[!] can't connect to unix socket [$socket_file] : \l$OS_ERROR"
    );
    return 0;
}

#.............................................................................
#FZQ3TP6ONLA4534KTFPB6SBN4BO5YWLBWWNSSGMF5JGJ47GZBJS6JGLJQ7DI2XQ6I6H4BPNXDJ3TE
#::: ZMIAJNEYBY2LYH4C2GNPEIIB6UFPZV6FG2ZYT52JEIU5POQJCBP :::: NAILARA AMOS :::
# :: OHT2F7IJRJKFZ5FACZMISF6FQG4DQGGKLQZYAQ2ACWNOFZ7MVCDQ :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
