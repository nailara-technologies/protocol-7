# >:]

# name  = mediainfo.cmd.get_info
# param = <file> [info_keys]
# descr = return information about audio or video files

return { 'mode' => 'false', 'data' => 'expected path to content file' }
    if !length( $$call{'args'} );

my ( $file_path, @info_keys ) = split( m| +|, $$call{'args'} );

return { 'mode' => 'false', 'data' => 'file not found' } if !-f $file_path;

my $file_info = new Mediainfo( 'filename' => $file_path );

@info_keys = sort( keys %{$file_info} ) if !@info_keys;

my $key_max_len = max map {length} @info_keys;

my $m_reply;
foreach my $i_key (@info_keys) {
    return {
        'mode' => 'false',
        'data' => "mediainfo property key not found ['$i_key']"
        }
        if not exists $file_info->{$i_key};

    $m_reply
        .= sprintf( "%-${key_max_len}s : %s\n", $i_key,
        $file_info->{$i_key} );
}

return { 'mode' => 'data', 'data' => $m_reply };

#.............................................................................
#KOBOU6LFMYJOL7LSJQINOZGEZSC7LT6JVDIPFMDXNCYPPJG4AI7X74NIIE6XG5DLONCXXRAMJLACM
#::: Q7S7ZKROYV6NFARS6LFVJXDGFSC5Z6R5VQPUDB3RVC46F3NYLGC :::: NAILARA AMOS :::
# :: YROKPASXIHOBGTQCIM7PJ7MWVKD4A66TTNKUIO22VJWT54NFXECY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
