# >:]

# name  = base.event.add_io
# descr = install I/O watcher on a filehandle

return undef
    if ref( $_[0] ) ne 'HASH'
    and warn 'expected a hash reference <{C1}>';

##  alternative direct code ref callback parameters  ##
my $code_ref
    = ( defined ${ $_[0] }{'cb'} and ref( ${ $_[0] }{'cb'} ) eq qw| CODE | )
    ? ${ $_[0] }{'cb'}
    : undef;

## regular %code callback name ##
my $callback = ${ $_[0] }{'handler'};   ##  <-- $code{'<handler_name>'} .., ##

return undef
    if not $code_ref
    and not defined $callback
    and warn ": event.add_io : callback ['handler'] is missing <{C1}>";
return undef
    if not $code_ref
    and not defined $code{$callback}
    and warn ": event.add_io : callback '$callback' does not exist <{C1}>";

my @timeout_callback
    = defined ${ $_[0] }{'timeout_cb'}
    ? ( 'timeout_cb' => sub { &{ ${ $_[0] }{'timeout_cb'} } } )
    : ();

my $poll_def = scalar(@timeout_callback) ? qw| rt | : qw| r |;

return Event->io(
    'fd'      => ${ $_[0] }{'fd'},
    'poll'    => ${ $_[0] }{'poll'}    // $poll_def,
    'repeat'  => ${ $_[0] }{'repeat'}  // 1,
    'async'   => ${ $_[0] }{'async'}   // 0,
    'desc'    => ${ $_[0] }{'desc'}    // $callback,
    'prio'    => ${ $_[0] }{'desc'}    // 3,
    'timeout' => ${ $_[0] }{'timeout'} // 0,
    'hard'    => ${ $_[0] }{'hard'}    // 0,
    'data'    => ${ $_[0] }{'data'},
    'cb'      => $code_ref // sub { &{ $code{$callback} } },  ## 'cb' first ##
    @timeout_callback
);

#.............................................................................
#LQQ2RMJZDKPHI56CBWMFWBJYQ4EIFXOBHMHAWZV5JYIF23YE5VPBK2E2CKBGHYXPACBCD7TFJMZAY
#::: QJB6SQKGINYVTEYHJ4UTSK4E4VHNL3CVJ4AXFHBTBCQQYCYO6H4 :::: NAILARA AMOS :::
# :: RC3RAB225XOUMQHEQFAEANWMRP63RJQEJJXARFQEKW3Z6SCPDYCI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
