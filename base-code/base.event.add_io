## >:] ##

# name  = base.event.add_io
# descr = install I\O watcher\handler on a filehandle

return undef
    if ref( my $params = shift // '' ) ne qw| HASH |
    and warn 'expected a hash reference <{C1}>';

##  alternative direct code ref callback parameters  ##
my $code_ref
    = ( defined $params->{'cb'} and ref( $params->{'cb'} ) eq qw| CODE | )
    ? $params->{'cb'}
    : undef;

## regular %code callback name ##
my $callback = $params->{'handler'};    ##  <-- $code{'<handler_name>'} .., ##

return undef
    if not $code_ref
    and not defined $callback
    and warn ": event.add_io : callback ['handler'] is missing <{C1}>";
return undef
    if not $code_ref
    and not defined $code{$callback}
    and warn ": event.add_io : callback '$callback' does not exist <{C1}>";

my @timeout_callback
    = defined $params->{'timeout_cb'}
    ? ( 'timeout_cb' => sub { &{ $params->{'timeout_cb'} } } )
    : ();

my $poll_def = scalar(@timeout_callback) ? qw| rt | : qw| r |;

return Event->io(    ##  bytewise-mode -1 ?  ## [LLL]
    'fd'      => $params->{'fd'},
    'poll'    => $params->{'poll'}    // $poll_def,
    'repeat'  => $params->{'repeat'}  // 1,
    'async'   => $params->{'async'}   // 0,
    'desc'    => $params->{'desc'}    // $callback,
    'prio'    => $params->{'desc'}    // 3,
    'timeout' => $params->{'timeout'} // 0,
    'hard'    => $params->{'hard'}    // 0,
    'data'    => $params->{'data'},
    'cb'      => $code_ref // sub { &{ $code{$callback} } },  ## 'cb' first ##
    @timeout_callback
);

#,,..,.,,,,..,...,.,,,,.,,.,.,..,,,.,,,..,,.,,..,,...,...,.,,,,..,...,.,.,,..,
#CYGF7CLHYUHOAL4YW35DTIG42PNVKJQCTEWXAI2DGNYNXLCGHMVPKHATIUT25IDNIWR54I6FLVKRM
#\\\|QRUC2TGQIWLH5K7TQX5NAI3FLGQDI5FFS2KIG5NIF3DY5QNWYAE \ / AMOS7 \ YOURUM ::
#\[7]Q3U47HTOVLEBSA7Y46IKUTN3RYRWQFXHHATWNZ4TJ25RSIBSIEAI 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
