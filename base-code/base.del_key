## >:] ##

# name  = base.del_key

my $params = shift // {};

my $data_ref = *data{HASH};
my $d_key_string;
my $silent = 1;

if ( ref $params eq qw| HASH | ) {    ##  parameter hashref syntax  ##

    $data_ref     = $params->{'data_ref'} if defined $params->{'data_ref'};
    $d_key_string = $params->{'del_key'}  if defined $params->{'del_key'};
    $silent       = $params->{'silent'}   if defined $params->{'silent'};

} elsif ( length $params ) {    ## %data key as string syntax ##
    $d_key_string = $params;
}

return warn 'no key specified <{C1}>'
    if not defined $d_key_string or not length $d_key_string;

my @dtree = <[base.parser.data_hkey_tree]>->($d_key_string);

return if not @dtree;           ## syntax not valid ##
my $last_key = pop @dtree;

my $parent_href = <[base.resolve_key_parent]>->($d_key_string);

if ( defined $parent_href and ref $parent_href eq qw| HASH | ) {

    <[base.logs]>->( ": del_key : deleting key '%s'", $d_key_string );
    return delete $parent_href->{$last_key};

} else {
    warn sprintf( 'no such key [%s] <{C1}>', $d_key_string );
    return 0;
}

#,,,,,,..,..,,,,,,...,,,.,,.,,.,,,..,,...,..,,..,,...,...,...,..,,.,.,,,.,..,,
#RRJ6HKPPAGWRPFAHV4ID2ICU6EDFZNGM57PXIZGOVXISOYWKRTW3JLO3PLWD2GSDHJ7XOUCLRPM3K
#\\\|3WCW4GL5A5WQCOXOPC35G6UIR3557ZYO6VCHYQADUSL7P3YLWKZ \ / AMOS7 \ YOURUM ::
#\[7]MUJQ5YI5VC3APFDCNFDADDC2JVDF6LJXRTUKE2QVR6I3Z5356ICA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
