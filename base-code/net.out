## >:] ##

# name  = net.out
# descr = write data to client
# args  = filehandle, data [string]

if ( fileno $ARG[0] ) {
    my $cid = $data{'handle'}{ $ARG[0] }{'cid'};

    if (    defined $data{'handle'}{ $ARG[0] }
        and defined $cid
        and defined $data{'session'}{$cid}{'output'}
        and defined $data{'session'}{$cid}{'output'}{'handler'} ) {
        if (defined &{ $code{ $data{'session'}{$cid}{'output'}{'handler'} } }
        ) {
            <[base.s_write]>->(
                $ARG[0],
                $code{ $data{'session'}{$cid}{'output'}{'handler'} }
                    ->( $ARG[1] )
            );
        } else {
            <[base.log]>->(
                0, "[$ARG[0]] output chain handler is not valid. [ deleted ]"
            );
            $data{'session'}{$cid}{'output'}{'handler'} = undef;

            ## <[base.session.shutdown]>->( $id, 'filter chain error' );

            return 1;
        }
    } else {
        <[base.s_write]>->( $ARG[0], $ARG[1] );
    }

    if ( defined $cid ) {
        $data{'session'}{$cid}{'bytes'}{'in'} += length( $ARG[1] );
    } else {
        $data{'handle'}{ $ARG[0] }{'bytes'}{'in'} += length( $ARG[1] );
    }
    return 0;
} else {
    <[base.log]>->( 0, "[$ARG[0]] cannot send to socket" );
    return 1;
}

#,,,,,.,.,...,,,,,..,,..,,...,.,.,,,.,..,,,,.,..,,...,..,,..,,,..,,,.,,..,,,,,
#UE6XJFVWQXKUHWP3WSDMMM7RJH6FD7ZEOP26XXEK4SV3WG7MXKOA2KRHXBZ4UPSORRW4S7GUBX3LI
#\\\|6XL6LAYNPGKMSL7DHL7RPAVKBMDV5OX4M5TAUUDZXMTLRDQUC2A \ / AMOS7 \ YOURUM ::
#\[7]CL5FM7L5LLVMV4B37IDHDWPC2U7NFPCVPZFL2IB6INEI7WBWYQDA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
