# >:]

# name = mpv.handler.pipe.playlist

my $playlist_str  = '';
my $playlist_json = shift // '';
my $reply_id      = shift @{<mpv.reply_ids>};

if ( length($playlist_json) ) {
    my $playlist_data = <mpv.json.parser>->decode($playlist_json);
    map {
        $playlist_str .= exists $ARG->{'playing'} ? ':. ' : ':  ';
        $playlist_str .= $ARG->{'filename'} . "\n"
    } @{$playlist_data};
} else {
    <[base.log]>->(
        0, "playlist decoding handler called with empty string (invalid json)"
    );
}

<[base.callback.cmd_reply]>->(
    $reply_id,
    {   'mode' => qw| size |,
        'data' => $playlist_str
    }
);

#.............................................................................
#O6PQYWQSLISADINJKGHYE7M3LCZEKD3AK5LDCH36T3FVETKAXASSYRH2ZIRTAZO42QVKLXVXPDBI4
#::: UGHJOH7KLJP2LWUDMBE6TFFZFQODAXBHMF5FPKC2RNABGJRTXNI :::: NAILARA AMOS :::
# :: Q3MHOGWZO3DXXD3PDY7EQDRWZKWFLX27SRRLV3FQGJKGN2ALTACY :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
