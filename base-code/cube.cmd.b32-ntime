## >:] ##

# name  = cube.cmd.b32-ntime
# descr = decode BASE-32 to numerical network time

my $param  = $$call{'args'} // '';
my $B32_re = <regex.base.base_32>;

return {
    'mode' => 'false',
    'data' => 'expected BASE-32 encoded network time'
    }
    if $param !~ m|^$B32_re{1,22}$|;

my $ntime_ber = eval { decode_b32r($param) };

return {
    'mode' => 'false',
    'data' => 'BASE32 decoding error [ timestamp not valid ]'
    }
    if $EVAL_ERROR
    or not length( $ntime_ber // '' );

return {
    'mode' => 'false',
    'data' => 'decoded number is not valid [ expected compressed integer ]'
    }
    if not <[base.comp-int.is_valid]>->($ntime_ber);

return { 'mode' => 'true', 'data' => unpack( 'w', $ntime_ber ) };

#,,,,,..,,,,,,.,.,.,.,,..,,..,,,,,.,.,.,.,,,,,..,,...,...,...,.,,,,..,,,.,,..,
#W5UDOBN7MXZU3PEEBLFC3VELBBUB2G3IQJIJD6UP3AJEC3QQZLUZ7ZLRLIDNFEI5MHEPK3AALBVGG
#\\\|HHEUZBFHNNNVSBW44SANEDIFLRR6KAMTZ3BU3MOBIJUCDYKLME4 \ / AMOS7 \ YOURUM ::
#\[7]Q5TDEDJ5FLGVUJ6ZJ5PE5FZUYDNEKX4T6FKX2BQQI66TNFGQ4QCY 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
