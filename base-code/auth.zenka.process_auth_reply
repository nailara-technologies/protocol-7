## >:] ##

# name  = auth.zenka.process_auth_reply

my $backend_socket  = shift;
my $success_message = shift // 'success., =), cube authorized session.';

my $protocol_messages  = <protocol.protocol-7.connect>;
my $protocol_banner    = $protocol_messages->{'banner'};
my $proto_msg_timeout  = $protocol_messages->{'timeout'};
my $protocol_error_msg = $protocol_messages->{'protocol_error'};

if (   not defined $backend_socket
    or !-S $backend_socket
    or !$backend_socket->connected ) {
    <[base.log]>->(
        0,
        'cannot authenticate [ expecting valid socket ] '
            . <[base.caller]>->(1)
    );
    return undef;
}

( my $plugin = <[base.caller]>->(1) ) =~ s{^.*\[([^\.]+\.[^\.]+):\d+\]}{${1}};

if ( my $answer = readline($backend_socket) ) {
    chomp($answer) if defined $answer;
    if ( not defined $answer ) {
        <[base.log]>->( 0, '[X] connection lost :|' );
        <[base.log]>->( 2, "::: [ $plugin ]" );
        return undef;
    } elsif ( $answer eq 'AUTH_TRUE>:]' ) {
        <[base.log]>->( 1, "[*] $success_message" );
        <[base.log]>->( 2, "::: [ $plugin ]" );
        return $backend_socket;
    } elsif ( $answer eq 'AUTH_ERROR :|' ) {
        <[base.log]>->( 0, '[#] authentication error >:|' );
        <[base.log]>->( 2, "::: [ $plugin ]" );
        return undef;
    } elsif ( $answer eq '>:| timeout' ) {
        <[base.log]>->( 0, '[#] authentication timeout :|' );
        <[base.log]>->( 2, "::: [ $plugin ]" );
        return undef;
    } elsif ( $answer eq ':| auth_methods' ) {
        <[base.log]>->( 0, '[#] server side auth nethods error :|' );
        <[base.log]>->( 2, "::: [ $plugin ]" );
        return undef;
    } elsif ( $answer eq '>:| auth_methods' ) {
        <[base.log]>->( 0, '[#] client side auth nethods error :|' );
        <[base.log]>->( 2, "::: [ $plugin ]" );
        return undef;
    } else {    ##  >:[ speak protocol ? .., ##
        <[base.log]>->( 0, "[#] protocol mismatch :| [ $plugin ]" );
        <[base.log]>->( 0, "::: '$answer'" );
        return undef;
    }
} else {
    <[base.log]>->( 0, '[X] connection lost :|' ) and return undef;
}

#,,,.,...,,,.,,,,,.,,,,,,,.,.,..,,..,,.,.,,.,,..,,...,...,..,,..,,,,.,,..,..,,
#JBWL6VMUGPWK46N2C2RVNGO3G7Z3VFM4BFWACUQW3C6PGQ746FZBOXPTCY4NP2FO375CEEDCCU4DM
#\\\|RFY2TTUXJRALQCI5VF67MXD4YS66C62SIDD77P6SE6Y3WABZD2B \ / AMOS7 \ YOURUM ::
#\[7]B3D3577XC2DDLBRJTIH2IDATGACDQPVR3Y3WUE25DCX2KIOQSOCQ 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
