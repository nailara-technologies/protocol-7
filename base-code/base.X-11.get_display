## >:] ##

# name = base.X-11.get_display

my $silent_warnings = shift // 0;

my ($local_sid) = keys %{<user.cube.session>};

<[base.log]>->( 2, 'requesting display name from X-11 zenka.,' );

$data{'route'} //= {};
my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[net.out]>->( $cube_fh, sprintf( "(%d)X-11.get_display\n", $cmd_id ) );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$cube_fh>;
    die 'cube handle exception' if not defined $reply_string;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(TRUE|FALSE) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)TRUE ([^\n]+)\n$} ) {
    <x11.display> = ${^CAPTURE}[0];
    <[base.logs]>->( 'received X display name [%s]', <x11.display> );
    return <x11.display>;
} elsif ( $reply_string =~ m|^\($cmd_id\)FALSE command | ) {
    <x11.display> //= qw| :0.0 |;
    <[base.logs]>->(
        'no X-11 zenka found, using default display [%s]',
        <x11.display>
    );
    return <x11.display>;
} else {
    <[base.logs]>->(
        $silent_warnings ? 2 : 0,
        "not expected X-11 reply ['%s']",
        $reply_string
    );
    return undef;
}

#,,..,,,.,,,,,,..,,,.,,,,,,.,,,.,,.,.,.,,,,,,,..,,...,...,.,,,.,,,...,,..,.,.,
#EWCDWUC2EJFPE24RRXFJCY4EPJUKTO6CW2KAKQULKTJRWT6VCJN46UT5RET6VGR2PNBQ4HFIUFQ2A
#\\\|XV4VEZPF5LDANMM755UZBPYLN7QOK7A2C3GCOFKIE6VW774HJAM \ / AMOS7 \ YOURUM ::
#\[7]TZ3KFBXRX5OMEFMI5GZ6375PMSLAFSCSA44OYJ5KDTG5Q55SCADA 7  DATA SIGNATURE ::
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
