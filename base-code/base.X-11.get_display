# >:]

# name = base.X-11.get_display

my ($local_sid) = keys( %{<user.cube.session>} );

<[base.log]>->( 2, "requesting display name from X-11 zenka.," );

$data{'route'} //= {};
my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[net.out]>->( $cube_fh, "($cmd_id)X-11.get_display\n" );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$cube_fh>;
    die "cube handle exception" if not defined $reply_string;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(TRUE|FALSE) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)TRUE ([^\n]+)\n$} ) {
    <x11.display> = $1;
    <[base.log]>->( 1, "received X display name [" . <x11.display> . "]" );
    return <x11.display>;
} elsif ( $reply_string =~ /^\($cmd_id\)FALSE command unknown\n$/ ) {
    <x11.display> //= ':0.0';
    <[base.log]>->(
        1,
        "no X-11 zenka found, using default display [" . <x11.display> . "]"
    );
    return <x11.display>;
} else {
    <[base.log]>->( 0, "not expected X-11 reply ['$reply_string']" );
    return undef;
}

#.............................................................................
#TT47UBRMDNQDICWI3QGOS5IR4T4AGP3NRNA32BOMPQPXIK7MYBBTTUAYTAUNVO2L3X6EUXJ6E6JVG
#::: FV5KKBPPFAWMFRNCZKF7Y2ISN2VXZXYZLBUAUEI7IRT3AK2LN47 :::: NAILARA AMOS :::
# :: VOXOY4KT76UA4NRRQWJVXMOWGMJDIISV2EBXHL7GQUOVIDGAM4DI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
