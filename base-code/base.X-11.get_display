# >:]

# name = base.X-11.get_display

my ($local_sid) = keys( %{<user.cube.session>} );

<[base.log]>->( 2, "requesting display name from X-11 zenka.," );

$data{'route'} //= {};
my $cmd_id = <[base.gen_id]>->( $data{'route'} );

my $cube_fh = $data{'session'}{$local_sid}{'handle'};
<[net.out]>->( $cube_fh, "($cmd_id)X-11.get_display\n" );

my $reply_string;
my $matched_reply = 0;
while ( !$matched_reply ) {
    $reply_string = <$cube_fh>;
    die 'cube handle exception' if not defined $reply_string;
    $matched_reply = 1 if $reply_string =~ m{^\($cmd_id\)(TRUE|FALSE) };
    if ( !$matched_reply ) {
        $data{'session'}{$local_sid}{'buffer'}{'input'} .= $reply_string;
    }
}

if ( $reply_string =~ m{^\($cmd_id\)TRUE ([^\n]+)\n$} ) {
    <x11.display> = ${^CAPTURE}[0];
    <[base.logs]>->( 'received X display name [%s]', <x11.display> );
    return <x11.display>;
} elsif ( $reply_string =~ m|^\($cmd_id\)FALSE command | ) {
    <x11.display> //= qw| :0.0 |;
    <[base.logs]>->(
        'no X-11 zenka found, using default display [%s]',
        <x11.display>
    );
    return <x11.display>;
} else {
    <[base.logs]>->( 0, "not expected X-11 reply ['%s']", $reply_string );
    return undef;
}

#.............................................................................
#ZK32EFVQ76XW5FNYSZTUV7EBVLVCFQQXSGNS64ICTN34QUQA4YSD6IVVOFP442ISYRRVQFXBKTSKW
#::: PAXPWEJU4HM536LLNTOEPWOXAO62WDV3BZ2G7XXIG6WJ3ZF2B27 :::: NAILARA AMOS :::
# :: JR4GVXAD6WYREUDGMC57533PSZIA4EYGUS4KP6SOCOQ7MWSQFQAI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
