# >:]

# name = udev.load_rules

my @rule_files;
my @setup_names = @ARG;

<udev.rules> = {};    ## reset loaded rules ##

my $cfg_dir = <udev.cfg_search_path> //= <system.conf_path> . '/zenki/udev';

<[base.log]>->( 1, '..loading udev rule setup files..,' );

if (@setup_names) {
    @rule_files = map {"rules-set-up.$ARG"} @setup_names;
    my $s = @rule_files == 1 ? '' : 's';
    <[base.log]>->(
        1, sprintf( ":. intend to load %d rule file$s", scalar @setup_names )
    );
} else {
    my $dir_fh;
    <[base.log]>->( 1, 'no specific rule file configured, loading all .,' );
    opendir( $dir_fh, $cfg_dir ) or die " opening cfg dir : \l$OS_ERROR";
    map { push( @rule_files, $ARG ) if $ARG =~ m|^rules-set-up\..+$| }
        readdir($dir_fh);
    closedir($dir_fh);
}

return <[base.log]>->( 0, 'found no rules file to load' ) if !@rule_files;

foreach my $file (@rule_files) {
    <[base.log]>->( 1, ":. '$file'" );
    if ( not -f "$cfg_dir/$file" ) {
        <[base.log]>->( 0, "configured rule file '$file' not found .," );
    } else {
        <[base.load_section_config]>->( <udev.rules>, $cfg_dir, $file );
    }
}

#.............................................................................
#OZJA6JAQBFTEHJNIXH5TT6BPWR6XVSGG5SSUKMXXT7MGWYLQ2KCTKGMI4RLD7WFRKZK46ZLEIAHKK
#::: TYRXEOK7MA5F6MNLRUK5UU4JWWTSK2HZM3QCOERF6EIYI4LUTZJ :::: NAILARA AMOS :::
# :: VFI7SG23ERDQEJGRKG3NIWR6W5XZ3KIXYHZLFQ5SAR6NPHL2PGAI :: CODE SIGNATURE ::
# ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
